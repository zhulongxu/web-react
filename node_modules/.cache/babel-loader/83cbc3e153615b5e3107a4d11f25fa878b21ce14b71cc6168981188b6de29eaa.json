{"ast":null,"code":"\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RcTreeSelect, { SHOW_ALL, SHOW_CHILD, SHOW_PARENT, TreeNode } from 'rc-tree-select';\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport { getTransitionName } from '../_util/motion';\nimport genPurePanel from '../_util/PurePanel';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../form/context';\nimport useVariant from '../form/hooks/useVariants';\nimport mergedBuiltinPlacements from '../select/mergedBuiltinPlacements';\nimport useSelectStyle from '../select/style';\nimport useIcons from '../select/useIcons';\nimport useShowArrow from '../select/useShowArrow';\nimport { useCompactItemContext } from '../space/Compact';\nimport SwitcherIconCom from '../tree/utils/iconUtil';\nimport { useToken } from '../theme/internal';\nimport useStyle from './style';\nconst InternalTreeSelect = (props, ref) => {\n  var _a;\n  const {\n      prefixCls: customizePrefixCls,\n      size: customizeSize,\n      disabled: customDisabled,\n      bordered = true,\n      className,\n      rootClassName,\n      treeCheckable,\n      multiple,\n      listHeight = 256,\n      listItemHeight: customListItemHeight,\n      placement,\n      notFoundContent,\n      switcherIcon,\n      treeLine,\n      getPopupContainer,\n      popupClassName,\n      dropdownClassName,\n      treeIcon = false,\n      transitionName,\n      choiceTransitionName = '',\n      status: customStatus,\n      treeExpandAction,\n      builtinPlacements,\n      dropdownMatchSelectWidth,\n      popupMatchSelectWidth,\n      allowClear,\n      variant: customVariant,\n      dropdownStyle,\n      tagRender\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"size\", \"disabled\", \"bordered\", \"className\", \"rootClassName\", \"treeCheckable\", \"multiple\", \"listHeight\", \"listItemHeight\", \"placement\", \"notFoundContent\", \"switcherIcon\", \"treeLine\", \"getPopupContainer\", \"popupClassName\", \"dropdownClassName\", \"treeIcon\", \"transitionName\", \"choiceTransitionName\", \"status\", \"treeExpandAction\", \"builtinPlacements\", \"dropdownMatchSelectWidth\", \"popupMatchSelectWidth\", \"allowClear\", \"variant\", \"dropdownStyle\", \"tagRender\"]);\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    renderEmpty,\n    direction,\n    virtual,\n    popupMatchSelectWidth: contextPopupMatchSelectWidth,\n    popupOverflow\n  } = React.useContext(ConfigContext);\n  const [, token] = useToken();\n  const listItemHeight = customListItemHeight !== null && customListItemHeight !== void 0 ? customListItemHeight : (token === null || token === void 0 ? void 0 : token.controlHeightSM) + (token === null || token === void 0 ? void 0 : token.paddingXXS);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('TreeSelect');\n    process.env.NODE_ENV !== \"production\" ? warning(multiple !== false || !treeCheckable, 'usage', '`multiple` will always be `true` when `treeCheckable` is true') : void 0;\n    warning.deprecated(!dropdownClassName, 'dropdownClassName', 'popupClassName');\n    warning.deprecated(dropdownMatchSelectWidth === undefined, 'dropdownMatchSelectWidth', 'popupMatchSelectWidth');\n    process.env.NODE_ENV !== \"production\" ? warning(!('showArrow' in props), 'deprecated', '`showArrow` is deprecated which will be removed in next major version. It will be a default behavior, you can hide it by setting `suffixIcon` to null.') : void 0;\n    warning.deprecated(!('bordered' in props), 'bordered', 'variant');\n  }\n  const rootPrefixCls = getPrefixCls();\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  const treePrefixCls = getPrefixCls('select-tree', customizePrefixCls);\n  const treeSelectPrefixCls = getPrefixCls('tree-select', customizePrefixCls);\n  const {\n    compactSize,\n    compactItemClassnames\n  } = useCompactItemContext(prefixCls, direction);\n  const rootCls = useCSSVarCls(prefixCls);\n  const treeSelectRootCls = useCSSVarCls(treeSelectPrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useSelectStyle(prefixCls, rootCls);\n  const [treeSelectWrapCSSVar] = useStyle(treeSelectPrefixCls, treePrefixCls, treeSelectRootCls);\n  const [variant, enableVariantCls] = useVariant('treeSelect', customVariant, bordered);\n  const mergedDropdownClassName = classNames(popupClassName || dropdownClassName, `${treeSelectPrefixCls}-dropdown`, {\n    [`${treeSelectPrefixCls}-dropdown-rtl`]: direction === 'rtl'\n  }, rootClassName, cssVarCls, rootCls, treeSelectRootCls, hashId);\n  const isMultiple = !!(treeCheckable || multiple);\n  const showSuffixIcon = useShowArrow(props.suffixIcon, props.showArrow);\n  const mergedPopupMatchSelectWidth = (_a = popupMatchSelectWidth !== null && popupMatchSelectWidth !== void 0 ? popupMatchSelectWidth : dropdownMatchSelectWidth) !== null && _a !== void 0 ? _a : contextPopupMatchSelectWidth;\n  // ===================== Form =====================\n  const {\n    status: contextStatus,\n    hasFeedback,\n    isFormItemInput,\n    feedbackIcon\n  } = React.useContext(FormItemInputContext);\n  const mergedStatus = getMergedStatus(contextStatus, customStatus);\n  // ===================== Icons =====================\n  const {\n    suffixIcon,\n    removeIcon,\n    clearIcon\n  } = useIcons(Object.assign(Object.assign({}, restProps), {\n    multiple: isMultiple,\n    showSuffixIcon,\n    hasFeedback,\n    feedbackIcon,\n    prefixCls,\n    componentName: 'TreeSelect'\n  }));\n  const mergedAllowClear = allowClear === true ? {\n    clearIcon\n  } : allowClear;\n  // ===================== Empty =====================\n  let mergedNotFound;\n  if (notFoundContent !== undefined) {\n    mergedNotFound = notFoundContent;\n  } else {\n    mergedNotFound = (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Select')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Select\"\n    });\n  }\n  // ==================== Render =====================\n  const selectProps = omit(restProps, ['suffixIcon', 'removeIcon', 'clearIcon', 'itemIcon', 'switcherIcon']);\n  // ===================== Placement =====================\n  const memoizedPlacement = React.useMemo(() => {\n    if (placement !== undefined) {\n      return placement;\n    }\n    return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n  }, [placement, direction]);\n  const mergedSize = useSize(ctx => {\n    var _a;\n    return (_a = customizeSize !== null && customizeSize !== void 0 ? customizeSize : compactSize) !== null && _a !== void 0 ? _a : ctx;\n  });\n  // ===================== Disabled =====================\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  const mergedClassName = classNames(!customizePrefixCls && treeSelectPrefixCls, {\n    [`${prefixCls}-lg`]: mergedSize === 'large',\n    [`${prefixCls}-sm`]: mergedSize === 'small',\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-${variant}`]: enableVariantCls,\n    [`${prefixCls}-in-form-item`]: isFormItemInput\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), compactItemClassnames, className, rootClassName, cssVarCls, rootCls, treeSelectRootCls, hashId);\n  const renderSwitcherIcon = nodeProps => (/*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: treePrefixCls,\n    switcherIcon: switcherIcon,\n    treeNodeProps: nodeProps,\n    showLine: treeLine\n  }));\n  // ============================ zIndex ============================\n  const [zIndex] = useZIndex('SelectLike', dropdownStyle === null || dropdownStyle === void 0 ? void 0 : dropdownStyle.zIndex);\n  const returnNode = /*#__PURE__*/React.createElement(RcTreeSelect, Object.assign({\n    virtual: virtual,\n    disabled: mergedDisabled\n  }, selectProps, {\n    dropdownMatchSelectWidth: mergedPopupMatchSelectWidth,\n    builtinPlacements: mergedBuiltinPlacements(builtinPlacements, popupOverflow),\n    ref: ref,\n    prefixCls: prefixCls,\n    className: mergedClassName,\n    listHeight: listHeight,\n    listItemHeight: listItemHeight,\n    treeCheckable: treeCheckable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-tree-checkbox-inner`\n    }) : treeCheckable,\n    treeLine: !!treeLine,\n    suffixIcon: suffixIcon,\n    multiple: isMultiple,\n    placement: memoizedPlacement,\n    removeIcon: removeIcon,\n    allowClear: mergedAllowClear,\n    switcherIcon: renderSwitcherIcon,\n    showTreeIcon: treeIcon,\n    notFoundContent: mergedNotFound,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    treeMotion: null,\n    dropdownClassName: mergedDropdownClassName,\n    dropdownStyle: Object.assign(Object.assign({}, dropdownStyle), {\n      zIndex\n    }),\n    choiceTransitionName: getTransitionName(rootPrefixCls, '', choiceTransitionName),\n    transitionName: getTransitionName(rootPrefixCls, 'slide-up', transitionName),\n    treeExpandAction: treeExpandAction,\n    tagRender: isMultiple ? tagRender : undefined\n  }));\n  return wrapCSSVar(treeSelectWrapCSSVar(returnNode));\n};\nconst TreeSelectRef = /*#__PURE__*/React.forwardRef(InternalTreeSelect);\nconst TreeSelect = TreeSelectRef;\n// We don't care debug panel\n/* istanbul ignore next */\nconst PurePanel = genPurePanel(TreeSelect);\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nTreeSelect._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  TreeSelect.displayName = 'TreeSelect';\n}\nexport { TreeNode };\nexport default TreeSelect;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","RcTreeSelect","SHOW_ALL","SHOW_CHILD","SHOW_PARENT","TreeNode","omit","useZIndex","getTransitionName","genPurePanel","getMergedStatus","getStatusClassNames","devUseWarning","ConfigContext","DefaultRenderEmpty","DisabledContext","useCSSVarCls","useSize","FormItemInputContext","useVariant","mergedBuiltinPlacements","useSelectStyle","useIcons","useShowArrow","useCompactItemContext","SwitcherIconCom","useToken","useStyle","InternalTreeSelect","props","ref","_a","prefixCls","customizePrefixCls","size","customizeSize","disabled","customDisabled","bordered","className","rootClassName","treeCheckable","multiple","listHeight","listItemHeight","customListItemHeight","placement","notFoundContent","switcherIcon","treeLine","getPopupContainer","popupClassName","dropdownClassName","treeIcon","transitionName","choiceTransitionName","status","customStatus","treeExpandAction","builtinPlacements","dropdownMatchSelectWidth","popupMatchSelectWidth","allowClear","variant","customVariant","dropdownStyle","tagRender","restProps","getContextPopupContainer","getPrefixCls","renderEmpty","direction","virtual","contextPopupMatchSelectWidth","popupOverflow","useContext","token","controlHeightSM","paddingXXS","process","env","NODE_ENV","warning","deprecated","undefined","rootPrefixCls","treePrefixCls","treeSelectPrefixCls","compactSize","compactItemClassnames","rootCls","treeSelectRootCls","wrapCSSVar","hashId","cssVarCls","treeSelectWrapCSSVar","enableVariantCls","mergedDropdownClassName","isMultiple","showSuffixIcon","suffixIcon","showArrow","mergedPopupMatchSelectWidth","contextStatus","hasFeedback","isFormItemInput","feedbackIcon","mergedStatus","removeIcon","clearIcon","assign","componentName","mergedAllowClear","mergedNotFound","createElement","selectProps","memoizedPlacement","useMemo","mergedSize","ctx","mergedDisabled","mergedClassName","renderSwitcherIcon","nodeProps","treeNodeProps","showLine","zIndex","returnNode","showTreeIcon","treeMotion","TreeSelectRef","forwardRef","TreeSelect","PurePanel","_InternalPanelDoNotUseOrYouWillBeFired","displayName"],"sources":["/home/devbox/project/node_modules/.pnpm/antd@5.22.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/antd/es/tree-select/index.js"],"sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RcTreeSelect, { SHOW_ALL, SHOW_CHILD, SHOW_PARENT, TreeNode } from 'rc-tree-select';\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport { getTransitionName } from '../_util/motion';\nimport genPurePanel from '../_util/PurePanel';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../form/context';\nimport useVariant from '../form/hooks/useVariants';\nimport mergedBuiltinPlacements from '../select/mergedBuiltinPlacements';\nimport useSelectStyle from '../select/style';\nimport useIcons from '../select/useIcons';\nimport useShowArrow from '../select/useShowArrow';\nimport { useCompactItemContext } from '../space/Compact';\nimport SwitcherIconCom from '../tree/utils/iconUtil';\nimport { useToken } from '../theme/internal';\nimport useStyle from './style';\nconst InternalTreeSelect = (props, ref) => {\n  var _a;\n  const {\n      prefixCls: customizePrefixCls,\n      size: customizeSize,\n      disabled: customDisabled,\n      bordered = true,\n      className,\n      rootClassName,\n      treeCheckable,\n      multiple,\n      listHeight = 256,\n      listItemHeight: customListItemHeight,\n      placement,\n      notFoundContent,\n      switcherIcon,\n      treeLine,\n      getPopupContainer,\n      popupClassName,\n      dropdownClassName,\n      treeIcon = false,\n      transitionName,\n      choiceTransitionName = '',\n      status: customStatus,\n      treeExpandAction,\n      builtinPlacements,\n      dropdownMatchSelectWidth,\n      popupMatchSelectWidth,\n      allowClear,\n      variant: customVariant,\n      dropdownStyle,\n      tagRender\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"size\", \"disabled\", \"bordered\", \"className\", \"rootClassName\", \"treeCheckable\", \"multiple\", \"listHeight\", \"listItemHeight\", \"placement\", \"notFoundContent\", \"switcherIcon\", \"treeLine\", \"getPopupContainer\", \"popupClassName\", \"dropdownClassName\", \"treeIcon\", \"transitionName\", \"choiceTransitionName\", \"status\", \"treeExpandAction\", \"builtinPlacements\", \"dropdownMatchSelectWidth\", \"popupMatchSelectWidth\", \"allowClear\", \"variant\", \"dropdownStyle\", \"tagRender\"]);\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    renderEmpty,\n    direction,\n    virtual,\n    popupMatchSelectWidth: contextPopupMatchSelectWidth,\n    popupOverflow\n  } = React.useContext(ConfigContext);\n  const [, token] = useToken();\n  const listItemHeight = customListItemHeight !== null && customListItemHeight !== void 0 ? customListItemHeight : (token === null || token === void 0 ? void 0 : token.controlHeightSM) + (token === null || token === void 0 ? void 0 : token.paddingXXS);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('TreeSelect');\n    process.env.NODE_ENV !== \"production\" ? warning(multiple !== false || !treeCheckable, 'usage', '`multiple` will always be `true` when `treeCheckable` is true') : void 0;\n    warning.deprecated(!dropdownClassName, 'dropdownClassName', 'popupClassName');\n    warning.deprecated(dropdownMatchSelectWidth === undefined, 'dropdownMatchSelectWidth', 'popupMatchSelectWidth');\n    process.env.NODE_ENV !== \"production\" ? warning(!('showArrow' in props), 'deprecated', '`showArrow` is deprecated which will be removed in next major version. It will be a default behavior, you can hide it by setting `suffixIcon` to null.') : void 0;\n    warning.deprecated(!('bordered' in props), 'bordered', 'variant');\n  }\n  const rootPrefixCls = getPrefixCls();\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  const treePrefixCls = getPrefixCls('select-tree', customizePrefixCls);\n  const treeSelectPrefixCls = getPrefixCls('tree-select', customizePrefixCls);\n  const {\n    compactSize,\n    compactItemClassnames\n  } = useCompactItemContext(prefixCls, direction);\n  const rootCls = useCSSVarCls(prefixCls);\n  const treeSelectRootCls = useCSSVarCls(treeSelectPrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useSelectStyle(prefixCls, rootCls);\n  const [treeSelectWrapCSSVar] = useStyle(treeSelectPrefixCls, treePrefixCls, treeSelectRootCls);\n  const [variant, enableVariantCls] = useVariant('treeSelect', customVariant, bordered);\n  const mergedDropdownClassName = classNames(popupClassName || dropdownClassName, `${treeSelectPrefixCls}-dropdown`, {\n    [`${treeSelectPrefixCls}-dropdown-rtl`]: direction === 'rtl'\n  }, rootClassName, cssVarCls, rootCls, treeSelectRootCls, hashId);\n  const isMultiple = !!(treeCheckable || multiple);\n  const showSuffixIcon = useShowArrow(props.suffixIcon, props.showArrow);\n  const mergedPopupMatchSelectWidth = (_a = popupMatchSelectWidth !== null && popupMatchSelectWidth !== void 0 ? popupMatchSelectWidth : dropdownMatchSelectWidth) !== null && _a !== void 0 ? _a : contextPopupMatchSelectWidth;\n  // ===================== Form =====================\n  const {\n    status: contextStatus,\n    hasFeedback,\n    isFormItemInput,\n    feedbackIcon\n  } = React.useContext(FormItemInputContext);\n  const mergedStatus = getMergedStatus(contextStatus, customStatus);\n  // ===================== Icons =====================\n  const {\n    suffixIcon,\n    removeIcon,\n    clearIcon\n  } = useIcons(Object.assign(Object.assign({}, restProps), {\n    multiple: isMultiple,\n    showSuffixIcon,\n    hasFeedback,\n    feedbackIcon,\n    prefixCls,\n    componentName: 'TreeSelect'\n  }));\n  const mergedAllowClear = allowClear === true ? {\n    clearIcon\n  } : allowClear;\n  // ===================== Empty =====================\n  let mergedNotFound;\n  if (notFoundContent !== undefined) {\n    mergedNotFound = notFoundContent;\n  } else {\n    mergedNotFound = (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Select')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Select\"\n    });\n  }\n  // ==================== Render =====================\n  const selectProps = omit(restProps, ['suffixIcon', 'removeIcon', 'clearIcon', 'itemIcon', 'switcherIcon']);\n  // ===================== Placement =====================\n  const memoizedPlacement = React.useMemo(() => {\n    if (placement !== undefined) {\n      return placement;\n    }\n    return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n  }, [placement, direction]);\n  const mergedSize = useSize(ctx => {\n    var _a;\n    return (_a = customizeSize !== null && customizeSize !== void 0 ? customizeSize : compactSize) !== null && _a !== void 0 ? _a : ctx;\n  });\n  // ===================== Disabled =====================\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  const mergedClassName = classNames(!customizePrefixCls && treeSelectPrefixCls, {\n    [`${prefixCls}-lg`]: mergedSize === 'large',\n    [`${prefixCls}-sm`]: mergedSize === 'small',\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-${variant}`]: enableVariantCls,\n    [`${prefixCls}-in-form-item`]: isFormItemInput\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), compactItemClassnames, className, rootClassName, cssVarCls, rootCls, treeSelectRootCls, hashId);\n  const renderSwitcherIcon = nodeProps => (/*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: treePrefixCls,\n    switcherIcon: switcherIcon,\n    treeNodeProps: nodeProps,\n    showLine: treeLine\n  }));\n  // ============================ zIndex ============================\n  const [zIndex] = useZIndex('SelectLike', dropdownStyle === null || dropdownStyle === void 0 ? void 0 : dropdownStyle.zIndex);\n  const returnNode = /*#__PURE__*/React.createElement(RcTreeSelect, Object.assign({\n    virtual: virtual,\n    disabled: mergedDisabled\n  }, selectProps, {\n    dropdownMatchSelectWidth: mergedPopupMatchSelectWidth,\n    builtinPlacements: mergedBuiltinPlacements(builtinPlacements, popupOverflow),\n    ref: ref,\n    prefixCls: prefixCls,\n    className: mergedClassName,\n    listHeight: listHeight,\n    listItemHeight: listItemHeight,\n    treeCheckable: treeCheckable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-tree-checkbox-inner`\n    }) : treeCheckable,\n    treeLine: !!treeLine,\n    suffixIcon: suffixIcon,\n    multiple: isMultiple,\n    placement: memoizedPlacement,\n    removeIcon: removeIcon,\n    allowClear: mergedAllowClear,\n    switcherIcon: renderSwitcherIcon,\n    showTreeIcon: treeIcon,\n    notFoundContent: mergedNotFound,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    treeMotion: null,\n    dropdownClassName: mergedDropdownClassName,\n    dropdownStyle: Object.assign(Object.assign({}, dropdownStyle), {\n      zIndex\n    }),\n    choiceTransitionName: getTransitionName(rootPrefixCls, '', choiceTransitionName),\n    transitionName: getTransitionName(rootPrefixCls, 'slide-up', transitionName),\n    treeExpandAction: treeExpandAction,\n    tagRender: isMultiple ? tagRender : undefined\n  }));\n  return wrapCSSVar(treeSelectWrapCSSVar(returnNode));\n};\nconst TreeSelectRef = /*#__PURE__*/React.forwardRef(InternalTreeSelect);\nconst TreeSelect = TreeSelectRef;\n// We don't care debug panel\n/* istanbul ignore next */\nconst PurePanel = genPurePanel(TreeSelect);\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nTreeSelect._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  TreeSelect.displayName = 'TreeSelect';\n}\nexport { TreeNode };\nexport default TreeSelect;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}