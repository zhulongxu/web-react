{"ast":null,"code":"import { Line } from '@antv/x6-geometry';\nexport function offset(p1, p2, offset) {\n  let tx;\n  if (typeof offset === 'object') {\n    if (Number.isFinite(offset.y)) {\n      const line = new Line(p2, p1);\n      const {\n        start,\n        end\n      } = line.parallel(offset.y);\n      p2 = start; // eslint-disable-line\n      p1 = end; // eslint-disable-line\n    }\n    tx = offset.x;\n  } else {\n    tx = offset;\n  }\n  if (tx == null || !Number.isFinite(tx)) {\n    return p1;\n  }\n  const length = p1.distance(p2);\n  if (tx === 0 && length > 0) {\n    return p1;\n  }\n  return p1.move(p2, -Math.min(tx, length - 1));\n}\nexport function getStrokeWidth(magnet) {\n  const stroke = magnet.getAttribute('stroke-width');\n  if (stroke === null) {\n    return 0;\n  }\n  return parseFloat(stroke) || 0;\n}\nexport function findShapeNode(magnet) {\n  if (magnet == null) {\n    return null;\n  }\n  let node = magnet;\n  do {\n    let tagName = node.tagName;\n    if (typeof tagName !== 'string') return null;\n    tagName = tagName.toUpperCase();\n    if (tagName === 'G') {\n      node = node.firstElementChild;\n    } else if (tagName === 'TITLE') {\n      node = node.nextElementSibling;\n    } else break;\n  } while (node);\n  return node;\n}","map":{"version":3,"names":["Line","offset","p1","p2","tx","Number","isFinite","y","line","start","end","parallel","x","length","distance","move","Math","min","getStrokeWidth","magnet","stroke","getAttribute","parseFloat","findShapeNode","node","tagName","toUpperCase","firstElementChild","nextElementSibling"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/connection-point/util.ts"],"sourcesContent":["import { Point, Line } from '@antv/x6-geometry'\n\nexport function offset(\n  p1: Point,\n  p2: Point,\n  offset?: number | Point.PointLike,\n) {\n  let tx: number | undefined\n  if (typeof offset === 'object') {\n    if (Number.isFinite(offset.y)) {\n      const line = new Line(p2, p1)\n      const { start, end } = line.parallel(offset.y)\n      p2 = start // eslint-disable-line\n      p1 = end // eslint-disable-line\n    }\n    tx = offset.x\n  } else {\n    tx = offset\n  }\n\n  if (tx == null || !Number.isFinite(tx)) {\n    return p1\n  }\n\n  const length = p1.distance(p2)\n  if (tx === 0 && length > 0) {\n    return p1\n  }\n  return p1.move(p2, -Math.min(tx, length - 1))\n}\n\nexport function getStrokeWidth(magnet: SVGElement) {\n  const stroke = magnet.getAttribute('stroke-width')\n  if (stroke === null) {\n    return 0\n  }\n  return parseFloat(stroke) || 0\n}\n\nexport function findShapeNode(magnet: Element) {\n  if (magnet == null) {\n    return null\n  }\n\n  let node = magnet\n  do {\n    let tagName = node.tagName\n    if (typeof tagName !== 'string') return null\n    tagName = tagName.toUpperCase()\n    if (tagName === 'G') {\n      node = node.firstElementChild as Element\n    } else if (tagName === 'TITLE') {\n      node = node.nextElementSibling as Element\n    } else break\n  } while (node)\n\n  return node\n}\n"],"mappings":"AAAA,SAAgBA,IAAI,QAAQ,mBAAmB;AAE/C,OAAM,SAAUC,MAAMA,CACpBC,EAAS,EACTC,EAAS,EACTF,MAAiC;EAEjC,IAAIG,EAAsB;EAC1B,IAAI,OAAOH,MAAM,KAAK,QAAQ,EAAE;IAC9B,IAAII,MAAM,CAACC,QAAQ,CAACL,MAAM,CAACM,CAAC,CAAC,EAAE;MAC7B,MAAMC,IAAI,GAAG,IAAIR,IAAI,CAACG,EAAE,EAAED,EAAE,CAAC;MAC7B,MAAM;QAAEO,KAAK;QAAEC;MAAG,CAAE,GAAGF,IAAI,CAACG,QAAQ,CAACV,MAAM,CAACM,CAAC,CAAC;MAC9CJ,EAAE,GAAGM,KAAK,EAAC;MACXP,EAAE,GAAGQ,GAAG,EAAC;;IAEXN,EAAE,GAAGH,MAAM,CAACW,CAAC;GACd,MAAM;IACLR,EAAE,GAAGH,MAAM;;EAGb,IAAIG,EAAE,IAAI,IAAI,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACF,EAAE,CAAC,EAAE;IACtC,OAAOF,EAAE;;EAGX,MAAMW,MAAM,GAAGX,EAAE,CAACY,QAAQ,CAACX,EAAE,CAAC;EAC9B,IAAIC,EAAE,KAAK,CAAC,IAAIS,MAAM,GAAG,CAAC,EAAE;IAC1B,OAAOX,EAAE;;EAEX,OAAOA,EAAE,CAACa,IAAI,CAACZ,EAAE,EAAE,CAACa,IAAI,CAACC,GAAG,CAACb,EAAE,EAAES,MAAM,GAAG,CAAC,CAAC,CAAC;AAC/C;AAEA,OAAM,SAAUK,cAAcA,CAACC,MAAkB;EAC/C,MAAMC,MAAM,GAAGD,MAAM,CAACE,YAAY,CAAC,cAAc,CAAC;EAClD,IAAID,MAAM,KAAK,IAAI,EAAE;IACnB,OAAO,CAAC;;EAEV,OAAOE,UAAU,CAACF,MAAM,CAAC,IAAI,CAAC;AAChC;AAEA,OAAM,SAAUG,aAAaA,CAACJ,MAAe;EAC3C,IAAIA,MAAM,IAAI,IAAI,EAAE;IAClB,OAAO,IAAI;;EAGb,IAAIK,IAAI,GAAGL,MAAM;EACjB,GAAG;IACD,IAAIM,OAAO,GAAGD,IAAI,CAACC,OAAO;IAC1B,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE,OAAO,IAAI;IAC5CA,OAAO,GAAGA,OAAO,CAACC,WAAW,EAAE;IAC/B,IAAID,OAAO,KAAK,GAAG,EAAE;MACnBD,IAAI,GAAGA,IAAI,CAACG,iBAA4B;KACzC,MAAM,IAAIF,OAAO,KAAK,OAAO,EAAE;MAC9BD,IAAI,GAAGA,IAAI,CAACI,kBAA6B;KAC1C,MAAM;GACR,QAAQJ,IAAI;EAEb,OAAOA,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}