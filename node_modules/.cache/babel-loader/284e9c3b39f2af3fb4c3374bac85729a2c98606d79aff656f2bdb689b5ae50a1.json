{"ast":null,"code":"import { Dom } from '@antv/x6-common';\nexport const title = {\n  qualify(title, {\n    elem\n  }) {\n    // HTMLElement title is specified via an attribute (i.e. not an element)\n    return elem instanceof SVGElement;\n  },\n  set(val, {\n    elem\n  }) {\n    const cacheName = 'x6-title';\n    const title = `${val}`;\n    const cache = Dom.data(elem, cacheName);\n    if (cache == null || cache !== title) {\n      Dom.data(elem, cacheName, title);\n      // Generally SVGTitleElement should be the first child\n      // element of its parent.\n      const firstChild = elem.firstChild;\n      if (firstChild && firstChild.tagName.toUpperCase() === 'TITLE') {\n        // Update an existing title\n        const titleElem = firstChild;\n        titleElem.textContent = title;\n      } else {\n        // Create a new title\n        const titleNode = document.createElementNS(elem.namespaceURI, 'title');\n        titleNode.textContent = title;\n        elem.insertBefore(titleNode, firstChild);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Dom","title","qualify","elem","SVGElement","set","val","cacheName","cache","data","firstChild","tagName","toUpperCase","titleElem","textContent","titleNode","document","createElementNS","namespaceURI","insertBefore"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/attr/title.ts"],"sourcesContent":["import { Dom } from '@antv/x6-common'\nimport { Attr } from './index'\n\nexport const title: Attr.Definition = {\n  qualify(title, { elem }) {\n    // HTMLElement title is specified via an attribute (i.e. not an element)\n    return elem instanceof SVGElement\n  },\n  set(val, { elem }) {\n    const cacheName = 'x6-title'\n    const title = `${val}`\n    const cache = Dom.data(elem, cacheName)\n    if (cache == null || cache !== title) {\n      Dom.data(elem, cacheName, title)\n      // Generally SVGTitleElement should be the first child\n      // element of its parent.\n      const firstChild = elem.firstChild as Element\n      if (firstChild && firstChild.tagName.toUpperCase() === 'TITLE') {\n        // Update an existing title\n        const titleElem = firstChild as SVGTitleElement\n        titleElem.textContent = title\n      } else {\n        // Create a new title\n        const titleNode = document.createElementNS(\n          elem.namespaceURI,\n          'title',\n        ) as SVGTitleElement\n        titleNode.textContent = title\n        elem.insertBefore(titleNode, firstChild)\n      }\n    }\n  },\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,iBAAiB;AAGrC,OAAO,MAAMC,KAAK,GAAoB;EACpCC,OAAOA,CAACD,KAAK,EAAE;IAAEE;EAAI,CAAE;IACrB;IACA,OAAOA,IAAI,YAAYC,UAAU;EACnC,CAAC;EACDC,GAAGA,CAACC,GAAG,EAAE;IAAEH;EAAI,CAAE;IACf,MAAMI,SAAS,GAAG,UAAU;IAC5B,MAAMN,KAAK,GAAG,GAAGK,GAAG,EAAE;IACtB,MAAME,KAAK,GAAGR,GAAG,CAACS,IAAI,CAACN,IAAI,EAAEI,SAAS,CAAC;IACvC,IAAIC,KAAK,IAAI,IAAI,IAAIA,KAAK,KAAKP,KAAK,EAAE;MACpCD,GAAG,CAACS,IAAI,CAACN,IAAI,EAAEI,SAAS,EAAEN,KAAK,CAAC;MAChC;MACA;MACA,MAAMS,UAAU,GAAGP,IAAI,CAACO,UAAqB;MAC7C,IAAIA,UAAU,IAAIA,UAAU,CAACC,OAAO,CAACC,WAAW,EAAE,KAAK,OAAO,EAAE;QAC9D;QACA,MAAMC,SAAS,GAAGH,UAA6B;QAC/CG,SAAS,CAACC,WAAW,GAAGb,KAAK;OAC9B,MAAM;QACL;QACA,MAAMc,SAAS,GAAGC,QAAQ,CAACC,eAAe,CACxCd,IAAI,CAACe,YAAY,EACjB,OAAO,CACW;QACpBH,SAAS,CAACD,WAAW,GAAGb,KAAK;QAC7BE,IAAI,CAACgB,YAAY,CAACJ,SAAS,EAAEL,UAAU,CAAC;;;EAG9C;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}