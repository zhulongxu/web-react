{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { genFocusStyle } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genGroupStyle from './group';\nimport { prepareComponentToken, prepareToken } from './token';\n// ============================== Shared ==============================\nconst genSharedButtonStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    fontWeight\n  } = token;\n  return {\n    [componentCls]: {\n      outline: 'none',\n      position: 'relative',\n      display: 'inline-flex',\n      gap: token.marginXS,\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontWeight,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      backgroundImage: 'none',\n      background: 'transparent',\n      border: `${unit(token.lineWidth)} ${token.lineType} transparent`,\n      cursor: 'pointer',\n      transition: `all ${token.motionDurationMid} ${token.motionEaseInOut}`,\n      userSelect: 'none',\n      touchAction: 'manipulation',\n      color: token.colorText,\n      '&:disabled > *': {\n        pointerEvents: 'none'\n      },\n      [`> span, ${componentCls}-icon`]: {\n        display: 'inline-flex'\n      },\n      '> a': {\n        color: 'currentColor'\n      },\n      '&:not(:disabled)': Object.assign({}, genFocusStyle(token)),\n      [`&${componentCls}-two-chinese-chars::first-letter`]: {\n        letterSpacing: '0.34em'\n      },\n      [`&${componentCls}-two-chinese-chars > *:not(${iconCls})`]: {\n        marginInlineEnd: '-0.34em',\n        letterSpacing: '0.34em'\n      },\n      // iconPosition=\"end\"\n      '&-icon-end': {\n        flexDirection: 'row-reverse'\n      }\n    }\n  };\n};\nconst genHoverActiveButtonStyle = (btnCls, hoverStyle, activeStyle) => ({\n  [`&:not(:disabled):not(${btnCls}-disabled)`]: {\n    '&:hover': hoverStyle,\n    '&:active': activeStyle\n  }\n});\n// ============================== Shape ===============================\nconst genCircleButtonStyle = token => ({\n  minWidth: token.controlHeight,\n  paddingInlineStart: 0,\n  paddingInlineEnd: 0,\n  borderRadius: '50%'\n});\nconst genRoundButtonStyle = token => ({\n  borderRadius: token.controlHeight,\n  paddingInlineStart: token.calc(token.controlHeight).div(2).equal(),\n  paddingInlineEnd: token.calc(token.controlHeight).div(2).equal()\n});\nconst genDisabledStyle = token => ({\n  cursor: 'not-allowed',\n  borderColor: token.borderColorDisabled,\n  color: token.colorTextDisabled,\n  background: token.colorBgContainerDisabled,\n  boxShadow: 'none'\n});\nconst genGhostButtonStyle = (btnCls, background, textColor, borderColor, textColorDisabled, borderColorDisabled, hoverStyle, activeStyle) => ({\n  [`&${btnCls}-background-ghost`]: Object.assign(Object.assign({\n    color: textColor || undefined,\n    background,\n    borderColor: borderColor || undefined,\n    boxShadow: 'none'\n  }, genHoverActiveButtonStyle(btnCls, Object.assign({\n    background\n  }, hoverStyle), Object.assign({\n    background\n  }, activeStyle))), {\n    '&:disabled': {\n      cursor: 'not-allowed',\n      color: textColorDisabled || undefined,\n      borderColor: borderColorDisabled || undefined\n    }\n  })\n});\nconst genSolidDisabledButtonStyle = token => ({\n  [`&:disabled, &${token.componentCls}-disabled`]: Object.assign({}, genDisabledStyle(token))\n});\nconst genPureDisabledButtonStyle = token => ({\n  [`&:disabled, &${token.componentCls}-disabled`]: {\n    cursor: 'not-allowed',\n    color: token.colorTextDisabled\n  }\n});\n// ============================== Variant =============================\nconst genVariantButtonStyle = (token, hoverStyle, activeStyle, variant) => {\n  const isPureDisabled = variant && ['link', 'text'].includes(variant);\n  const genDisabledButtonStyle = isPureDisabled ? genPureDisabledButtonStyle : genSolidDisabledButtonStyle;\n  return Object.assign(Object.assign({}, genDisabledButtonStyle(token)), genHoverActiveButtonStyle(token.componentCls, hoverStyle, activeStyle));\n};\nconst genSolidButtonStyle = (token, textColor, background, hoverStyle, activeStyle) => ({\n  [`&${token.componentCls}-variant-solid`]: Object.assign({\n    color: textColor,\n    background\n  }, genVariantButtonStyle(token, hoverStyle, activeStyle))\n});\nconst genOutlinedDashedButtonStyle = (token, borderColor, background, hoverStyle, activeStyle) => ({\n  [`&${token.componentCls}-variant-outlined, &${token.componentCls}-variant-dashed`]: Object.assign({\n    borderColor,\n    background\n  }, genVariantButtonStyle(token, hoverStyle, activeStyle))\n});\nconst genDashedButtonStyle = token => ({\n  [`&${token.componentCls}-variant-dashed`]: {\n    borderStyle: 'dashed'\n  }\n});\nconst genFilledButtonStyle = (token, background, hoverStyle, activeStyle) => ({\n  [`&${token.componentCls}-variant-filled`]: Object.assign({\n    boxShadow: 'none',\n    background\n  }, genVariantButtonStyle(token, hoverStyle, activeStyle))\n});\nconst genTextLinkButtonStyle = (token, textColor, variant, hoverStyle, activeStyle) => ({\n  [`&${token.componentCls}-variant-${variant}`]: Object.assign({\n    color: textColor,\n    boxShadow: 'none'\n  }, genVariantButtonStyle(token, hoverStyle, activeStyle, variant))\n});\n// =============================== Color ==============================\nconst genDefaultButtonStyle = token => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n  color: token.defaultColor,\n  boxShadow: token.defaultShadow\n}, genSolidButtonStyle(token, token.solidTextColor, token.colorBgSolid, {\n  background: token.colorBgSolidHover\n}, {\n  background: token.colorBgSolidActive\n})), genDashedButtonStyle(token)), genFilledButtonStyle(token, token.colorFillTertiary, {\n  background: token.colorFillSecondary\n}, {\n  background: token.colorFill\n})), genTextLinkButtonStyle(token, token.textTextColor, 'link', {\n  color: token.colorLinkHover,\n  background: token.linkHoverBg\n}, {\n  color: token.colorLinkActive\n})), genGhostButtonStyle(token.componentCls, token.ghostBg, token.defaultGhostColor, token.defaultGhostBorderColor, token.colorTextDisabled, token.colorBorder));\nconst genPrimaryButtonStyle = token => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n  color: token.colorPrimary,\n  boxShadow: token.primaryShadow\n}, genOutlinedDashedButtonStyle(token, token.colorPrimary, token.colorBgContainer, {\n  color: token.colorPrimaryTextHover,\n  borderColor: token.colorPrimaryHover,\n  background: token.colorBgContainer\n}, {\n  color: token.colorPrimaryTextActive,\n  borderColor: token.colorPrimaryActive,\n  background: token.colorBgContainer\n})), genDashedButtonStyle(token)), genFilledButtonStyle(token, token.colorPrimaryBg, {\n  background: token.colorPrimaryBgHover\n}, {\n  background: token.colorPrimaryBorder\n})), genTextLinkButtonStyle(token, token.colorLink, 'text', {\n  color: token.colorPrimaryTextHover,\n  background: token.colorPrimaryBg\n}, {\n  color: token.colorPrimaryTextActive,\n  background: token.colorPrimaryBorder\n})), genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorPrimary, token.colorPrimary, token.colorTextDisabled, token.colorBorder, {\n  color: token.colorPrimaryHover,\n  borderColor: token.colorPrimaryHover\n}, {\n  color: token.colorPrimaryActive,\n  borderColor: token.colorPrimaryActive\n}));\nconst genDangerousStyle = token => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n  color: token.colorError,\n  boxShadow: token.dangerShadow\n}, genSolidButtonStyle(token, token.dangerColor, token.colorError, {\n  background: token.colorErrorHover\n}, {\n  background: token.colorErrorActive\n})), genOutlinedDashedButtonStyle(token, token.colorError, token.colorBgContainer, {\n  color: token.colorErrorHover,\n  borderColor: token.colorErrorBorderHover\n}, {\n  color: token.colorErrorActive,\n  borderColor: token.colorErrorActive\n})), genDashedButtonStyle(token)), genFilledButtonStyle(token, token.colorErrorBg, {\n  background: token.colorErrorBgFilledHover\n}, {\n  background: token.colorErrorBgActive\n})), genTextLinkButtonStyle(token, token.colorError, 'text', {\n  color: token.colorErrorHover,\n  background: token.colorErrorBg\n}, {\n  color: token.colorErrorHover,\n  background: token.colorErrorBgActive\n})), genTextLinkButtonStyle(token, token.colorError, 'link', {\n  color: token.colorErrorHover\n}, {\n  color: token.colorErrorActive\n})), genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorError, token.colorError, token.colorTextDisabled, token.colorBorder, {\n  color: token.colorErrorHover,\n  borderColor: token.colorErrorHover\n}, {\n  color: token.colorErrorActive,\n  borderColor: token.colorErrorActive\n}));\nconst genColorButtonStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-color-default`]: genDefaultButtonStyle(token),\n    [`${componentCls}-color-primary`]: genPrimaryButtonStyle(token),\n    [`${componentCls}-color-dangerous`]: genDangerousStyle(token)\n  };\n};\n// =========== Compatible with versions earlier than 5.21.0 ===========\nconst genCompatibleButtonStyle = token => Object.assign(Object.assign(Object.assign(Object.assign({}, genOutlinedDashedButtonStyle(token, token.defaultBorderColor, token.defaultBg, {\n  color: token.defaultHoverColor,\n  borderColor: token.defaultHoverBorderColor,\n  background: token.defaultHoverBg\n}, {\n  color: token.defaultActiveColor,\n  borderColor: token.defaultActiveBorderColor,\n  background: token.defaultActiveBg\n})), genTextLinkButtonStyle(token, token.textTextColor, 'text', {\n  color: token.textTextHoverColor,\n  background: token.textHoverBg\n}, {\n  color: token.textTextActiveColor,\n  background: token.colorBgTextActive\n})), genSolidButtonStyle(token, token.primaryColor, token.colorPrimary, {\n  background: token.colorPrimaryHover,\n  color: token.primaryColor\n}, {\n  background: token.colorPrimaryActive,\n  color: token.primaryColor\n})), genTextLinkButtonStyle(token, token.colorLink, 'link', {\n  color: token.colorLinkHover,\n  background: token.linkHoverBg\n}, {\n  color: token.colorLinkActive\n}));\n// =============================== Size ===============================\nconst genButtonStyle = function (token) {\n  let prefixCls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  const {\n    componentCls,\n    controlHeight,\n    fontSize,\n    lineHeight,\n    borderRadius,\n    buttonPaddingHorizontal,\n    iconCls,\n    buttonPaddingVertical,\n    motionDurationSlow,\n    motionEaseInOut,\n    buttonIconOnlyFontSize,\n    opacityLoading\n  } = token;\n  return [{\n    [prefixCls]: {\n      fontSize,\n      lineHeight,\n      height: controlHeight,\n      padding: `${unit(buttonPaddingVertical)} ${unit(buttonPaddingHorizontal)}`,\n      borderRadius,\n      [`&${componentCls}-icon-only`]: {\n        width: controlHeight,\n        paddingInline: 0,\n        // make `btn-icon-only` not too narrow\n        [`&${componentCls}-compact-item`]: {\n          flex: 'none'\n        },\n        [`&${componentCls}-round`]: {\n          width: 'auto'\n        },\n        [iconCls]: {\n          fontSize: buttonIconOnlyFontSize\n        }\n      },\n      // Loading\n      [`&${componentCls}-loading`]: {\n        opacity: opacityLoading,\n        cursor: 'default'\n      },\n      [`${componentCls}-loading-icon`]: {\n        transition: `width ${motionDurationSlow} ${motionEaseInOut}, opacity ${motionDurationSlow} ${motionEaseInOut}`\n      }\n    }\n  },\n  // Shape - patch prefixCls again to override solid border radius style\n  {\n    [`${componentCls}${componentCls}-circle${prefixCls}`]: genCircleButtonStyle(token)\n  }, {\n    [`${componentCls}${componentCls}-round${prefixCls}`]: genRoundButtonStyle(token)\n  }];\n};\nconst genSizeBaseButtonStyle = token => {\n  const baseToken = mergeToken(token, {\n    fontSize: token.contentFontSize,\n    lineHeight: token.contentLineHeight\n  });\n  return genButtonStyle(baseToken, token.componentCls);\n};\nconst genSizeSmallButtonStyle = token => {\n  const smallToken = mergeToken(token, {\n    controlHeight: token.controlHeightSM,\n    fontSize: token.contentFontSizeSM,\n    lineHeight: token.contentLineHeightSM,\n    padding: token.paddingXS,\n    buttonPaddingHorizontal: token.paddingInlineSM,\n    buttonPaddingVertical: token.paddingBlockSM,\n    borderRadius: token.borderRadiusSM,\n    buttonIconOnlyFontSize: token.onlyIconSizeSM\n  });\n  return genButtonStyle(smallToken, `${token.componentCls}-sm`);\n};\nconst genSizeLargeButtonStyle = token => {\n  const largeToken = mergeToken(token, {\n    controlHeight: token.controlHeightLG,\n    fontSize: token.contentFontSizeLG,\n    lineHeight: token.contentLineHeightLG,\n    buttonPaddingHorizontal: token.paddingInlineLG,\n    buttonPaddingVertical: token.paddingBlockLG,\n    borderRadius: token.borderRadiusLG,\n    buttonIconOnlyFontSize: token.onlyIconSizeLG\n  });\n  return genButtonStyle(largeToken, `${token.componentCls}-lg`);\n};\nconst genBlockButtonStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      [`&${componentCls}-block`]: {\n        width: '100%'\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks('Button', token => {\n  const buttonToken = prepareToken(token);\n  return [\n  // Shared\n  genSharedButtonStyle(buttonToken),\n  // Size\n  genSizeBaseButtonStyle(buttonToken), genSizeSmallButtonStyle(buttonToken), genSizeLargeButtonStyle(buttonToken),\n  // Block\n  genBlockButtonStyle(buttonToken),\n  // Color\n  genColorButtonStyle(buttonToken),\n  // https://github.com/ant-design/ant-design/issues/50969\n  genCompatibleButtonStyle(buttonToken),\n  // Button Group\n  genGroupStyle(buttonToken)];\n}, prepareComponentToken, {\n  unitless: {\n    fontWeight: true,\n    contentLineHeight: true,\n    contentLineHeightSM: true,\n    contentLineHeightLG: true\n  }\n});","map":{"version":3,"names":["unit","genFocusStyle","genStyleHooks","mergeToken","genGroupStyle","prepareComponentToken","prepareToken","genSharedButtonStyle","token","componentCls","iconCls","fontWeight","outline","position","display","gap","marginXS","alignItems","justifyContent","whiteSpace","textAlign","backgroundImage","background","border","lineWidth","lineType","cursor","transition","motionDurationMid","motionEaseInOut","userSelect","touchAction","color","colorText","pointerEvents","Object","assign","letterSpacing","marginInlineEnd","flexDirection","genHoverActiveButtonStyle","btnCls","hoverStyle","activeStyle","genCircleButtonStyle","minWidth","controlHeight","paddingInlineStart","paddingInlineEnd","borderRadius","genRoundButtonStyle","calc","div","equal","genDisabledStyle","borderColor","borderColorDisabled","colorTextDisabled","colorBgContainerDisabled","boxShadow","genGhostButtonStyle","textColor","textColorDisabled","undefined","genSolidDisabledButtonStyle","genPureDisabledButtonStyle","genVariantButtonStyle","variant","isPureDisabled","includes","genDisabledButtonStyle","genSolidButtonStyle","genOutlinedDashedButtonStyle","genDashedButtonStyle","borderStyle","genFilledButtonStyle","genTextLinkButtonStyle","genDefaultButtonStyle","defaultColor","defaultShadow","solidTextColor","colorBgSolid","colorBgSolidHover","colorBgSolidActive","colorFillTertiary","colorFillSecondary","colorFill","textTextColor","colorLinkHover","linkHoverBg","colorLinkActive","ghostBg","defaultGhostColor","defaultGhostBorderColor","colorBorder","genPrimaryButtonStyle","colorPrimary","primaryShadow","colorBgContainer","colorPrimaryTextHover","colorPrimaryHover","colorPrimaryTextActive","colorPrimaryActive","colorPrimaryBg","colorPrimaryBgHover","colorPrimaryBorder","colorLink","genDangerousStyle","colorError","dangerShadow","dangerColor","colorErrorHover","colorErrorActive","colorErrorBorderHover","colorErrorBg","colorErrorBgFilledHover","colorErrorBgActive","genColorButtonStyle","genCompatibleButtonStyle","defaultBorderColor","defaultBg","defaultHoverColor","defaultHoverBorderColor","defaultHoverBg","defaultActiveColor","defaultActiveBorderColor","defaultActiveBg","textTextHoverColor","textHoverBg","textTextActiveColor","colorBgTextActive","primaryColor","genButtonStyle","prefixCls","arguments","length","fontSize","lineHeight","buttonPaddingHorizontal","buttonPaddingVertical","motionDurationSlow","buttonIconOnlyFontSize","opacityLoading","height","padding","width","paddingInline","flex","opacity","genSizeBaseButtonStyle","baseToken","contentFontSize","contentLineHeight","genSizeSmallButtonStyle","smallToken","controlHeightSM","contentFontSizeSM","contentLineHeightSM","paddingXS","paddingInlineSM","paddingBlockSM","borderRadiusSM","onlyIconSizeSM","genSizeLargeButtonStyle","largeToken","controlHeightLG","contentFontSizeLG","contentLineHeightLG","paddingInlineLG","paddingBlockLG","borderRadiusLG","onlyIconSizeLG","genBlockButtonStyle","buttonToken","unitless"],"sources":["/home/devbox/project/node_modules/.pnpm/antd@5.22.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/antd/es/button/style/index.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { genFocusStyle } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genGroupStyle from './group';\nimport { prepareComponentToken, prepareToken } from './token';\n// ============================== Shared ==============================\nconst genSharedButtonStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    fontWeight\n  } = token;\n  return {\n    [componentCls]: {\n      outline: 'none',\n      position: 'relative',\n      display: 'inline-flex',\n      gap: token.marginXS,\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontWeight,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      backgroundImage: 'none',\n      background: 'transparent',\n      border: `${unit(token.lineWidth)} ${token.lineType} transparent`,\n      cursor: 'pointer',\n      transition: `all ${token.motionDurationMid} ${token.motionEaseInOut}`,\n      userSelect: 'none',\n      touchAction: 'manipulation',\n      color: token.colorText,\n      '&:disabled > *': {\n        pointerEvents: 'none'\n      },\n      [`> span, ${componentCls}-icon`]: {\n        display: 'inline-flex'\n      },\n      '> a': {\n        color: 'currentColor'\n      },\n      '&:not(:disabled)': Object.assign({}, genFocusStyle(token)),\n      [`&${componentCls}-two-chinese-chars::first-letter`]: {\n        letterSpacing: '0.34em'\n      },\n      [`&${componentCls}-two-chinese-chars > *:not(${iconCls})`]: {\n        marginInlineEnd: '-0.34em',\n        letterSpacing: '0.34em'\n      },\n      // iconPosition=\"end\"\n      '&-icon-end': {\n        flexDirection: 'row-reverse'\n      }\n    }\n  };\n};\nconst genHoverActiveButtonStyle = (btnCls, hoverStyle, activeStyle) => ({\n  [`&:not(:disabled):not(${btnCls}-disabled)`]: {\n    '&:hover': hoverStyle,\n    '&:active': activeStyle\n  }\n});\n// ============================== Shape ===============================\nconst genCircleButtonStyle = token => ({\n  minWidth: token.controlHeight,\n  paddingInlineStart: 0,\n  paddingInlineEnd: 0,\n  borderRadius: '50%'\n});\nconst genRoundButtonStyle = token => ({\n  borderRadius: token.controlHeight,\n  paddingInlineStart: token.calc(token.controlHeight).div(2).equal(),\n  paddingInlineEnd: token.calc(token.controlHeight).div(2).equal()\n});\nconst genDisabledStyle = token => ({\n  cursor: 'not-allowed',\n  borderColor: token.borderColorDisabled,\n  color: token.colorTextDisabled,\n  background: token.colorBgContainerDisabled,\n  boxShadow: 'none'\n});\nconst genGhostButtonStyle = (btnCls, background, textColor, borderColor, textColorDisabled, borderColorDisabled, hoverStyle, activeStyle) => ({\n  [`&${btnCls}-background-ghost`]: Object.assign(Object.assign({\n    color: textColor || undefined,\n    background,\n    borderColor: borderColor || undefined,\n    boxShadow: 'none'\n  }, genHoverActiveButtonStyle(btnCls, Object.assign({\n    background\n  }, hoverStyle), Object.assign({\n    background\n  }, activeStyle))), {\n    '&:disabled': {\n      cursor: 'not-allowed',\n      color: textColorDisabled || undefined,\n      borderColor: borderColorDisabled || undefined\n    }\n  })\n});\nconst genSolidDisabledButtonStyle = token => ({\n  [`&:disabled, &${token.componentCls}-disabled`]: Object.assign({}, genDisabledStyle(token))\n});\nconst genPureDisabledButtonStyle = token => ({\n  [`&:disabled, &${token.componentCls}-disabled`]: {\n    cursor: 'not-allowed',\n    color: token.colorTextDisabled\n  }\n});\n// ============================== Variant =============================\nconst genVariantButtonStyle = (token, hoverStyle, activeStyle, variant) => {\n  const isPureDisabled = variant && ['link', 'text'].includes(variant);\n  const genDisabledButtonStyle = isPureDisabled ? genPureDisabledButtonStyle : genSolidDisabledButtonStyle;\n  return Object.assign(Object.assign({}, genDisabledButtonStyle(token)), genHoverActiveButtonStyle(token.componentCls, hoverStyle, activeStyle));\n};\nconst genSolidButtonStyle = (token, textColor, background, hoverStyle, activeStyle) => ({\n  [`&${token.componentCls}-variant-solid`]: Object.assign({\n    color: textColor,\n    background\n  }, genVariantButtonStyle(token, hoverStyle, activeStyle))\n});\nconst genOutlinedDashedButtonStyle = (token, borderColor, background, hoverStyle, activeStyle) => ({\n  [`&${token.componentCls}-variant-outlined, &${token.componentCls}-variant-dashed`]: Object.assign({\n    borderColor,\n    background\n  }, genVariantButtonStyle(token, hoverStyle, activeStyle))\n});\nconst genDashedButtonStyle = token => ({\n  [`&${token.componentCls}-variant-dashed`]: {\n    borderStyle: 'dashed'\n  }\n});\nconst genFilledButtonStyle = (token, background, hoverStyle, activeStyle) => ({\n  [`&${token.componentCls}-variant-filled`]: Object.assign({\n    boxShadow: 'none',\n    background\n  }, genVariantButtonStyle(token, hoverStyle, activeStyle))\n});\nconst genTextLinkButtonStyle = (token, textColor, variant, hoverStyle, activeStyle) => ({\n  [`&${token.componentCls}-variant-${variant}`]: Object.assign({\n    color: textColor,\n    boxShadow: 'none'\n  }, genVariantButtonStyle(token, hoverStyle, activeStyle, variant))\n});\n// =============================== Color ==============================\nconst genDefaultButtonStyle = token => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n  color: token.defaultColor,\n  boxShadow: token.defaultShadow\n}, genSolidButtonStyle(token, token.solidTextColor, token.colorBgSolid, {\n  background: token.colorBgSolidHover\n}, {\n  background: token.colorBgSolidActive\n})), genDashedButtonStyle(token)), genFilledButtonStyle(token, token.colorFillTertiary, {\n  background: token.colorFillSecondary\n}, {\n  background: token.colorFill\n})), genTextLinkButtonStyle(token, token.textTextColor, 'link', {\n  color: token.colorLinkHover,\n  background: token.linkHoverBg\n}, {\n  color: token.colorLinkActive\n})), genGhostButtonStyle(token.componentCls, token.ghostBg, token.defaultGhostColor, token.defaultGhostBorderColor, token.colorTextDisabled, token.colorBorder));\nconst genPrimaryButtonStyle = token => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n  color: token.colorPrimary,\n  boxShadow: token.primaryShadow\n}, genOutlinedDashedButtonStyle(token, token.colorPrimary, token.colorBgContainer, {\n  color: token.colorPrimaryTextHover,\n  borderColor: token.colorPrimaryHover,\n  background: token.colorBgContainer\n}, {\n  color: token.colorPrimaryTextActive,\n  borderColor: token.colorPrimaryActive,\n  background: token.colorBgContainer\n})), genDashedButtonStyle(token)), genFilledButtonStyle(token, token.colorPrimaryBg, {\n  background: token.colorPrimaryBgHover\n}, {\n  background: token.colorPrimaryBorder\n})), genTextLinkButtonStyle(token, token.colorLink, 'text', {\n  color: token.colorPrimaryTextHover,\n  background: token.colorPrimaryBg\n}, {\n  color: token.colorPrimaryTextActive,\n  background: token.colorPrimaryBorder\n})), genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorPrimary, token.colorPrimary, token.colorTextDisabled, token.colorBorder, {\n  color: token.colorPrimaryHover,\n  borderColor: token.colorPrimaryHover\n}, {\n  color: token.colorPrimaryActive,\n  borderColor: token.colorPrimaryActive\n}));\nconst genDangerousStyle = token => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n  color: token.colorError,\n  boxShadow: token.dangerShadow\n}, genSolidButtonStyle(token, token.dangerColor, token.colorError, {\n  background: token.colorErrorHover\n}, {\n  background: token.colorErrorActive\n})), genOutlinedDashedButtonStyle(token, token.colorError, token.colorBgContainer, {\n  color: token.colorErrorHover,\n  borderColor: token.colorErrorBorderHover\n}, {\n  color: token.colorErrorActive,\n  borderColor: token.colorErrorActive\n})), genDashedButtonStyle(token)), genFilledButtonStyle(token, token.colorErrorBg, {\n  background: token.colorErrorBgFilledHover\n}, {\n  background: token.colorErrorBgActive\n})), genTextLinkButtonStyle(token, token.colorError, 'text', {\n  color: token.colorErrorHover,\n  background: token.colorErrorBg\n}, {\n  color: token.colorErrorHover,\n  background: token.colorErrorBgActive\n})), genTextLinkButtonStyle(token, token.colorError, 'link', {\n  color: token.colorErrorHover\n}, {\n  color: token.colorErrorActive\n})), genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorError, token.colorError, token.colorTextDisabled, token.colorBorder, {\n  color: token.colorErrorHover,\n  borderColor: token.colorErrorHover\n}, {\n  color: token.colorErrorActive,\n  borderColor: token.colorErrorActive\n}));\nconst genColorButtonStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-color-default`]: genDefaultButtonStyle(token),\n    [`${componentCls}-color-primary`]: genPrimaryButtonStyle(token),\n    [`${componentCls}-color-dangerous`]: genDangerousStyle(token)\n  };\n};\n// =========== Compatible with versions earlier than 5.21.0 ===========\nconst genCompatibleButtonStyle = token => Object.assign(Object.assign(Object.assign(Object.assign({}, genOutlinedDashedButtonStyle(token, token.defaultBorderColor, token.defaultBg, {\n  color: token.defaultHoverColor,\n  borderColor: token.defaultHoverBorderColor,\n  background: token.defaultHoverBg\n}, {\n  color: token.defaultActiveColor,\n  borderColor: token.defaultActiveBorderColor,\n  background: token.defaultActiveBg\n})), genTextLinkButtonStyle(token, token.textTextColor, 'text', {\n  color: token.textTextHoverColor,\n  background: token.textHoverBg\n}, {\n  color: token.textTextActiveColor,\n  background: token.colorBgTextActive\n})), genSolidButtonStyle(token, token.primaryColor, token.colorPrimary, {\n  background: token.colorPrimaryHover,\n  color: token.primaryColor\n}, {\n  background: token.colorPrimaryActive,\n  color: token.primaryColor\n})), genTextLinkButtonStyle(token, token.colorLink, 'link', {\n  color: token.colorLinkHover,\n  background: token.linkHoverBg\n}, {\n  color: token.colorLinkActive\n}));\n// =============================== Size ===============================\nconst genButtonStyle = function (token) {\n  let prefixCls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  const {\n    componentCls,\n    controlHeight,\n    fontSize,\n    lineHeight,\n    borderRadius,\n    buttonPaddingHorizontal,\n    iconCls,\n    buttonPaddingVertical,\n    motionDurationSlow,\n    motionEaseInOut,\n    buttonIconOnlyFontSize,\n    opacityLoading\n  } = token;\n  return [{\n    [prefixCls]: {\n      fontSize,\n      lineHeight,\n      height: controlHeight,\n      padding: `${unit(buttonPaddingVertical)} ${unit(buttonPaddingHorizontal)}`,\n      borderRadius,\n      [`&${componentCls}-icon-only`]: {\n        width: controlHeight,\n        paddingInline: 0,\n        // make `btn-icon-only` not too narrow\n        [`&${componentCls}-compact-item`]: {\n          flex: 'none'\n        },\n        [`&${componentCls}-round`]: {\n          width: 'auto'\n        },\n        [iconCls]: {\n          fontSize: buttonIconOnlyFontSize\n        }\n      },\n      // Loading\n      [`&${componentCls}-loading`]: {\n        opacity: opacityLoading,\n        cursor: 'default'\n      },\n      [`${componentCls}-loading-icon`]: {\n        transition: `width ${motionDurationSlow} ${motionEaseInOut}, opacity ${motionDurationSlow} ${motionEaseInOut}`\n      }\n    }\n  },\n  // Shape - patch prefixCls again to override solid border radius style\n  {\n    [`${componentCls}${componentCls}-circle${prefixCls}`]: genCircleButtonStyle(token)\n  }, {\n    [`${componentCls}${componentCls}-round${prefixCls}`]: genRoundButtonStyle(token)\n  }];\n};\nconst genSizeBaseButtonStyle = token => {\n  const baseToken = mergeToken(token, {\n    fontSize: token.contentFontSize,\n    lineHeight: token.contentLineHeight\n  });\n  return genButtonStyle(baseToken, token.componentCls);\n};\nconst genSizeSmallButtonStyle = token => {\n  const smallToken = mergeToken(token, {\n    controlHeight: token.controlHeightSM,\n    fontSize: token.contentFontSizeSM,\n    lineHeight: token.contentLineHeightSM,\n    padding: token.paddingXS,\n    buttonPaddingHorizontal: token.paddingInlineSM,\n    buttonPaddingVertical: token.paddingBlockSM,\n    borderRadius: token.borderRadiusSM,\n    buttonIconOnlyFontSize: token.onlyIconSizeSM\n  });\n  return genButtonStyle(smallToken, `${token.componentCls}-sm`);\n};\nconst genSizeLargeButtonStyle = token => {\n  const largeToken = mergeToken(token, {\n    controlHeight: token.controlHeightLG,\n    fontSize: token.contentFontSizeLG,\n    lineHeight: token.contentLineHeightLG,\n    buttonPaddingHorizontal: token.paddingInlineLG,\n    buttonPaddingVertical: token.paddingBlockLG,\n    borderRadius: token.borderRadiusLG,\n    buttonIconOnlyFontSize: token.onlyIconSizeLG\n  });\n  return genButtonStyle(largeToken, `${token.componentCls}-lg`);\n};\nconst genBlockButtonStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      [`&${componentCls}-block`]: {\n        width: '100%'\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks('Button', token => {\n  const buttonToken = prepareToken(token);\n  return [\n  // Shared\n  genSharedButtonStyle(buttonToken),\n  // Size\n  genSizeBaseButtonStyle(buttonToken), genSizeSmallButtonStyle(buttonToken), genSizeLargeButtonStyle(buttonToken),\n  // Block\n  genBlockButtonStyle(buttonToken),\n  // Color\n  genColorButtonStyle(buttonToken),\n  // https://github.com/ant-design/ant-design/issues/50969\n  genCompatibleButtonStyle(buttonToken),\n  // Button Group\n  genGroupStyle(buttonToken)];\n}, prepareComponentToken, {\n  unitless: {\n    fontWeight: true,\n    contentLineHeight: true,\n    contentLineHeightSM: true,\n    contentLineHeightLG: true\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}