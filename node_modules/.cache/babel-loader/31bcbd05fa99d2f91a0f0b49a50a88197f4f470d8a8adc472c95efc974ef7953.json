{"ast":null,"code":"import { getNumber } from './util';\nexport function contrast(args = {}) {\n  const amount = getNumber(args.amount, 1);\n  const amount2 = 0.5 - amount / 2;\n  return `\n    <filter>\n     <feComponentTransfer>\n        <feFuncR type=\"linear\" slope=\"${amount}\" intercept=\"${amount2}\"/>\n        <feFuncG type=\"linear\" slope=\"${amount}\" intercept=\"${amount2}\"/>\n        <feFuncB type=\"linear\" slope=\"${amount}\" intercept=\"${amount2}\"/>\n      </feComponentTransfer>\n    </filter>\n  `.trim();\n}","map":{"version":3,"names":["getNumber","contrast","args","amount","amount2","trim"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/filter/contrast.ts"],"sourcesContent":["import { getNumber } from './util'\n\nexport interface ContrastArgs {\n  /**\n   * The proportion of the conversion.\n   * A value of `1` leaves the input unchanged.\n   * A value of `0` will create an image that is completely black.\n   *\n   * Default `1`.\n   */\n  amount?: number\n}\n\nexport function contrast(args: ContrastArgs = {}) {\n  const amount = getNumber(args.amount, 1)\n  const amount2 = 0.5 - amount / 2\n\n  return `\n    <filter>\n     <feComponentTransfer>\n        <feFuncR type=\"linear\" slope=\"${amount}\" intercept=\"${amount2}\"/>\n        <feFuncG type=\"linear\" slope=\"${amount}\" intercept=\"${amount2}\"/>\n        <feFuncB type=\"linear\" slope=\"${amount}\" intercept=\"${amount2}\"/>\n      </feComponentTransfer>\n    </filter>\n  `.trim()\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAQ;AAalC,OAAM,SAAUC,QAAQA,CAACC,IAAA,GAAqB,EAAE;EAC9C,MAAMC,MAAM,GAAGH,SAAS,CAACE,IAAI,CAACC,MAAM,EAAE,CAAC,CAAC;EACxC,MAAMC,OAAO,GAAG,GAAG,GAAGD,MAAM,GAAG,CAAC;EAEhC,OAAO;;;wCAG+BA,MAAM,gBAAgBC,OAAO;wCAC7BD,MAAM,gBAAgBC,OAAO;wCAC7BD,MAAM,gBAAgBC,OAAO;;;GAGlE,CAACC,IAAI,EAAE;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}