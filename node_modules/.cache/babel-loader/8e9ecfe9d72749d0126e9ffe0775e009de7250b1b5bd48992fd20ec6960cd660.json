{"ast":null,"code":"var _jsxFileName = \"/home/devbox/project/src/components/ComponentPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Stencil } from '@antv/x6-plugin-stencil';\nimport { basicNodes, containerNodes } from '../config/componentConfig';\nimport '../styles/stencil.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComponentPanel = ({\n  graph\n}) => {\n  _s();\n  const stencilContainer = useRef(null);\n  const stencilRef = useRef(null);\n\n  // 使用 useRef 来跟踪是否已经初始化\n  const isInitialized = useRef(false);\n  useEffect(() => {\n    if (!stencilContainer.current || !graph || isInitialized.current) return;\n    isInitialized.current = true;\n    const stencil = new Stencil({\n      title: '组件库',\n      target: graph,\n      stencilGraphWidth: 200,\n      stencilGraphHeight: 500,\n      collapsable: true,\n      groups: [{\n        name: 'basic',\n        title: '基础组件',\n        graphHeight: 250,\n        layoutOptions: {\n          columns: 2,\n          marginX: 10,\n          marginY: 10\n        }\n      }, {\n        name: 'container',\n        title: '容器组件',\n        graphHeight: 250,\n        layoutOptions: {\n          columns: 1,\n          marginX: 10,\n          marginY: 10\n        }\n      }],\n      getDragNode: node => node.clone()\n    });\n    stencilRef.current = stencil;\n    stencilContainer.current.appendChild(stencil.container);\n    const basicStencilNodes = basicNodes.map(node => graph.createNode(node));\n    const containerStencilNodes = containerNodes.map(node => graph.createNode(node));\n    stencil.load(basicStencilNodes, 'basic');\n    stencil.load(containerStencilNodes, 'container');\n\n    // 添加鼠标悬停事件\n    graph.on('node:mouseenter', ({\n      node\n    }) => {\n      const ports = node.getPorts();\n      ports.forEach(port => {\n        if (port.id) {\n          node.portProp(port.id, 'attrs/circle/visibility', 'visible');\n        }\n      });\n    });\n    graph.on('node:mouseleave', ({\n      node\n    }) => {\n      const ports = node.getPorts();\n      ports.forEach(port => {\n        if (port.id) {\n          node.portProp(port.id, 'attrs/circle/visibility', 'hidden');\n        }\n      });\n    });\n    return () => {\n      if (stencilRef.current) {\n        stencilRef.current.dispose();\n        stencilRef.current = null;\n      }\n      isInitialized.current = false;\n      // 移除事件监听\n      graph.off('node:mouseenter');\n      graph.off('node:mouseleave');\n    };\n  }, [graph]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: stencilContainer,\n    style: {\n      width: '240px',\n      height: '100%',\n      border: '1px solid #f0f0f0'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(ComponentPanel, \"YI1twd0jZ7OyNjpKO4mKMp5cllM=\");\n_c = ComponentPanel;\nexport default ComponentPanel;\nvar _c;\n$RefreshReg$(_c, \"ComponentPanel\");","map":{"version":3,"names":["React","useEffect","useRef","Stencil","basicNodes","containerNodes","jsxDEV","_jsxDEV","ComponentPanel","graph","_s","stencilContainer","stencilRef","isInitialized","current","stencil","title","target","stencilGraphWidth","stencilGraphHeight","collapsable","groups","name","graphHeight","layoutOptions","columns","marginX","marginY","getDragNode","node","clone","appendChild","container","basicStencilNodes","map","createNode","containerStencilNodes","load","on","ports","getPorts","forEach","port","id","portProp","dispose","off","ref","style","width","height","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/devbox/project/src/components/ComponentPanel.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Graph } from '@antv/x6';\nimport { Stencil } from '@antv/x6-plugin-stencil';\nimport { basicNodes, containerNodes } from '../config/componentConfig';\nimport '../styles/stencil.css';\n\ninterface ComponentPanelProps {\n  graph: Graph;\n}\n\nconst ComponentPanel: React.FC<ComponentPanelProps> = ({ graph }) => {\n  const stencilContainer = useRef<HTMLDivElement>(null);\n  const stencilRef = useRef<Stencil | null>(null);\n  \n  // 使用 useRef 来跟踪是否已经初始化\n  const isInitialized = useRef(false);\n\n  useEffect(() => {\n    if (!stencilContainer.current || !graph || isInitialized.current) return;\n    \n    isInitialized.current = true;\n\n    const stencil = new Stencil({\n      title: '组件库',\n      target: graph,\n      stencilGraphWidth: 200,\n      stencilGraphHeight: 500,\n      collapsable: true,\n      groups: [\n        {\n          name: 'basic',\n          title: '基础组件',\n          graphHeight: 250,\n          layoutOptions: {\n            columns: 2,\n            marginX: 10,\n            marginY: 10,\n          },\n        },\n        {\n          name: 'container',\n          title: '容器组件',\n          graphHeight: 250,\n          layoutOptions: {\n            columns: 1,\n            marginX: 10,\n            marginY: 10,\n          },\n        },\n      ],\n      getDragNode: (node) => node.clone(),\n    });\n\n    stencilRef.current = stencil;\n    stencilContainer.current.appendChild(stencil.container);\n\n    const basicStencilNodes = basicNodes.map((node) => graph.createNode(node));\n    const containerStencilNodes = containerNodes.map((node) => graph.createNode(node));\n\n    stencil.load(basicStencilNodes, 'basic');\n    stencil.load(containerStencilNodes, 'container');\n\n    // 添加鼠标悬停事件\n    graph.on('node:mouseenter', ({ node }) => {\n      const ports = node.getPorts();\n      ports.forEach(port => {\n        if (port.id) {\n          node.portProp(port.id, 'attrs/circle/visibility', 'visible');\n        }\n      });\n    });\n\n    graph.on('node:mouseleave', ({ node }) => {\n      const ports = node.getPorts();\n      ports.forEach(port => {\n        if (port.id) {\n          node.portProp(port.id, 'attrs/circle/visibility', 'hidden');\n        }\n      });\n    });\n\n    return () => {\n      if (stencilRef.current) {\n        stencilRef.current.dispose();\n        stencilRef.current = null;\n      }\n      isInitialized.current = false;\n      // 移除事件监听\n      graph.off('node:mouseenter');\n      graph.off('node:mouseleave');\n    };\n  }, [graph]);\n\n  return (\n    <div \n      ref={stencilContainer} \n      style={{ \n        width: '240px',\n        height: '100%',\n        border: '1px solid #f0f0f0',\n      }} \n    />\n  );\n};\n\nexport default ComponentPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}