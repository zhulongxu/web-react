{"ast":null,"code":"export function isAsyncLike(obj) {\n  return typeof obj === 'object' && obj.then && typeof obj.then === 'function';\n}\nexport function isAsync(obj) {\n  return obj != null && (obj instanceof Promise || isAsyncLike(obj));\n}\nexport function toAsyncBoolean(...inputs) {\n  const results = [];\n  inputs.forEach(arg => {\n    if (Array.isArray(arg)) {\n      results.push(...arg);\n    } else {\n      results.push(arg);\n    }\n  });\n  const hasAsync = results.some(res => isAsync(res));\n  if (hasAsync) {\n    const deferres = results.map(res => isAsync(res) ? res : Promise.resolve(res !== false));\n    return Promise.all(deferres).then(arr => arr.reduce((memo, item) => item !== false && memo, true));\n  }\n  return results.every(res => res !== false);\n}\nexport function toDeferredBoolean(...inputs) {\n  const ret = toAsyncBoolean(inputs);\n  return typeof ret === 'boolean' ? Promise.resolve(ret) : ret;\n}","map":{"version":3,"names":["isAsyncLike","obj","then","isAsync","Promise","toAsyncBoolean","inputs","results","forEach","arg","Array","isArray","push","hasAsync","some","res","deferres","map","resolve","all","arr","reduce","memo","item","every","toDeferredBoolean","ret"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6-common@2.0.17/node_modules/@antv/x6-common/src/function/async.ts"],"sourcesContent":["export function isAsyncLike<T>(obj: any): obj is Promise<T> {\n  return typeof obj === 'object' && obj.then && typeof obj.then === 'function'\n}\n\nexport function isAsync<T>(obj: any): obj is Promise<T> {\n  return obj != null && (obj instanceof Promise || isAsyncLike(obj))\n}\n\nexport type AsyncBoolean = boolean | Promise<boolean>\n\nexport function toAsyncBoolean(...inputs: (any | any[])[]): AsyncBoolean {\n  const results: any[] = []\n\n  inputs.forEach((arg) => {\n    if (Array.isArray(arg)) {\n      results.push(...arg)\n    } else {\n      results.push(arg)\n    }\n  })\n\n  const hasAsync = results.some((res) => isAsync(res))\n  if (hasAsync) {\n    const deferres = results.map((res) =>\n      isAsync(res) ? res : Promise.resolve(res !== false),\n    )\n\n    return Promise.all(deferres).then((arr) =>\n      arr.reduce<boolean>((memo, item) => item !== false && memo, true),\n    )\n  }\n\n  return results.every((res) => res !== false)\n}\n\nexport function toDeferredBoolean(...inputs: (any | any[])[]) {\n  const ret = toAsyncBoolean(inputs)\n  return typeof ret === 'boolean' ? Promise.resolve(ret) : ret\n}\n"],"mappings":"AAAA,OAAM,SAAUA,WAAWA,CAAIC,GAAQ;EACrC,OAAO,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACC,IAAI,IAAI,OAAOD,GAAG,CAACC,IAAI,KAAK,UAAU;AAC9E;AAEA,OAAM,SAAUC,OAAOA,CAAIF,GAAQ;EACjC,OAAOA,GAAG,IAAI,IAAI,KAAKA,GAAG,YAAYG,OAAO,IAAIJ,WAAW,CAACC,GAAG,CAAC,CAAC;AACpE;AAIA,OAAM,SAAUI,cAAcA,CAAC,GAAGC,MAAuB;EACvD,MAAMC,OAAO,GAAU,EAAE;EAEzBD,MAAM,CAACE,OAAO,CAAEC,GAAG,IAAI;IACrB,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;MACtBF,OAAO,CAACK,IAAI,CAAC,GAAGH,GAAG,CAAC;KACrB,MAAM;MACLF,OAAO,CAACK,IAAI,CAACH,GAAG,CAAC;;EAErB,CAAC,CAAC;EAEF,MAAMI,QAAQ,GAAGN,OAAO,CAACO,IAAI,CAAEC,GAAG,IAAKZ,OAAO,CAACY,GAAG,CAAC,CAAC;EACpD,IAAIF,QAAQ,EAAE;IACZ,MAAMG,QAAQ,GAAGT,OAAO,CAACU,GAAG,CAAEF,GAAG,IAC/BZ,OAAO,CAACY,GAAG,CAAC,GAAGA,GAAG,GAAGX,OAAO,CAACc,OAAO,CAACH,GAAG,KAAK,KAAK,CAAC,CACpD;IAED,OAAOX,OAAO,CAACe,GAAG,CAACH,QAAQ,CAAC,CAACd,IAAI,CAAEkB,GAAG,IACpCA,GAAG,CAACC,MAAM,CAAU,CAACC,IAAI,EAAEC,IAAI,KAAKA,IAAI,KAAK,KAAK,IAAID,IAAI,EAAE,IAAI,CAAC,CAClE;;EAGH,OAAOf,OAAO,CAACiB,KAAK,CAAET,GAAG,IAAKA,GAAG,KAAK,KAAK,CAAC;AAC9C;AAEA,OAAM,SAAUU,iBAAiBA,CAAC,GAAGnB,MAAuB;EAC1D,MAAMoB,GAAG,GAAGrB,cAAc,CAACC,MAAM,CAAC;EAClC,OAAO,OAAOoB,GAAG,KAAK,SAAS,GAAGtB,OAAO,CAACc,OAAO,CAACQ,GAAG,CAAC,GAAGA,GAAG;AAC9D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}