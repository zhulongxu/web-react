{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { Path } from '@antv/x6-geometry';\nimport { NumberExt } from '@antv/x6-common';\nimport { normalize } from './util';\nexport const block = _a => {\n  var {\n      size,\n      width,\n      height,\n      offset,\n      open\n    } = _a,\n    attrs = __rest(_a, [\"size\", \"width\", \"height\", \"offset\", \"open\"]);\n  return createClassicMarker({\n    size,\n    width,\n    height,\n    offset\n  }, open === true, true, undefined, attrs);\n};\nexport const classic = _a => {\n  var {\n      size,\n      width,\n      height,\n      offset,\n      factor\n    } = _a,\n    attrs = __rest(_a, [\"size\", \"width\", \"height\", \"offset\", \"factor\"]);\n  return createClassicMarker({\n    size,\n    width,\n    height,\n    offset\n  }, false, false, factor, attrs);\n};\nfunction createClassicMarker(options, open, full, factor = 3 / 4, attrs = {}) {\n  const size = options.size || 10;\n  const width = options.width || size;\n  const height = options.height || size;\n  const path = new Path();\n  const localAttrs = {};\n  if (open) {\n    path.moveTo(width, 0).lineTo(0, height / 2).lineTo(width, height);\n    localAttrs.fill = 'none';\n  } else {\n    path.moveTo(0, height / 2);\n    path.lineTo(width, 0);\n    if (!full) {\n      const f = NumberExt.clamp(factor, 0, 1);\n      path.lineTo(width * f, height / 2);\n    }\n    path.lineTo(width, height);\n    path.close();\n  }\n  return Object.assign(Object.assign(Object.assign({}, localAttrs), attrs), {\n    tagName: 'path',\n    d: normalize(path.serialize(), {\n      x: options.offset != null ? options.offset : -width / 2\n    })\n  });\n}","map":{"version":3,"names":["Path","NumberExt","normalize","block","_a","size","width","height","offset","open","attrs","__rest","createClassicMarker","undefined","classic","factor","options","full","path","localAttrs","moveTo","lineTo","fill","f","clamp","close","Object","assign","tagName","d","serialize","x"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/marker/classic.ts"],"sourcesContent":["import { Path } from '@antv/x6-geometry'\nimport { NumberExt, KeyValue } from '@antv/x6-common'\nimport { normalize } from './util'\nimport { Marker } from './index'\n\ninterface Common {\n  size?: number\n  width?: number\n  height?: number\n  offset?: number\n}\n\nexport interface BlockMarkerOptions extends Common, KeyValue {\n  open?: boolean\n}\n\nexport interface ClassicMarkerOptions extends Common, KeyValue {\n  factor?: number\n}\n\nexport const block: Marker.Factory<BlockMarkerOptions> = ({\n  size,\n  width,\n  height,\n  offset,\n  open,\n  ...attrs\n}) => {\n  return createClassicMarker(\n    { size, width, height, offset },\n    open === true,\n    true,\n    undefined,\n    attrs,\n  )\n}\n\nexport const classic: Marker.Factory<ClassicMarkerOptions> = ({\n  size,\n  width,\n  height,\n  offset,\n  factor,\n  ...attrs\n}) => {\n  return createClassicMarker(\n    { size, width, height, offset },\n    false,\n    false,\n    factor,\n    attrs,\n  )\n}\n\nfunction createClassicMarker(\n  options: Common,\n  open: boolean,\n  full: boolean,\n  factor: number = 3 / 4,\n  attrs: KeyValue = {},\n) {\n  const size = options.size || 10\n  const width = options.width || size\n  const height = options.height || size\n  const path = new Path()\n  const localAttrs: { fill?: string } = {}\n\n  if (open) {\n    path\n      .moveTo(width, 0)\n      .lineTo(0, height / 2)\n      .lineTo(width, height)\n    localAttrs.fill = 'none'\n  } else {\n    path.moveTo(0, height / 2)\n    path.lineTo(width, 0)\n\n    if (!full) {\n      const f = NumberExt.clamp(factor, 0, 1)\n      path.lineTo(width * f, height / 2)\n    }\n\n    path.lineTo(width, height)\n    path.close()\n  }\n\n  return {\n    ...localAttrs,\n    ...attrs,\n    tagName: 'path',\n    d: normalize(path.serialize(), {\n      x: options.offset != null ? options.offset : -width / 2,\n    }),\n  }\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,IAAI,QAAQ,mBAAmB;AACxC,SAASC,SAAS,QAAkB,iBAAiB;AACrD,SAASC,SAAS,QAAQ,QAAQ;AAkBlC,OAAO,MAAMC,KAAK,GAAwCC,EAOzD,IAAI;MAPqD;MACxDC,IAAI;MACJC,KAAK;MACLC,MAAM;MACNC,MAAM;MACNC;IAAI,IAAAL,EAEL;IADIM,KAAK,GAAAC,MAAA,CAAAP,EAAA,EANgD,6CAOzD,CADS;EAER,OAAOQ,mBAAmB,CACxB;IAAEP,IAAI;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAM,CAAE,EAC/BC,IAAI,KAAK,IAAI,EACb,IAAI,EACJI,SAAS,EACTH,KAAK,CACN;AACH,CAAC;AAED,OAAO,MAAMI,OAAO,GAA0CV,EAO7D,IAAI;MAPyD;MAC5DC,IAAI;MACJC,KAAK;MACLC,MAAM;MACNC,MAAM;MACNO;IAAM,IAAAX,EAEP;IADIM,KAAK,GAAAC,MAAA,CAAAP,EAAA,EANoD,+CAO7D,CADS;EAER,OAAOQ,mBAAmB,CACxB;IAAEP,IAAI;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAM,CAAE,EAC/B,KAAK,EACL,KAAK,EACLO,MAAM,EACNL,KAAK,CACN;AACH,CAAC;AAED,SAASE,mBAAmBA,CAC1BI,OAAe,EACfP,IAAa,EACbQ,IAAa,EACbF,MAAA,GAAiB,CAAC,GAAG,CAAC,EACtBL,KAAA,GAAkB,EAAE;EAEpB,MAAML,IAAI,GAAGW,OAAO,CAACX,IAAI,IAAI,EAAE;EAC/B,MAAMC,KAAK,GAAGU,OAAO,CAACV,KAAK,IAAID,IAAI;EACnC,MAAME,MAAM,GAAGS,OAAO,CAACT,MAAM,IAAIF,IAAI;EACrC,MAAMa,IAAI,GAAG,IAAIlB,IAAI,EAAE;EACvB,MAAMmB,UAAU,GAAsB,EAAE;EAExC,IAAIV,IAAI,EAAE;IACRS,IAAI,CACDE,MAAM,CAACd,KAAK,EAAE,CAAC,CAAC,CAChBe,MAAM,CAAC,CAAC,EAAEd,MAAM,GAAG,CAAC,CAAC,CACrBc,MAAM,CAACf,KAAK,EAAEC,MAAM,CAAC;IACxBY,UAAU,CAACG,IAAI,GAAG,MAAM;GACzB,MAAM;IACLJ,IAAI,CAACE,MAAM,CAAC,CAAC,EAAEb,MAAM,GAAG,CAAC,CAAC;IAC1BW,IAAI,CAACG,MAAM,CAACf,KAAK,EAAE,CAAC,CAAC;IAErB,IAAI,CAACW,IAAI,EAAE;MACT,MAAMM,CAAC,GAAGtB,SAAS,CAACuB,KAAK,CAACT,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;MACvCG,IAAI,CAACG,MAAM,CAACf,KAAK,GAAGiB,CAAC,EAAEhB,MAAM,GAAG,CAAC,CAAC;;IAGpCW,IAAI,CAACG,MAAM,CAACf,KAAK,EAAEC,MAAM,CAAC;IAC1BW,IAAI,CAACO,KAAK,EAAE;;EAGd,OAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKR,UAAU,GACVT,KAAK;IACRkB,OAAO,EAAE,MAAM;IACfC,CAAC,EAAE3B,SAAS,CAACgB,IAAI,CAACY,SAAS,EAAE,EAAE;MAC7BC,CAAC,EAAEf,OAAO,CAACR,MAAM,IAAI,IAAI,GAAGQ,OAAO,CAACR,MAAM,GAAG,CAACF,KAAK,GAAG;KACvD;EAAC;AAEN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}