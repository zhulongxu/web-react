{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6-common@2.0.17/node_modules/@antv/x6-common/src/types.ts"],"sourcesContent":["export type Nilable<T> = T | null | undefined\n\nexport interface PointLike {\n  x: number\n  y: number\n}\n\nexport type PointData = [number, number]\n\nexport interface Translation {\n  tx: number\n  ty: number\n}\n\nexport interface Rotation {\n  angle: number\n  cx?: number\n  cy?: number\n}\n\nexport interface Scale {\n  sx: number\n  sy: number\n}\n\nexport interface Size {\n  width: number\n  height: number\n}\n\nexport interface KeyValue<T = any> {\n  [key: string]: T\n}\n\n/**\n * A type alias for a JSON primitive.\n */\nexport type JSONPrimitive = boolean | number | string | null | undefined\n\n/**\n * A type alias for a JSON value.\n */\nexport type JSONValue = JSONPrimitive | JSONObject | JSONArray\n\n/**\n * A type definition for a JSON object.\n */\nexport interface JSONObject {\n  [key: string]: JSONValue\n}\n\n/**\n * A type definition for a JSON array.\n */\nexport interface JSONArray extends Array<JSONValue> {}\n\n/**\n * A type definition for a readonly JSON object.\n */\nexport interface ReadonlyJSONObject {\n  readonly [key: string]: ReadonlyJSONValue\n}\n\n/**\n * A type definition for a readonly JSON array.\n */\nexport interface ReadonlyJSONArray extends ReadonlyArray<ReadonlyJSONValue> {}\n\n/**\n * A type alias for a readonly JSON value.\n */\nexport type ReadonlyJSONValue =\n  | JSONPrimitive\n  | ReadonlyJSONObject\n  | ReadonlyJSONArray\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}