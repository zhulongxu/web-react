{"ast":null,"code":"import { ArrayExt } from '@antv/x6-common';\nconst OPEN = 1;\nconst CLOSE = 2;\nexport class SortedSet {\n  constructor() {\n    this.items = [];\n    this.hash = {};\n    this.values = {};\n  }\n  add(item, value) {\n    if (this.hash[item]) {\n      // item removal\n      this.items.splice(this.items.indexOf(item), 1);\n    } else {\n      this.hash[item] = OPEN;\n    }\n    this.values[item] = value;\n    const index = ArrayExt.sortedIndexBy(this.items, item, key => this.values[key]);\n    this.items.splice(index, 0, item);\n  }\n  pop() {\n    const item = this.items.shift();\n    if (item) {\n      this.hash[item] = CLOSE;\n    }\n    return item;\n  }\n  isOpen(item) {\n    return this.hash[item] === OPEN;\n  }\n  isClose(item) {\n    return this.hash[item] === CLOSE;\n  }\n  isEmpty() {\n    return this.items.length === 0;\n  }\n}","map":{"version":3,"names":["ArrayExt","OPEN","CLOSE","SortedSet","constructor","items","hash","values","add","item","value","splice","indexOf","index","sortedIndexBy","key","pop","shift","isOpen","isClose","isEmpty","length"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/router/manhattan/sorted-set.ts"],"sourcesContent":["import { ArrayExt } from '@antv/x6-common'\n\nconst OPEN = 1\nconst CLOSE = 2\n\nexport class SortedSet {\n  items: string[]\n  hash: { [key: string]: number }\n  values: { [key: string]: number }\n\n  constructor() {\n    this.items = []\n    this.hash = {}\n    this.values = {}\n  }\n\n  add(item: string, value: number) {\n    if (this.hash[item]) {\n      // item removal\n      this.items.splice(this.items.indexOf(item), 1)\n    } else {\n      this.hash[item] = OPEN\n    }\n\n    this.values[item] = value\n\n    const index = ArrayExt.sortedIndexBy(\n      this.items,\n      item,\n      (key) => this.values[key],\n    )\n\n    this.items.splice(index, 0, item)\n  }\n\n  pop() {\n    const item = this.items.shift()\n    if (item) {\n      this.hash[item] = CLOSE\n    }\n    return item\n  }\n\n  isOpen(item: string) {\n    return this.hash[item] === OPEN\n  }\n\n  isClose(item: string) {\n    return this.hash[item] === CLOSE\n  }\n\n  isEmpty() {\n    return this.items.length === 0\n  }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAE1C,MAAMC,IAAI,GAAG,CAAC;AACd,MAAMC,KAAK,GAAG,CAAC;AAEf,OAAM,MAAOC,SAAS;EAKpBC,YAAA;IACE,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,MAAM,GAAG,EAAE;EAClB;EAEAC,GAAGA,CAACC,IAAY,EAAEC,KAAa;IAC7B,IAAI,IAAI,CAACJ,IAAI,CAACG,IAAI,CAAC,EAAE;MACnB;MACA,IAAI,CAACJ,KAAK,CAACM,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,OAAO,CAACH,IAAI,CAAC,EAAE,CAAC,CAAC;KAC/C,MAAM;MACL,IAAI,CAACH,IAAI,CAACG,IAAI,CAAC,GAAGR,IAAI;;IAGxB,IAAI,CAACM,MAAM,CAACE,IAAI,CAAC,GAAGC,KAAK;IAEzB,MAAMG,KAAK,GAAGb,QAAQ,CAACc,aAAa,CAClC,IAAI,CAACT,KAAK,EACVI,IAAI,EACHM,GAAG,IAAK,IAAI,CAACR,MAAM,CAACQ,GAAG,CAAC,CAC1B;IAED,IAAI,CAACV,KAAK,CAACM,MAAM,CAACE,KAAK,EAAE,CAAC,EAAEJ,IAAI,CAAC;EACnC;EAEAO,GAAGA,CAAA;IACD,MAAMP,IAAI,GAAG,IAAI,CAACJ,KAAK,CAACY,KAAK,EAAE;IAC/B,IAAIR,IAAI,EAAE;MACR,IAAI,CAACH,IAAI,CAACG,IAAI,CAAC,GAAGP,KAAK;;IAEzB,OAAOO,IAAI;EACb;EAEAS,MAAMA,CAACT,IAAY;IACjB,OAAO,IAAI,CAACH,IAAI,CAACG,IAAI,CAAC,KAAKR,IAAI;EACjC;EAEAkB,OAAOA,CAACV,IAAY;IAClB,OAAO,IAAI,CAACH,IAAI,CAACG,IAAI,CAAC,KAAKP,KAAK;EAClC;EAEAkB,OAAOA,CAAA;IACL,OAAO,IAAI,CAACf,KAAK,CAACgB,MAAM,KAAK,CAAC;EAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}