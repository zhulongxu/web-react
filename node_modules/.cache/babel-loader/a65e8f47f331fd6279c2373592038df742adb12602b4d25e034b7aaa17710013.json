{"ast":null,"code":"var _jsxFileName = \"/home/devbox/project/src/components/ComponentPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Stencil } from '@antv/x6-plugin-stencil';\nimport { basicNodes, containerNodes } from '../config/componentConfig';\nimport '../styles/stencil.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComponentPanel = ({\n  graph\n}) => {\n  _s();\n  const stencilContainer = useRef(null);\n  // 添加 stencil 的 ref，避免重复创建\n  const stencilRef = useRef(null);\n  useEffect(() => {\n    if (!stencilContainer.current) return;\n    if (stencilRef.current) {\n      // 如果 stencil 已经存在，直接返回\n      return;\n    }\n\n    // 创建基础节点和容器节点（移到 useEffect 内部）\n    const basicStencilNodes = basicNodes.map(node => graph.createNode(node));\n    const containerStencilNodes = containerNodes.map(node => graph.createNode(node));\n    const stencil = new Stencil({\n      title: '组件库',\n      target: graph,\n      stencilGraphWidth: 200,\n      stencilGraphHeight: 500,\n      collapsable: true,\n      groups: [{\n        name: 'basic',\n        title: '基础组件',\n        graphHeight: 250,\n        layoutOptions: {\n          columns: 2,\n          marginX: 10,\n          marginY: 10\n        }\n      }, {\n        name: 'container',\n        title: '容器组件',\n        graphHeight: 250,\n        layoutOptions: {\n          columns: 1,\n          marginX: 10,\n          marginY: 10\n        }\n      }],\n      getDragNode: node => node.clone()\n    });\n    stencilRef.current = stencil;\n    stencilContainer.current.appendChild(stencil.container);\n\n    // 加载节点\n    stencil.load(basicStencilNodes, 'basic');\n    stencil.load(containerStencilNodes, 'container');\n\n    // 清理函数\n    return () => {\n      if (stencilRef.current) {\n        stencilRef.current.dispose();\n        stencilRef.current = null;\n      }\n    };\n  }, []); // 移除 graph 依赖，因为它不应该触发重新创建\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: stencilContainer,\n    style: {\n      width: '240px',\n      height: '100%',\n      border: '1px solid #f0f0f0'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ComponentPanel, \"wqWQz4dQ8AuXS8UyCh4+q9fzOaI=\");\n_c = ComponentPanel;\nexport default ComponentPanel;\nvar _c;\n$RefreshReg$(_c, \"ComponentPanel\");","map":{"version":3,"names":["React","useEffect","useRef","Stencil","basicNodes","containerNodes","jsxDEV","_jsxDEV","ComponentPanel","graph","_s","stencilContainer","stencilRef","current","basicStencilNodes","map","node","createNode","containerStencilNodes","stencil","title","target","stencilGraphWidth","stencilGraphHeight","collapsable","groups","name","graphHeight","layoutOptions","columns","marginX","marginY","getDragNode","clone","appendChild","container","load","dispose","ref","style","width","height","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/devbox/project/src/components/ComponentPanel.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Graph } from '@antv/x6';\nimport { Stencil } from '@antv/x6-plugin-stencil';\nimport { basicNodes, containerNodes } from '../config/componentConfig';\nimport '../styles/stencil.css';\n\ninterface ComponentPanelProps {\n  graph: Graph;\n}\n\nconst ComponentPanel: React.FC<ComponentPanelProps> = ({ graph }) => {\n  const stencilContainer = useRef<HTMLDivElement>(null);\n  // 添加 stencil 的 ref，避免重复创建\n  const stencilRef = useRef<Stencil | null>(null);\n\n  useEffect(() => {\n    if (!stencilContainer.current) return;\n    if (stencilRef.current) {\n      // 如果 stencil 已经存在，直接返回\n      return;\n    }\n\n    // 创建基础节点和容器节点（移到 useEffect 内部）\n    const basicStencilNodes = basicNodes.map((node) => graph.createNode(node));\n    const containerStencilNodes = containerNodes.map((node) => graph.createNode(node));\n\n    const stencil = new Stencil({\n      title: '组件库',\n      target: graph,\n      stencilGraphWidth: 200,\n      stencilGraphHeight: 500,\n      collapsable: true,\n      groups: [\n        {\n          name: 'basic',\n          title: '基础组件',\n          graphHeight: 250,\n          layoutOptions: {\n            columns: 2,\n            marginX: 10,\n            marginY: 10,\n          },\n        },\n        {\n          name: 'container',\n          title: '容器组件',\n          graphHeight: 250,\n          layoutOptions: {\n            columns: 1,\n            marginX: 10,\n            marginY: 10,\n          },\n        },\n      ],\n      getDragNode: (node) => node.clone(),\n    });\n\n    stencilRef.current = stencil;\n    stencilContainer.current.appendChild(stencil.container);\n\n    // 加载节点\n    stencil.load(basicStencilNodes, 'basic');\n    stencil.load(containerStencilNodes, 'container');\n\n    // 清理函数\n    return () => {\n      if (stencilRef.current) {\n        stencilRef.current.dispose();\n        stencilRef.current = null;\n      }\n    };\n  }, []); // 移除 graph 依赖，因为它不应该触发重新创建\n\n  return (\n    <div \n      ref={stencilContainer} \n      style={{ \n        width: '240px',\n        height: '100%',\n        border: '1px solid #f0f0f0',\n      }} \n    />\n  );\n};\n\nexport default ComponentPanel; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEhD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,UAAU,EAAEC,cAAc,QAAQ,2BAA2B;AACtE,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM/B,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAMC,gBAAgB,GAAGT,MAAM,CAAiB,IAAI,CAAC;EACrD;EACA,MAAMU,UAAU,GAAGV,MAAM,CAAiB,IAAI,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,gBAAgB,CAACE,OAAO,EAAE;IAC/B,IAAID,UAAU,CAACC,OAAO,EAAE;MACtB;MACA;IACF;;IAEA;IACA,MAAMC,iBAAiB,GAAGV,UAAU,CAACW,GAAG,CAAEC,IAAI,IAAKP,KAAK,CAACQ,UAAU,CAACD,IAAI,CAAC,CAAC;IAC1E,MAAME,qBAAqB,GAAGb,cAAc,CAACU,GAAG,CAAEC,IAAI,IAAKP,KAAK,CAACQ,UAAU,CAACD,IAAI,CAAC,CAAC;IAElF,MAAMG,OAAO,GAAG,IAAIhB,OAAO,CAAC;MAC1BiB,KAAK,EAAE,KAAK;MACZC,MAAM,EAAEZ,KAAK;MACba,iBAAiB,EAAE,GAAG;MACtBC,kBAAkB,EAAE,GAAG;MACvBC,WAAW,EAAE,IAAI;MACjBC,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,OAAO;QACbN,KAAK,EAAE,MAAM;QACbO,WAAW,EAAE,GAAG;QAChBC,aAAa,EAAE;UACbC,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,EAAE;UACXC,OAAO,EAAE;QACX;MACF,CAAC,EACD;QACEL,IAAI,EAAE,WAAW;QACjBN,KAAK,EAAE,MAAM;QACbO,WAAW,EAAE,GAAG;QAChBC,aAAa,EAAE;UACbC,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,EAAE;UACXC,OAAO,EAAE;QACX;MACF,CAAC,CACF;MACDC,WAAW,EAAGhB,IAAI,IAAKA,IAAI,CAACiB,KAAK,CAAC;IACpC,CAAC,CAAC;IAEFrB,UAAU,CAACC,OAAO,GAAGM,OAAO;IAC5BR,gBAAgB,CAACE,OAAO,CAACqB,WAAW,CAACf,OAAO,CAACgB,SAAS,CAAC;;IAEvD;IACAhB,OAAO,CAACiB,IAAI,CAACtB,iBAAiB,EAAE,OAAO,CAAC;IACxCK,OAAO,CAACiB,IAAI,CAAClB,qBAAqB,EAAE,WAAW,CAAC;;IAEhD;IACA,OAAO,MAAM;MACX,IAAIN,UAAU,CAACC,OAAO,EAAE;QACtBD,UAAU,CAACC,OAAO,CAACwB,OAAO,CAAC,CAAC;QAC5BzB,UAAU,CAACC,OAAO,GAAG,IAAI;MAC3B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA;IACE+B,GAAG,EAAE3B,gBAAiB;IACtB4B,KAAK,EAAE;MACLC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,MAAM;MACdC,MAAM,EAAE;IACV;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACpC,EAAA,CAzEIF,cAA6C;AAAAuC,EAAA,GAA7CvC,cAA6C;AA2EnD,eAAeA,cAAc;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}