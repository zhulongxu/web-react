{"ast":null,"code":"export var Interp;\n(function (Interp) {\n  Interp.number = (a, b) => {\n    const d = b - a;\n    return t => {\n      return a + d * t;\n    };\n  };\n  Interp.object = (a, b) => {\n    const keys = Object.keys(a);\n    return t => {\n      const ret = {};\n      for (let i = keys.length - 1; i !== -1; i -= 1) {\n        const key = keys[i];\n        ret[key] = a[key] + (b[key] - a[key]) * t;\n      }\n      return ret;\n    };\n  };\n  Interp.unit = (a, b) => {\n    const reg = /(-?[0-9]*.[0-9]*)(px|em|cm|mm|in|pt|pc|%)/;\n    const ma = reg.exec(a);\n    const mb = reg.exec(b);\n    const pb = mb ? mb[1] : '';\n    const aa = ma ? +ma[1] : 0;\n    const bb = mb ? +mb[1] : 0;\n    const index = pb.indexOf('.');\n    const precision = index > 0 ? pb[1].length - index - 1 : 0;\n    const d = bb - aa;\n    const u = ma ? ma[2] : '';\n    return t => {\n      return (aa + d * t).toFixed(precision) + u;\n    };\n  };\n  Interp.color = (a, b) => {\n    const ca = parseInt(a.slice(1), 16);\n    const cb = parseInt(b.slice(1), 16);\n    const ra = ca & 0x0000ff;\n    const rd = (cb & 0x0000ff) - ra;\n    const ga = ca & 0x00ff00;\n    const gd = (cb & 0x00ff00) - ga;\n    const ba = ca & 0xff0000;\n    const bd = (cb & 0xff0000) - ba;\n    return t => {\n      const r = ra + rd * t & 0x000000ff;\n      const g = ga + gd * t & 0x0000ff00;\n      const b = ba + bd * t & 0x00ff0000;\n      return `#${(1 << 24 | r | g | b).toString(16).slice(1)}`;\n    };\n  };\n})(Interp || (Interp = {}));","map":{"version":3,"names":["Interp","number","a","b","d","t","object","keys","Object","ret","i","length","key","unit","reg","ma","exec","mb","pb","aa","bb","index","indexOf","precision","u","toFixed","color","ca","parseInt","slice","cb","ra","rd","ga","gd","ba","bd","r","g","toString"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6-common@2.0.17/node_modules/@antv/x6-common/src/animation/interp.ts"],"sourcesContent":["export namespace Interp {\n  export type Definition<T> = (from: T, to: T) => (time: number) => T\n}\n\nexport namespace Interp {\n  export const number: Definition<number> = (a, b) => {\n    const d = b - a\n    return (t: number) => {\n      return a + d * t\n    }\n  }\n\n  export const object: Definition<{ [key: string]: number }> = (a, b) => {\n    const keys = Object.keys(a)\n    return (t) => {\n      const ret: { [key: string]: number } = {}\n      for (let i = keys.length - 1; i !== -1; i -= 1) {\n        const key = keys[i]\n        ret[key] = a[key] + (b[key] - a[key]) * t\n      }\n      return ret\n    }\n  }\n\n  export const unit: Definition<string> = (a, b) => {\n    const reg = /(-?[0-9]*.[0-9]*)(px|em|cm|mm|in|pt|pc|%)/\n    const ma = reg.exec(a)\n    const mb = reg.exec(b)\n\n    const pb = mb ? mb[1] : ''\n    const aa = ma ? +ma[1] : 0\n    const bb = mb ? +mb[1] : 0\n\n    const index = pb.indexOf('.')\n    const precision = index > 0 ? pb[1].length - index - 1 : 0\n\n    const d = bb - aa\n    const u = ma ? ma[2] : ''\n\n    return (t) => {\n      return (aa + d * t).toFixed(precision) + u\n    }\n  }\n\n  export const color: Definition<string> = (a, b) => {\n    const ca = parseInt(a.slice(1), 16)\n    const cb = parseInt(b.slice(1), 16)\n    const ra = ca & 0x0000ff\n    const rd = (cb & 0x0000ff) - ra\n    const ga = ca & 0x00ff00\n    const gd = (cb & 0x00ff00) - ga\n    const ba = ca & 0xff0000\n    const bd = (cb & 0xff0000) - ba\n\n    return (t) => {\n      const r = (ra + rd * t) & 0x000000ff\n      const g = (ga + gd * t) & 0x0000ff00\n      const b = (ba + bd * t) & 0x00ff0000\n      return `#${((1 << 24) | r | g | b).toString(16).slice(1)}`\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}