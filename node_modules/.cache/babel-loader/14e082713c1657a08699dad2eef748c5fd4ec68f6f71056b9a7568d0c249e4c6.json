{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ObjectExt } from '@antv/x6-common';\nimport { Rectangle } from '@antv/x6-geometry';\nimport { Background } from '../registry';\nimport { Base } from './base';\nexport class BackgroundManager extends Base {\n  get elem() {\n    return this.view.background;\n  }\n  init() {\n    this.startListening();\n    if (this.options.background) {\n      this.draw(this.options.background);\n    }\n  }\n  startListening() {\n    this.graph.on('scale', this.update, this);\n    this.graph.on('translate', this.update, this);\n  }\n  stopListening() {\n    this.graph.off('scale', this.update, this);\n    this.graph.off('translate', this.update, this);\n  }\n  updateBackgroundImage(options = {}) {\n    let backgroundSize = options.size || 'auto auto';\n    let backgroundPosition = options.position || 'center';\n    const scale = this.graph.transform.getScale();\n    const ts = this.graph.translate();\n    // backgroundPosition\n    if (typeof backgroundPosition === 'object') {\n      const x = ts.tx + scale.sx * (backgroundPosition.x || 0);\n      const y = ts.ty + scale.sy * (backgroundPosition.y || 0);\n      backgroundPosition = `${x}px ${y}px`;\n    }\n    // backgroundSize\n    if (typeof backgroundSize === 'object') {\n      backgroundSize = Rectangle.fromSize(backgroundSize).scale(scale.sx, scale.sy);\n      backgroundSize = `${backgroundSize.width}px ${backgroundSize.height}px`;\n    }\n    this.elem.style.backgroundSize = backgroundSize;\n    this.elem.style.backgroundPosition = backgroundPosition;\n  }\n  drawBackgroundImage(img, options = {}) {\n    if (!(img instanceof HTMLImageElement)) {\n      this.elem.style.backgroundImage = '';\n      return;\n    }\n    // draw multiple times to show the last image\n    const cache = this.optionsCache;\n    if (cache && cache.image !== options.image) {\n      return;\n    }\n    let uri;\n    const opacity = options.opacity;\n    const backgroundSize = options.size;\n    let backgroundRepeat = options.repeat || 'no-repeat';\n    const pattern = Background.registry.get(backgroundRepeat);\n    if (typeof pattern === 'function') {\n      const quality = options.quality || 1;\n      img.width *= quality;\n      img.height *= quality;\n      const canvas = pattern(img, options);\n      if (!(canvas instanceof HTMLCanvasElement)) {\n        throw new Error('Background pattern must return an HTML Canvas instance');\n      }\n      uri = canvas.toDataURL('image/png');\n      // `repeat` was changed in pattern function\n      if (options.repeat && backgroundRepeat !== options.repeat) {\n        backgroundRepeat = options.repeat;\n      } else {\n        backgroundRepeat = 'repeat';\n      }\n      if (typeof backgroundSize === 'object') {\n        // recalculate the tile size if an object passed in\n        backgroundSize.width *= canvas.width / img.width;\n        backgroundSize.height *= canvas.height / img.height;\n      } else if (backgroundSize === undefined) {\n        // calcule the tile size if no provided\n        options.size = {\n          width: canvas.width / quality,\n          height: canvas.height / quality\n        };\n      }\n    } else {\n      uri = img.src;\n      if (backgroundSize === undefined) {\n        options.size = {\n          width: img.width,\n          height: img.height\n        };\n      }\n    }\n    if (cache != null && typeof options.size === 'object' && options.image === cache.image && options.repeat === cache.repeat && options.quality === cache.quality) {\n      cache.size = ObjectExt.clone(options.size);\n    }\n    const style = this.elem.style;\n    style.backgroundImage = `url(${uri})`;\n    style.backgroundRepeat = backgroundRepeat;\n    style.opacity = opacity == null || opacity >= 1 ? '' : `${opacity}`;\n    this.updateBackgroundImage(options);\n  }\n  updateBackgroundColor(color) {\n    this.elem.style.backgroundColor = color || '';\n  }\n  updateBackgroundOptions(options) {\n    this.graph.options.background = options;\n  }\n  update() {\n    if (this.optionsCache) {\n      this.updateBackgroundImage(this.optionsCache);\n    }\n  }\n  draw(options) {\n    const opts = options || {};\n    this.updateBackgroundOptions(options);\n    this.updateBackgroundColor(opts.color);\n    if (opts.image) {\n      this.optionsCache = ObjectExt.clone(opts);\n      const img = document.createElement('img');\n      img.onload = () => this.drawBackgroundImage(img, options);\n      img.setAttribute('crossorigin', 'anonymous');\n      img.src = opts.image;\n    } else {\n      this.drawBackgroundImage(null);\n      this.optionsCache = null;\n    }\n  }\n  clear() {\n    this.draw();\n  }\n  dispose() {\n    this.clear();\n    this.stopListening();\n  }\n}\n__decorate([Base.dispose()], BackgroundManager.prototype, \"dispose\", null);","map":{"version":3,"names":["ObjectExt","Rectangle","Background","Base","BackgroundManager","elem","view","background","init","startListening","options","draw","graph","on","update","stopListening","off","updateBackgroundImage","backgroundSize","size","backgroundPosition","position","scale","transform","getScale","ts","translate","x","tx","sx","y","ty","sy","fromSize","width","height","style","drawBackgroundImage","img","HTMLImageElement","backgroundImage","cache","optionsCache","image","uri","opacity","backgroundRepeat","repeat","pattern","registry","get","quality","canvas","HTMLCanvasElement","Error","toDataURL","undefined","src","clone","updateBackgroundColor","color","backgroundColor","updateBackgroundOptions","opts","document","createElement","onload","setAttribute","clear","dispose","__decorate"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/graph/background.ts"],"sourcesContent":["import { ObjectExt } from '@antv/x6-common'\nimport { Rectangle } from '@antv/x6-geometry'\nimport { Background } from '../registry'\nimport { Base } from './base'\n\nexport class BackgroundManager extends Base {\n  protected optionsCache: BackgroundManager.Options | null\n\n  protected get elem() {\n    return this.view.background\n  }\n\n  protected init() {\n    this.startListening()\n    if (this.options.background) {\n      this.draw(this.options.background)\n    }\n  }\n\n  protected startListening() {\n    this.graph.on('scale', this.update, this)\n    this.graph.on('translate', this.update, this)\n  }\n\n  protected stopListening() {\n    this.graph.off('scale', this.update, this)\n    this.graph.off('translate', this.update, this)\n  }\n\n  protected updateBackgroundImage(options: BackgroundManager.Options = {}) {\n    let backgroundSize: any = options.size || 'auto auto'\n    let backgroundPosition: any = options.position || 'center'\n\n    const scale = this.graph.transform.getScale()\n    const ts = this.graph.translate()\n\n    // backgroundPosition\n    if (typeof backgroundPosition === 'object') {\n      const x = ts.tx + scale.sx * (backgroundPosition.x || 0)\n      const y = ts.ty + scale.sy * (backgroundPosition.y || 0)\n      backgroundPosition = `${x}px ${y}px`\n    }\n\n    // backgroundSize\n    if (typeof backgroundSize === 'object') {\n      backgroundSize = Rectangle.fromSize(backgroundSize).scale(\n        scale.sx,\n        scale.sy,\n      )\n      backgroundSize = `${backgroundSize.width}px ${backgroundSize.height}px`\n    }\n\n    this.elem.style.backgroundSize = backgroundSize\n    this.elem.style.backgroundPosition = backgroundPosition\n  }\n\n  protected drawBackgroundImage(\n    img?: HTMLImageElement | null,\n    options: BackgroundManager.Options = {},\n  ) {\n    if (!(img instanceof HTMLImageElement)) {\n      this.elem.style.backgroundImage = ''\n      return\n    }\n\n    // draw multiple times to show the last image\n    const cache = this.optionsCache\n    if (cache && cache.image !== options.image) {\n      return\n    }\n\n    let uri\n    const opacity = options.opacity\n    const backgroundSize: any = options.size\n    let backgroundRepeat = options.repeat || 'no-repeat'\n\n    const pattern = Background.registry.get(backgroundRepeat)\n    if (typeof pattern === 'function') {\n      const quality = (options as Background.ManaualItem).quality || 1\n      img.width *= quality\n      img.height *= quality\n      const canvas = pattern(img, options)\n      if (!(canvas instanceof HTMLCanvasElement)) {\n        throw new Error(\n          'Background pattern must return an HTML Canvas instance',\n        )\n      }\n\n      uri = canvas.toDataURL('image/png')\n\n      // `repeat` was changed in pattern function\n      if (options.repeat && backgroundRepeat !== options.repeat) {\n        backgroundRepeat = options.repeat\n      } else {\n        backgroundRepeat = 'repeat'\n      }\n\n      if (typeof backgroundSize === 'object') {\n        // recalculate the tile size if an object passed in\n        backgroundSize.width *= canvas.width / img.width\n        backgroundSize.height *= canvas.height / img.height\n      } else if (backgroundSize === undefined) {\n        // calcule the tile size if no provided\n        options.size = {\n          width: canvas.width / quality,\n          height: canvas.height / quality,\n        }\n      }\n    } else {\n      uri = img.src\n      if (backgroundSize === undefined) {\n        options.size = {\n          width: img.width,\n          height: img.height,\n        }\n      }\n    }\n\n    if (\n      cache != null &&\n      typeof options.size === 'object' &&\n      options.image === cache.image &&\n      options.repeat === cache.repeat &&\n      (options as Background.ManaualItem).quality ===\n        (cache as Background.ManaualItem).quality\n    ) {\n      cache.size = ObjectExt.clone(options.size)\n    }\n\n    const style = this.elem.style\n    style.backgroundImage = `url(${uri})`\n    style.backgroundRepeat = backgroundRepeat\n    style.opacity = opacity == null || opacity >= 1 ? '' : `${opacity}`\n\n    this.updateBackgroundImage(options)\n  }\n\n  protected updateBackgroundColor(color?: string | null) {\n    this.elem.style.backgroundColor = color || ''\n  }\n\n  protected updateBackgroundOptions(options?: BackgroundManager.Options) {\n    this.graph.options.background = options\n  }\n\n  update() {\n    if (this.optionsCache) {\n      this.updateBackgroundImage(this.optionsCache)\n    }\n  }\n\n  draw(options?: BackgroundManager.Options) {\n    const opts = options || {}\n    this.updateBackgroundOptions(options)\n    this.updateBackgroundColor(opts.color)\n\n    if (opts.image) {\n      this.optionsCache = ObjectExt.clone(opts)\n      const img = document.createElement('img')\n      img.onload = () => this.drawBackgroundImage(img, options)\n      img.setAttribute('crossorigin', 'anonymous')\n      img.src = opts.image\n    } else {\n      this.drawBackgroundImage(null)\n      this.optionsCache = null\n    }\n  }\n\n  clear() {\n    this.draw()\n  }\n\n  @Base.dispose()\n  dispose() {\n    this.clear()\n    this.stopListening()\n  }\n}\n\nexport namespace BackgroundManager {\n  export type Options =\n    | Background.Options\n    | Background.NativeItem\n    | Background.ManaualItem\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}