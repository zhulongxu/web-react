{"ast":null,"code":"import { ns } from './elem';\nimport { kebabCase } from '../string/format';\nexport const CASE_SENSITIVE_ATTR = ['viewBox', 'attributeName', 'attributeType', 'repeatCount', 'textLength', 'lengthAdjust', 'gradientUnits'];\nexport function getAttribute(elem, name) {\n  return elem.getAttribute(name);\n}\nexport function removeAttribute(elem, name) {\n  const qualified = qualifyAttr(name);\n  if (qualified.ns) {\n    if (elem.hasAttributeNS(qualified.ns, qualified.local)) {\n      elem.removeAttributeNS(qualified.ns, qualified.local);\n    }\n  } else if (elem.hasAttribute(name)) {\n    elem.removeAttribute(name);\n  }\n}\nexport function setAttribute(elem, name, value) {\n  if (value == null) {\n    return removeAttribute(elem, name);\n  }\n  const qualified = qualifyAttr(name);\n  if (qualified.ns && typeof value === 'string') {\n    elem.setAttributeNS(qualified.ns, name, value);\n  } else if (name === 'id') {\n    elem.id = `${value}`;\n  } else {\n    elem.setAttribute(name, `${value}`);\n  }\n}\nexport function setAttributes(elem, attrs) {\n  Object.keys(attrs).forEach(name => {\n    setAttribute(elem, name, attrs[name]);\n  });\n}\nexport function attr(elem, name, value) {\n  if (name == null) {\n    const attrs = elem.attributes;\n    const ret = {};\n    for (let i = 0; i < attrs.length; i += 1) {\n      ret[attrs[i].name] = attrs[i].value;\n    }\n    return ret;\n  }\n  if (typeof name === 'string' && value === undefined) {\n    return elem.getAttribute(name);\n  }\n  if (typeof name === 'object') {\n    setAttributes(elem, name);\n  } else {\n    setAttribute(elem, name, value);\n  }\n}\nexport function qualifyAttr(name) {\n  if (name.indexOf(':') !== -1) {\n    const combinedKey = name.split(':');\n    return {\n      ns: ns[combinedKey[0]],\n      local: combinedKey[1]\n    };\n  }\n  return {\n    ns: null,\n    local: name\n  };\n}\nexport function kebablizeAttrs(attrs) {\n  const result = {};\n  Object.keys(attrs).forEach(key => {\n    const name = CASE_SENSITIVE_ATTR.includes(key) ? key : kebabCase(key);\n    result[name] = attrs[key];\n  });\n  return result;\n}\nexport function styleToObject(styleString) {\n  const ret = {};\n  const styles = styleString.split(';');\n  styles.forEach(item => {\n    const section = item.trim();\n    if (section) {\n      const pair = section.split('=');\n      if (pair.length) {\n        ret[pair[0].trim()] = pair[1] ? pair[1].trim() : '';\n      }\n    }\n  });\n  return ret;\n}\nexport function mergeAttrs(target, source) {\n  Object.keys(source).forEach(attr => {\n    if (attr === 'class') {\n      target[attr] = target[attr] ? `${target[attr]} ${source[attr]}` : source[attr];\n    } else if (attr === 'style') {\n      const to = typeof target[attr] === 'object';\n      const so = typeof source[attr] === 'object';\n      let tt;\n      let ss;\n      if (to && so) {\n        tt = target[attr];\n        ss = source[attr];\n      } else if (to) {\n        tt = target[attr];\n        ss = styleToObject(source[attr]);\n      } else if (so) {\n        tt = styleToObject(target[attr]);\n        ss = source[attr];\n      } else {\n        tt = styleToObject(target[attr]);\n        ss = styleToObject(source[attr]);\n      }\n      target[attr] = mergeAttrs(tt, ss);\n    } else {\n      target[attr] = source[attr];\n    }\n  });\n  return target;\n}","map":{"version":3,"names":["ns","kebabCase","CASE_SENSITIVE_ATTR","getAttribute","elem","name","removeAttribute","qualified","qualifyAttr","hasAttributeNS","local","removeAttributeNS","hasAttribute","setAttribute","value","setAttributeNS","id","setAttributes","attrs","Object","keys","forEach","attr","attributes","ret","i","length","undefined","indexOf","combinedKey","split","kebablizeAttrs","result","key","includes","styleToObject","styleString","styles","item","section","trim","pair","mergeAttrs","target","source","to","so","tt","ss"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6-common@2.0.17/node_modules/@antv/x6-common/src/dom/attr.ts"],"sourcesContent":["import { ns } from './elem'\nimport { kebabCase } from '../string/format'\n\nexport const CASE_SENSITIVE_ATTR = [\n  'viewBox',\n  'attributeName',\n  'attributeType',\n  'repeatCount',\n  'textLength',\n  'lengthAdjust',\n  'gradientUnits',\n]\n\nexport type Attributes = { [key: string]: string | number | null | undefined }\n\nexport function getAttribute(elem: Element, name: string) {\n  return elem.getAttribute(name)\n}\n\nexport function removeAttribute(elem: Element, name: string) {\n  const qualified = qualifyAttr(name)\n  if (qualified.ns) {\n    if (elem.hasAttributeNS(qualified.ns, qualified.local)) {\n      elem.removeAttributeNS(qualified.ns, qualified.local)\n    }\n  } else if (elem.hasAttribute(name)) {\n    elem.removeAttribute(name)\n  }\n}\n\nexport function setAttribute(\n  elem: Element,\n  name: string,\n  value?: string | number | null | undefined,\n) {\n  if (value == null) {\n    return removeAttribute(elem, name)\n  }\n\n  const qualified = qualifyAttr(name)\n  if (qualified.ns && typeof value === 'string') {\n    elem.setAttributeNS(qualified.ns, name, value)\n  } else if (name === 'id') {\n    elem.id = `${value}`\n  } else {\n    elem.setAttribute(name, `${value}`)\n  }\n}\n\nexport function setAttributes(\n  elem: Element,\n  attrs: { [attr: string]: string | number | null | undefined },\n) {\n  Object.keys(attrs).forEach((name) => {\n    setAttribute(elem, name, attrs[name])\n  })\n}\n\nexport function attr(elem: Element): { [attr: string]: string }\nexport function attr(elem: Element, name: string): string\nexport function attr(\n  elem: Element,\n  attrs: { [attr: string]: string | number | null | undefined },\n): void\nexport function attr(\n  elem: Element,\n  name: string,\n  value: string | number | null | undefined,\n): void\nexport function attr(\n  elem: Element,\n  name?: string | { [attr: string]: string | number | null | undefined },\n  value?: string | number | null | undefined,\n) {\n  if (name == null) {\n    const attrs = elem.attributes\n    const ret: { [name: string]: string } = {}\n    for (let i = 0; i < attrs.length; i += 1) {\n      ret[attrs[i].name] = attrs[i].value\n    }\n    return ret\n  }\n\n  if (typeof name === 'string' && value === undefined) {\n    return elem.getAttribute(name)\n  }\n\n  if (typeof name === 'object') {\n    setAttributes(elem, name)\n  } else {\n    setAttribute(elem, name as string, value)\n  }\n}\n\nexport function qualifyAttr(name: string) {\n  if (name.indexOf(':') !== -1) {\n    const combinedKey = name.split(':')\n    return {\n      ns: (ns as any)[combinedKey[0]],\n      local: combinedKey[1],\n    }\n  }\n\n  return {\n    ns: null,\n    local: name,\n  }\n}\n\nexport function kebablizeAttrs(attrs: Attributes) {\n  const result: Attributes = {}\n  Object.keys(attrs).forEach((key) => {\n    const name = CASE_SENSITIVE_ATTR.includes(key) ? key : kebabCase(key)\n    result[name] = attrs[key]\n  })\n  return result\n}\n\nexport function styleToObject(styleString: string) {\n  const ret: { [name: string]: string } = {}\n  const styles = styleString.split(';')\n  styles.forEach((item) => {\n    const section = item.trim()\n    if (section) {\n      const pair = section.split('=')\n      if (pair.length) {\n        ret[pair[0].trim()] = pair[1] ? pair[1].trim() : ''\n      }\n    }\n  })\n  return ret\n}\n\nexport function mergeAttrs(\n  target: { [attr: string]: any },\n  source: { [attr: string]: any },\n) {\n  Object.keys(source).forEach((attr) => {\n    if (attr === 'class') {\n      target[attr] = target[attr]\n        ? `${target[attr]} ${source[attr]}`\n        : source[attr]\n    } else if (attr === 'style') {\n      const to = typeof target[attr] === 'object'\n      const so = typeof source[attr] === 'object'\n\n      let tt\n      let ss\n\n      if (to && so) {\n        tt = target[attr]\n        ss = source[attr]\n      } else if (to) {\n        tt = target[attr]\n        ss = styleToObject(source[attr])\n      } else if (so) {\n        tt = styleToObject(target[attr])\n        ss = source[attr]\n      } else {\n        tt = styleToObject(target[attr])\n        ss = styleToObject(source[attr])\n      }\n\n      target[attr] = mergeAttrs(tt, ss)\n    } else {\n      target[attr] = source[attr]\n    }\n  })\n\n  return target\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}