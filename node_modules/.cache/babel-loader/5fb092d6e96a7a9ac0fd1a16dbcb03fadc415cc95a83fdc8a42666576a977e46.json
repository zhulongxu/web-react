{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Dom, Basecoat } from '@antv/x6-common';\nimport { Config } from '../config';\nexport class View extends Basecoat {\n  get priority() {\n    return 2;\n  }\n  /** If need remove `this.container` DOM */\n  get disposeContainer() {\n    return true;\n  }\n  constructor() {\n    super();\n    this.cid = Private.uniqueId();\n    View.views[this.cid] = this;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  confirmUpdate(flag, options) {\n    return 0;\n  }\n  empty(elem = this.container) {\n    Dom.empty(elem);\n    return this;\n  }\n  unmount(elem = this.container) {\n    Dom.remove(elem);\n    return this;\n  }\n  remove(elem = this.container) {\n    if (elem === this.container) {\n      this.removeEventListeners(document);\n      this.onRemove();\n      delete View.views[this.cid];\n      if (this.disposeContainer) {\n        this.unmount(elem);\n      }\n    } else {\n      this.unmount(elem);\n    }\n    return this;\n  }\n  onRemove() {}\n  setClass(className, elem = this.container) {\n    elem.classList.value = Array.isArray(className) ? className.join(' ') : className;\n  }\n  addClass(className, elem = this.container) {\n    Dom.addClass(elem, Array.isArray(className) ? className.join(' ') : className);\n    return this;\n  }\n  removeClass(className, elem = this.container) {\n    Dom.removeClass(elem, Array.isArray(className) ? className.join(' ') : className);\n    return this;\n  }\n  setStyle(style, elem = this.container) {\n    Dom.css(elem, style);\n    return this;\n  }\n  setAttrs(attrs, elem = this.container) {\n    if (attrs != null && elem != null) {\n      Dom.attr(elem, attrs);\n    }\n    return this;\n  }\n  /**\n   * Returns the value of the specified attribute of `node`.\n   *\n   * If the node does not set a value for attribute, start recursing up\n   * the DOM tree from node to lookup for attribute at the ancestors of\n   * node. If the recursion reaches CellView's root node and attribute\n   * is not found even there, return `null`.\n   */\n  findAttr(attrName, elem = this.container) {\n    let current = elem;\n    while (current && current.nodeType === 1) {\n      const value = current.getAttribute(attrName);\n      if (value != null) {\n        return value;\n      }\n      if (current === this.container) {\n        return null;\n      }\n      current = current.parentNode;\n    }\n    return null;\n  }\n  find(selector, rootElem = this.container, selectors = this.selectors) {\n    return View.find(selector, rootElem, selectors).elems;\n  }\n  findOne(selector, rootElem = this.container, selectors = this.selectors) {\n    const nodes = this.find(selector, rootElem, selectors);\n    return nodes.length > 0 ? nodes[0] : null;\n  }\n  findByAttr(attrName, elem = this.container) {\n    let node = elem;\n    while (node && node.getAttribute) {\n      const val = node.getAttribute(attrName);\n      if ((val != null || node === this.container) && val !== 'false') {\n        return node;\n      }\n      node = node.parentNode;\n    }\n    // If the overall cell has set `magnet === false`, then returns\n    // `null` to announce there is no magnet found for this cell.\n    // This is especially useful to set on cells that have 'ports'.\n    // In this case, only the ports have set `magnet === true` and the\n    // overall element has `magnet === false`.\n    return null;\n  }\n  getSelector(elem, prevSelector) {\n    let selector;\n    if (elem === this.container) {\n      if (typeof prevSelector === 'string') {\n        selector = `> ${prevSelector}`;\n      }\n      return selector;\n    }\n    if (elem) {\n      const nth = Dom.index(elem) + 1;\n      selector = `${elem.tagName.toLowerCase()}:nth-child(${nth})`;\n      if (prevSelector) {\n        selector += ` > ${prevSelector}`;\n      }\n      selector = this.getSelector(elem.parentNode, selector);\n    }\n    return selector;\n  }\n  prefixClassName(className) {\n    return Config.prefix(className);\n  }\n  delegateEvents(events, append) {\n    if (events == null) {\n      return this;\n    }\n    if (!append) {\n      this.undelegateEvents();\n    }\n    const splitter = /^(\\S+)\\s*(.*)$/;\n    Object.keys(events).forEach(key => {\n      const match = key.match(splitter);\n      if (match == null) {\n        return;\n      }\n      const method = this.getEventHandler(events[key]);\n      if (typeof method === 'function') {\n        this.delegateEvent(match[1], match[2], method);\n      }\n    });\n    return this;\n  }\n  undelegateEvents() {\n    Dom.Event.off(this.container, this.getEventNamespace());\n    return this;\n  }\n  delegateDocumentEvents(events, data) {\n    this.addEventListeners(document, events, data);\n    return this;\n  }\n  undelegateDocumentEvents() {\n    this.removeEventListeners(document);\n    return this;\n  }\n  delegateEvent(eventName, selector, listener) {\n    Dom.Event.on(this.container, eventName + this.getEventNamespace(), selector, listener);\n    return this;\n  }\n  undelegateEvent(eventName, selector, listener) {\n    const name = eventName + this.getEventNamespace();\n    if (selector == null) {\n      Dom.Event.off(this.container, name);\n    } else if (typeof selector === 'string') {\n      Dom.Event.off(this.container, name, selector, listener);\n    } else {\n      Dom.Event.off(this.container, name, selector);\n    }\n    return this;\n  }\n  addEventListeners(elem, events, data) {\n    if (events == null) {\n      return this;\n    }\n    const ns = this.getEventNamespace();\n    Object.keys(events).forEach(eventName => {\n      const method = this.getEventHandler(events[eventName]);\n      if (typeof method === 'function') {\n        Dom.Event.on(elem, eventName + ns, data, method);\n      }\n    });\n    return this;\n  }\n  removeEventListeners(elem) {\n    if (elem != null) {\n      Dom.Event.off(elem, this.getEventNamespace());\n    }\n    return this;\n  }\n  getEventNamespace() {\n    return `.${Config.prefixCls}-event-${this.cid}`;\n  }\n  // eslint-disable-next-line\n  getEventHandler(handler) {\n    // eslint-disable-next-line\n    let method;\n    if (typeof handler === 'string') {\n      const fn = this[handler];\n      if (typeof fn === 'function') {\n        method = (...args) => fn.call(this, ...args);\n      }\n    } else {\n      method = (...args) => handler.call(this, ...args);\n    }\n    return method;\n  }\n  getEventTarget(e, options = {}) {\n    // Touchmove/Touchend event's target is not reflecting the element\n    // under the coordinates as mousemove does.\n    // It holds the element when a touchstart triggered.\n    const {\n      target,\n      type,\n      clientX = 0,\n      clientY = 0\n    } = e;\n    if (options.fromPoint || type === 'touchmove' || type === 'touchend') {\n      return document.elementFromPoint(clientX, clientY);\n    }\n    return target;\n  }\n  stopPropagation(e) {\n    this.setEventData(e, {\n      propagationStopped: true\n    });\n    return this;\n  }\n  isPropagationStopped(e) {\n    return this.getEventData(e).propagationStopped === true;\n  }\n  getEventData(e) {\n    return this.eventData(e);\n  }\n  setEventData(e, data) {\n    return this.eventData(e, data);\n  }\n  eventData(e, data) {\n    if (e == null) {\n      throw new TypeError('Event object required');\n    }\n    let currentData = e.data;\n    const key = `__${this.cid}__`;\n    // get\n    if (data == null) {\n      if (currentData == null) {\n        return {};\n      }\n      return currentData[key] || {};\n    }\n    // set\n    if (currentData == null) {\n      currentData = e.data = {};\n    }\n    if (currentData[key] == null) {\n      currentData[key] = Object.assign({}, data);\n    } else {\n      currentData[key] = Object.assign(Object.assign({}, currentData[key]), data);\n    }\n    return currentData[key];\n  }\n  normalizeEvent(evt) {\n    return View.normalizeEvent(evt);\n  }\n  dispose() {\n    this.remove();\n  }\n}\n__decorate([View.dispose()], View.prototype, \"dispose\", null);\n(function (View) {\n  function createElement(tagName, isSvgElement) {\n    return isSvgElement ? Dom.createSvgElement(tagName || 'g') : Dom.createElementNS(tagName || 'div');\n  }\n  View.createElement = createElement;\n  function find(selector, rootElem, selectors) {\n    if (!selector || selector === '.') {\n      return {\n        elems: [rootElem]\n      };\n    }\n    if (selectors) {\n      const nodes = selectors[selector];\n      if (nodes) {\n        return {\n          elems: Array.isArray(nodes) ? nodes : [nodes]\n        };\n      }\n    }\n    if (Config.useCSSSelector) {\n      const validSelector = selector.includes('>') ? `:scope ${selector}` : selector;\n      return {\n        isCSSSelector: true,\n        // $(rootElem).find(selector).toArray() as Element[]\n        elems: Array.prototype.slice.call(rootElem.querySelectorAll(validSelector))\n      };\n    }\n    return {\n      elems: []\n    };\n  }\n  View.find = find;\n  function normalizeEvent(evt) {\n    let normalizedEvent = evt;\n    const originalEvent = evt.originalEvent;\n    const touchEvt = originalEvent && originalEvent.changedTouches && originalEvent.changedTouches[0];\n    if (touchEvt) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const key in evt) {\n        if (touchEvt[key] === undefined) {\n          touchEvt[key] = evt[key];\n        }\n      }\n      normalizedEvent = touchEvt;\n    }\n    return normalizedEvent;\n  }\n  View.normalizeEvent = normalizeEvent;\n})(View || (View = {}));\n(function (View) {\n  View.views = {};\n  function getView(cid) {\n    return View.views[cid] || null;\n  }\n  View.getView = getView;\n})(View || (View = {}));\nvar Private;\n(function (Private) {\n  let counter = 0;\n  function uniqueId() {\n    const id = `v${counter}`;\n    counter += 1;\n    return id;\n  }\n  Private.uniqueId = uniqueId;\n})(Private || (Private = {}));","map":{"version":3,"names":["Dom","Basecoat","Config","View","priority","disposeContainer","constructor","cid","Private","uniqueId","views","confirmUpdate","flag","options","empty","elem","container","unmount","remove","removeEventListeners","document","onRemove","setClass","className","classList","value","Array","isArray","join","addClass","removeClass","setStyle","style","css","setAttrs","attrs","attr","findAttr","attrName","current","nodeType","getAttribute","parentNode","find","selector","rootElem","selectors","elems","findOne","nodes","length","findByAttr","node","val","getSelector","prevSelector","nth","index","tagName","toLowerCase","prefixClassName","prefix","delegateEvents","events","append","undelegateEvents","splitter","Object","keys","forEach","key","match","method","getEventHandler","delegateEvent","Event","off","getEventNamespace","delegateDocumentEvents","data","addEventListeners","undelegateDocumentEvents","eventName","listener","on","undelegateEvent","name","ns","prefixCls","handler","fn","args","call","getEventTarget","e","target","type","clientX","clientY","fromPoint","elementFromPoint","stopPropagation","setEventData","propagationStopped","isPropagationStopped","getEventData","eventData","TypeError","currentData","assign","normalizeEvent","evt","dispose","__decorate","createElement","isSvgElement","createSvgElement","createElementNS","useCSSSelector","validSelector","includes","isCSSSelector","prototype","slice","querySelectorAll","normalizedEvent","originalEvent","touchEvt","changedTouches","undefined","getView","counter","id"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/view/view.ts"],"sourcesContent":["import { Dom, KeyValue, Basecoat } from '@antv/x6-common'\nimport { EventArgs } from '@antv/x6-common/lib/event/types'\nimport { Config } from '../config'\nimport { Markup } from './markup'\nimport { Attr } from '../registry'\n\nexport abstract class View<A extends EventArgs = any> extends Basecoat<A> {\n  public readonly cid: string\n  public container: Element\n  protected selectors: Markup.Selectors\n\n  public get priority() {\n    return 2\n  }\n\n  /** If need remove `this.container` DOM */\n  protected get disposeContainer() {\n    return true\n  }\n\n  constructor() {\n    super()\n    this.cid = Private.uniqueId()\n    View.views[this.cid] = this\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  confirmUpdate(flag: number, options: any): number {\n    return 0\n  }\n\n  empty(elem: Element = this.container) {\n    Dom.empty(elem)\n    return this\n  }\n\n  unmount(elem: Element = this.container) {\n    Dom.remove(elem)\n    return this\n  }\n\n  remove(elem: Element = this.container) {\n    if (elem === this.container) {\n      this.removeEventListeners(document)\n      this.onRemove()\n      delete View.views[this.cid]\n      if (this.disposeContainer) {\n        this.unmount(elem)\n      }\n    } else {\n      this.unmount(elem)\n    }\n    return this\n  }\n\n  protected onRemove() {}\n\n  setClass(className: string | string[], elem: Element = this.container) {\n    elem.classList.value = Array.isArray(className)\n      ? className.join(' ')\n      : className\n  }\n\n  addClass(className: string | string[], elem: Element = this.container) {\n    Dom.addClass(\n      elem,\n      Array.isArray(className) ? className.join(' ') : className,\n    )\n    return this\n  }\n\n  removeClass(className: string | string[], elem: Element = this.container) {\n    Dom.removeClass(\n      elem,\n      Array.isArray(className) ? className.join(' ') : className,\n    )\n    return this\n  }\n\n  setStyle(\n    style: Record<string, string | number>,\n    elem: Element = this.container,\n  ) {\n    Dom.css(elem, style)\n    return this\n  }\n\n  setAttrs(attrs?: Attr.SimpleAttrs | null, elem: Element = this.container) {\n    if (attrs != null && elem != null) {\n      Dom.attr(elem, attrs)\n    }\n    return this\n  }\n\n  /**\n   * Returns the value of the specified attribute of `node`.\n   *\n   * If the node does not set a value for attribute, start recursing up\n   * the DOM tree from node to lookup for attribute at the ancestors of\n   * node. If the recursion reaches CellView's root node and attribute\n   * is not found even there, return `null`.\n   */\n  findAttr(attrName: string, elem: Element = this.container) {\n    let current = elem\n    while (current && current.nodeType === 1) {\n      const value = current.getAttribute(attrName)\n      if (value != null) {\n        return value\n      }\n\n      if (current === this.container) {\n        return null\n      }\n\n      current = current.parentNode as Element\n    }\n\n    return null\n  }\n\n  find(\n    selector?: string,\n    rootElem: Element = this.container,\n    selectors: Markup.Selectors = this.selectors,\n  ) {\n    return View.find(selector, rootElem, selectors).elems\n  }\n\n  findOne(\n    selector?: string,\n    rootElem: Element = this.container,\n    selectors: Markup.Selectors = this.selectors,\n  ) {\n    const nodes = this.find(selector, rootElem, selectors)\n    return nodes.length > 0 ? nodes[0] : null\n  }\n\n  findByAttr(attrName: string, elem: Element = this.container) {\n    let node = elem\n    while (node && node.getAttribute) {\n      const val = node.getAttribute(attrName)\n      if ((val != null || node === this.container) && val !== 'false') {\n        return node\n      }\n      node = node.parentNode as Element\n    }\n\n    // If the overall cell has set `magnet === false`, then returns\n    // `null` to announce there is no magnet found for this cell.\n    // This is especially useful to set on cells that have 'ports'.\n    // In this case, only the ports have set `magnet === true` and the\n    // overall element has `magnet === false`.\n    return null\n  }\n\n  getSelector(elem: Element, prevSelector?: string): string | undefined {\n    let selector\n\n    if (elem === this.container) {\n      if (typeof prevSelector === 'string') {\n        selector = `> ${prevSelector}`\n      }\n      return selector\n    }\n\n    if (elem) {\n      const nth = Dom.index(elem) + 1\n      selector = `${elem.tagName.toLowerCase()}:nth-child(${nth})`\n      if (prevSelector) {\n        selector += ` > ${prevSelector}`\n      }\n\n      selector = this.getSelector(elem.parentNode as Element, selector)\n    }\n\n    return selector\n  }\n\n  prefixClassName(className: string) {\n    return Config.prefix(className)\n  }\n\n  delegateEvents(events: View.Events, append?: boolean) {\n    if (events == null) {\n      return this\n    }\n\n    if (!append) {\n      this.undelegateEvents()\n    }\n\n    const splitter = /^(\\S+)\\s*(.*)$/\n    Object.keys(events).forEach((key) => {\n      const match = key.match(splitter)\n      if (match == null) {\n        return\n      }\n\n      const method = this.getEventHandler(events[key])\n      if (typeof method === 'function') {\n        this.delegateEvent(match[1], match[2], method)\n      }\n    })\n\n    return this\n  }\n\n  undelegateEvents() {\n    Dom.Event.off(this.container, this.getEventNamespace())\n    return this\n  }\n\n  delegateDocumentEvents(events: View.Events, data?: KeyValue) {\n    this.addEventListeners(document, events, data)\n    return this\n  }\n\n  undelegateDocumentEvents() {\n    this.removeEventListeners(document)\n    return this\n  }\n\n  protected delegateEvent(\n    eventName: string,\n    selector: string | Record<string, unknown>,\n    listener: any,\n  ) {\n    Dom.Event.on(\n      this.container,\n      eventName + this.getEventNamespace(),\n      selector,\n      listener,\n    )\n    return this\n  }\n\n  protected undelegateEvent(\n    eventName: string,\n    selector: string,\n    listener: any,\n  ): this\n  protected undelegateEvent(eventName: string): this\n  protected undelegateEvent(eventName: string, listener: any): this\n  protected undelegateEvent(\n    eventName: string,\n    selector?: string | any,\n    listener?: any,\n  ) {\n    const name = eventName + this.getEventNamespace()\n    if (selector == null) {\n      Dom.Event.off(this.container, name)\n    } else if (typeof selector === 'string') {\n      Dom.Event.off(this.container, name, selector, listener)\n    } else {\n      Dom.Event.off(this.container, name, selector)\n    }\n    return this\n  }\n\n  protected addEventListeners(\n    elem: Element | Document,\n    events: View.Events,\n    data?: KeyValue,\n  ) {\n    if (events == null) {\n      return this\n    }\n\n    const ns = this.getEventNamespace()\n    Object.keys(events).forEach((eventName) => {\n      const method = this.getEventHandler(events[eventName])\n      if (typeof method === 'function') {\n        Dom.Event.on<string, KeyValue | undefined>(\n          elem as Element,\n          eventName + ns,\n          data,\n          method as any,\n        )\n      }\n    })\n\n    return this\n  }\n\n  protected removeEventListeners(elem: Element | Document) {\n    if (elem != null) {\n      Dom.Event.off(elem as Element, this.getEventNamespace())\n    }\n    return this\n  }\n\n  protected getEventNamespace() {\n    return `.${Config.prefixCls}-event-${this.cid}`\n  }\n\n  // eslint-disable-next-line\n  protected getEventHandler(handler: string | Function) {\n    // eslint-disable-next-line\n    let method: Function | undefined\n    if (typeof handler === 'string') {\n      const fn = (this as any)[handler]\n      if (typeof fn === 'function') {\n        method = (...args: any) => fn.call(this, ...args)\n      }\n    } else {\n      method = (...args: any) => handler.call(this, ...args)\n    }\n\n    return method\n  }\n\n  getEventTarget(e: Dom.EventObject, options: { fromPoint?: boolean } = {}) {\n    // Touchmove/Touchend event's target is not reflecting the element\n    // under the coordinates as mousemove does.\n    // It holds the element when a touchstart triggered.\n    const { target, type, clientX = 0, clientY = 0 } = e\n    if (options.fromPoint || type === 'touchmove' || type === 'touchend') {\n      return document.elementFromPoint(clientX, clientY)\n    }\n\n    return target\n  }\n\n  stopPropagation(e: Dom.EventObject) {\n    this.setEventData(e, { propagationStopped: true })\n    return this\n  }\n\n  isPropagationStopped(e: Dom.EventObject) {\n    return this.getEventData(e).propagationStopped === true\n  }\n\n  getEventData<T extends KeyValue>(e: Dom.EventObject): T {\n    return this.eventData<T>(e)\n  }\n\n  setEventData<T extends KeyValue>(e: Dom.EventObject, data: T): T {\n    return this.eventData(e, data)\n  }\n\n  protected eventData<T extends KeyValue>(e: Dom.EventObject, data?: T): T {\n    if (e == null) {\n      throw new TypeError('Event object required')\n    }\n\n    let currentData = e.data\n    const key = `__${this.cid}__`\n\n    // get\n    if (data == null) {\n      if (currentData == null) {\n        return {} as T\n      }\n      return currentData[key] || {}\n    }\n\n    // set\n    if (currentData == null) {\n      currentData = e.data = {}\n    }\n\n    if (currentData[key] == null) {\n      currentData[key] = { ...data }\n    } else {\n      currentData[key] = { ...currentData[key], ...data }\n    }\n\n    return currentData[key]\n  }\n\n  normalizeEvent<T extends Dom.EventObject>(evt: T) {\n    return View.normalizeEvent(evt)\n  }\n\n  @View.dispose()\n  dispose() {\n    this.remove()\n  }\n}\n\nexport namespace View {\n  export type Events = KeyValue<string | Function> // eslint-disable-line\n}\n\nexport namespace View {\n  export function createElement(tagName?: string, isSvgElement?: boolean) {\n    return isSvgElement\n      ? Dom.createSvgElement(tagName || 'g')\n      : (Dom.createElementNS(tagName || 'div') as HTMLElement)\n  }\n\n  export function find(\n    selector: string | null | undefined,\n    rootElem: Element,\n    selectors: Markup.Selectors,\n  ): { isCSSSelector?: boolean; elems: Element[] } {\n    if (!selector || selector === '.') {\n      return { elems: [rootElem] }\n    }\n\n    if (selectors) {\n      const nodes = selectors[selector]\n      if (nodes) {\n        return { elems: Array.isArray(nodes) ? nodes : [nodes] }\n      }\n    }\n\n    if (Config.useCSSSelector) {\n      const validSelector = selector.includes('>')\n        ? `:scope ${selector}`\n        : selector\n      return {\n        isCSSSelector: true,\n        // $(rootElem).find(selector).toArray() as Element[]\n        elems: Array.prototype.slice.call(\n          rootElem.querySelectorAll(validSelector),\n        ),\n      }\n    }\n\n    return { elems: [] }\n  }\n\n  export function normalizeEvent<T extends Dom.EventObject>(evt: T) {\n    let normalizedEvent = evt\n    const originalEvent = evt.originalEvent as TouchEvent\n    const touchEvt: any =\n      originalEvent &&\n      originalEvent.changedTouches &&\n      originalEvent.changedTouches[0]\n\n    if (touchEvt) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const key in evt) {\n        if (touchEvt[key] === undefined) {\n          touchEvt[key] = (evt as any)[key]\n        }\n      }\n      normalizedEvent = touchEvt\n    }\n\n    return normalizedEvent\n  }\n}\n\nexport namespace View {\n  export const views: { [cid: string]: View } = {}\n\n  export function getView(cid: string) {\n    return views[cid] || null\n  }\n}\n\nnamespace Private {\n  let counter = 0\n  export function uniqueId() {\n    const id = `v${counter}`\n    counter += 1\n    return id\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,GAAG,EAAYC,QAAQ,QAAQ,iBAAiB;AAEzD,SAASC,MAAM,QAAQ,WAAW;AAIlC,OAAM,MAAgBC,IAAgC,SAAQF,QAAW;EAKvE,IAAWG,QAAQA,CAAA;IACjB,OAAO,CAAC;EACV;EAEA;EACA,IAAcC,gBAAgBA,CAAA;IAC5B,OAAO,IAAI;EACb;EAEAC,YAAA;IACE,KAAK,EAAE;IACP,IAAI,CAACC,GAAG,GAAGC,OAAO,CAACC,QAAQ,EAAE;IAC7BN,IAAI,CAACO,KAAK,CAAC,IAAI,CAACH,GAAG,CAAC,GAAG,IAAI;EAC7B;EAEA;EACAI,aAAaA,CAACC,IAAY,EAAEC,OAAY;IACtC,OAAO,CAAC;EACV;EAEAC,KAAKA,CAACC,IAAA,GAAgB,IAAI,CAACC,SAAS;IAClChB,GAAG,CAACc,KAAK,CAACC,IAAI,CAAC;IACf,OAAO,IAAI;EACb;EAEAE,OAAOA,CAACF,IAAA,GAAgB,IAAI,CAACC,SAAS;IACpChB,GAAG,CAACkB,MAAM,CAACH,IAAI,CAAC;IAChB,OAAO,IAAI;EACb;EAEAG,MAAMA,CAACH,IAAA,GAAgB,IAAI,CAACC,SAAS;IACnC,IAAID,IAAI,KAAK,IAAI,CAACC,SAAS,EAAE;MAC3B,IAAI,CAACG,oBAAoB,CAACC,QAAQ,CAAC;MACnC,IAAI,CAACC,QAAQ,EAAE;MACf,OAAOlB,IAAI,CAACO,KAAK,CAAC,IAAI,CAACH,GAAG,CAAC;MAC3B,IAAI,IAAI,CAACF,gBAAgB,EAAE;QACzB,IAAI,CAACY,OAAO,CAACF,IAAI,CAAC;;KAErB,MAAM;MACL,IAAI,CAACE,OAAO,CAACF,IAAI,CAAC;;IAEpB,OAAO,IAAI;EACb;EAEUM,QAAQA,CAAA,GAAI;EAEtBC,QAAQA,CAACC,SAA4B,EAAER,IAAA,GAAgB,IAAI,CAACC,SAAS;IACnED,IAAI,CAACS,SAAS,CAACC,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACJ,SAAS,CAAC,GAC3CA,SAAS,CAACK,IAAI,CAAC,GAAG,CAAC,GACnBL,SAAS;EACf;EAEAM,QAAQA,CAACN,SAA4B,EAAER,IAAA,GAAgB,IAAI,CAACC,SAAS;IACnEhB,GAAG,CAAC6B,QAAQ,CACVd,IAAI,EACJW,KAAK,CAACC,OAAO,CAACJ,SAAS,CAAC,GAAGA,SAAS,CAACK,IAAI,CAAC,GAAG,CAAC,GAAGL,SAAS,CAC3D;IACD,OAAO,IAAI;EACb;EAEAO,WAAWA,CAACP,SAA4B,EAAER,IAAA,GAAgB,IAAI,CAACC,SAAS;IACtEhB,GAAG,CAAC8B,WAAW,CACbf,IAAI,EACJW,KAAK,CAACC,OAAO,CAACJ,SAAS,CAAC,GAAGA,SAAS,CAACK,IAAI,CAAC,GAAG,CAAC,GAAGL,SAAS,CAC3D;IACD,OAAO,IAAI;EACb;EAEAQ,QAAQA,CACNC,KAAsC,EACtCjB,IAAA,GAAgB,IAAI,CAACC,SAAS;IAE9BhB,GAAG,CAACiC,GAAG,CAAClB,IAAI,EAAEiB,KAAK,CAAC;IACpB,OAAO,IAAI;EACb;EAEAE,QAAQA,CAACC,KAA+B,EAAEpB,IAAA,GAAgB,IAAI,CAACC,SAAS;IACtE,IAAImB,KAAK,IAAI,IAAI,IAAIpB,IAAI,IAAI,IAAI,EAAE;MACjCf,GAAG,CAACoC,IAAI,CAACrB,IAAI,EAAEoB,KAAK,CAAC;;IAEvB,OAAO,IAAI;EACb;EAEA;;;;;;;;EAQAE,QAAQA,CAACC,QAAgB,EAAEvB,IAAA,GAAgB,IAAI,CAACC,SAAS;IACvD,IAAIuB,OAAO,GAAGxB,IAAI;IAClB,OAAOwB,OAAO,IAAIA,OAAO,CAACC,QAAQ,KAAK,CAAC,EAAE;MACxC,MAAMf,KAAK,GAAGc,OAAO,CAACE,YAAY,CAACH,QAAQ,CAAC;MAC5C,IAAIb,KAAK,IAAI,IAAI,EAAE;QACjB,OAAOA,KAAK;;MAGd,IAAIc,OAAO,KAAK,IAAI,CAACvB,SAAS,EAAE;QAC9B,OAAO,IAAI;;MAGbuB,OAAO,GAAGA,OAAO,CAACG,UAAqB;;IAGzC,OAAO,IAAI;EACb;EAEAC,IAAIA,CACFC,QAAiB,EACjBC,QAAA,GAAoB,IAAI,CAAC7B,SAAS,EAClC8B,SAAA,GAA8B,IAAI,CAACA,SAAS;IAE5C,OAAO3C,IAAI,CAACwC,IAAI,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,CAAC,CAACC,KAAK;EACvD;EAEAC,OAAOA,CACLJ,QAAiB,EACjBC,QAAA,GAAoB,IAAI,CAAC7B,SAAS,EAClC8B,SAAA,GAA8B,IAAI,CAACA,SAAS;IAE5C,MAAMG,KAAK,GAAG,IAAI,CAACN,IAAI,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,CAAC;IACtD,OAAOG,KAAK,CAACC,MAAM,GAAG,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;EAC3C;EAEAE,UAAUA,CAACb,QAAgB,EAAEvB,IAAA,GAAgB,IAAI,CAACC,SAAS;IACzD,IAAIoC,IAAI,GAAGrC,IAAI;IACf,OAAOqC,IAAI,IAAIA,IAAI,CAACX,YAAY,EAAE;MAChC,MAAMY,GAAG,GAAGD,IAAI,CAACX,YAAY,CAACH,QAAQ,CAAC;MACvC,IAAI,CAACe,GAAG,IAAI,IAAI,IAAID,IAAI,KAAK,IAAI,CAACpC,SAAS,KAAKqC,GAAG,KAAK,OAAO,EAAE;QAC/D,OAAOD,IAAI;;MAEbA,IAAI,GAAGA,IAAI,CAACV,UAAqB;;IAGnC;IACA;IACA;IACA;IACA;IACA,OAAO,IAAI;EACb;EAEAY,WAAWA,CAACvC,IAAa,EAAEwC,YAAqB;IAC9C,IAAIX,QAAQ;IAEZ,IAAI7B,IAAI,KAAK,IAAI,CAACC,SAAS,EAAE;MAC3B,IAAI,OAAOuC,YAAY,KAAK,QAAQ,EAAE;QACpCX,QAAQ,GAAG,KAAKW,YAAY,EAAE;;MAEhC,OAAOX,QAAQ;;IAGjB,IAAI7B,IAAI,EAAE;MACR,MAAMyC,GAAG,GAAGxD,GAAG,CAACyD,KAAK,CAAC1C,IAAI,CAAC,GAAG,CAAC;MAC/B6B,QAAQ,GAAG,GAAG7B,IAAI,CAAC2C,OAAO,CAACC,WAAW,EAAE,cAAcH,GAAG,GAAG;MAC5D,IAAID,YAAY,EAAE;QAChBX,QAAQ,IAAI,MAAMW,YAAY,EAAE;;MAGlCX,QAAQ,GAAG,IAAI,CAACU,WAAW,CAACvC,IAAI,CAAC2B,UAAqB,EAAEE,QAAQ,CAAC;;IAGnE,OAAOA,QAAQ;EACjB;EAEAgB,eAAeA,CAACrC,SAAiB;IAC/B,OAAOrB,MAAM,CAAC2D,MAAM,CAACtC,SAAS,CAAC;EACjC;EAEAuC,cAAcA,CAACC,MAAmB,EAAEC,MAAgB;IAClD,IAAID,MAAM,IAAI,IAAI,EAAE;MAClB,OAAO,IAAI;;IAGb,IAAI,CAACC,MAAM,EAAE;MACX,IAAI,CAACC,gBAAgB,EAAE;;IAGzB,MAAMC,QAAQ,GAAG,gBAAgB;IACjCC,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,OAAO,CAAEC,GAAG,IAAI;MAClC,MAAMC,KAAK,GAAGD,GAAG,CAACC,KAAK,CAACL,QAAQ,CAAC;MACjC,IAAIK,KAAK,IAAI,IAAI,EAAE;QACjB;;MAGF,MAAMC,MAAM,GAAG,IAAI,CAACC,eAAe,CAACV,MAAM,CAACO,GAAG,CAAC,CAAC;MAChD,IAAI,OAAOE,MAAM,KAAK,UAAU,EAAE;QAChC,IAAI,CAACE,aAAa,CAACH,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAEC,MAAM,CAAC;;IAElD,CAAC,CAAC;IAEF,OAAO,IAAI;EACb;EAEAP,gBAAgBA,CAAA;IACdjE,GAAG,CAAC2E,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC5D,SAAS,EAAE,IAAI,CAAC6D,iBAAiB,EAAE,CAAC;IACvD,OAAO,IAAI;EACb;EAEAC,sBAAsBA,CAACf,MAAmB,EAAEgB,IAAe;IACzD,IAAI,CAACC,iBAAiB,CAAC5D,QAAQ,EAAE2C,MAAM,EAAEgB,IAAI,CAAC;IAC9C,OAAO,IAAI;EACb;EAEAE,wBAAwBA,CAAA;IACtB,IAAI,CAAC9D,oBAAoB,CAACC,QAAQ,CAAC;IACnC,OAAO,IAAI;EACb;EAEUsD,aAAaA,CACrBQ,SAAiB,EACjBtC,QAA0C,EAC1CuC,QAAa;IAEbnF,GAAG,CAAC2E,KAAK,CAACS,EAAE,CACV,IAAI,CAACpE,SAAS,EACdkE,SAAS,GAAG,IAAI,CAACL,iBAAiB,EAAE,EACpCjC,QAAQ,EACRuC,QAAQ,CACT;IACD,OAAO,IAAI;EACb;EASUE,eAAeA,CACvBH,SAAiB,EACjBtC,QAAuB,EACvBuC,QAAc;IAEd,MAAMG,IAAI,GAAGJ,SAAS,GAAG,IAAI,CAACL,iBAAiB,EAAE;IACjD,IAAIjC,QAAQ,IAAI,IAAI,EAAE;MACpB5C,GAAG,CAAC2E,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC5D,SAAS,EAAEsE,IAAI,CAAC;KACpC,MAAM,IAAI,OAAO1C,QAAQ,KAAK,QAAQ,EAAE;MACvC5C,GAAG,CAAC2E,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC5D,SAAS,EAAEsE,IAAI,EAAE1C,QAAQ,EAAEuC,QAAQ,CAAC;KACxD,MAAM;MACLnF,GAAG,CAAC2E,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC5D,SAAS,EAAEsE,IAAI,EAAE1C,QAAQ,CAAC;;IAE/C,OAAO,IAAI;EACb;EAEUoC,iBAAiBA,CACzBjE,IAAwB,EACxBgD,MAAmB,EACnBgB,IAAe;IAEf,IAAIhB,MAAM,IAAI,IAAI,EAAE;MAClB,OAAO,IAAI;;IAGb,MAAMwB,EAAE,GAAG,IAAI,CAACV,iBAAiB,EAAE;IACnCV,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,OAAO,CAAEa,SAAS,IAAI;MACxC,MAAMV,MAAM,GAAG,IAAI,CAACC,eAAe,CAACV,MAAM,CAACmB,SAAS,CAAC,CAAC;MACtD,IAAI,OAAOV,MAAM,KAAK,UAAU,EAAE;QAChCxE,GAAG,CAAC2E,KAAK,CAACS,EAAE,CACVrE,IAAe,EACfmE,SAAS,GAAGK,EAAE,EACdR,IAAI,EACJP,MAAa,CACd;;IAEL,CAAC,CAAC;IAEF,OAAO,IAAI;EACb;EAEUrD,oBAAoBA,CAACJ,IAAwB;IACrD,IAAIA,IAAI,IAAI,IAAI,EAAE;MAChBf,GAAG,CAAC2E,KAAK,CAACC,GAAG,CAAC7D,IAAe,EAAE,IAAI,CAAC8D,iBAAiB,EAAE,CAAC;;IAE1D,OAAO,IAAI;EACb;EAEUA,iBAAiBA,CAAA;IACzB,OAAO,IAAI3E,MAAM,CAACsF,SAAS,UAAU,IAAI,CAACjF,GAAG,EAAE;EACjD;EAEA;EACUkE,eAAeA,CAACgB,OAA0B;IAClD;IACA,IAAIjB,MAA4B;IAChC,IAAI,OAAOiB,OAAO,KAAK,QAAQ,EAAE;MAC/B,MAAMC,EAAE,GAAI,IAAY,CAACD,OAAO,CAAC;MACjC,IAAI,OAAOC,EAAE,KAAK,UAAU,EAAE;QAC5BlB,MAAM,GAAGA,CAAC,GAAGmB,IAAS,KAAKD,EAAE,CAACE,IAAI,CAAC,IAAI,EAAE,GAAGD,IAAI,CAAC;;KAEpD,MAAM;MACLnB,MAAM,GAAGA,CAAC,GAAGmB,IAAS,KAAKF,OAAO,CAACG,IAAI,CAAC,IAAI,EAAE,GAAGD,IAAI,CAAC;;IAGxD,OAAOnB,MAAM;EACf;EAEAqB,cAAcA,CAACC,CAAkB,EAAEjF,OAAA,GAAmC,EAAE;IACtE;IACA;IACA;IACA,MAAM;MAAEkF,MAAM;MAAEC,IAAI;MAAEC,OAAO,GAAG,CAAC;MAAEC,OAAO,GAAG;IAAC,CAAE,GAAGJ,CAAC;IACpD,IAAIjF,OAAO,CAACsF,SAAS,IAAIH,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,UAAU,EAAE;MACpE,OAAO5E,QAAQ,CAACgF,gBAAgB,CAACH,OAAO,EAAEC,OAAO,CAAC;;IAGpD,OAAOH,MAAM;EACf;EAEAM,eAAeA,CAACP,CAAkB;IAChC,IAAI,CAACQ,YAAY,CAACR,CAAC,EAAE;MAAES,kBAAkB,EAAE;IAAI,CAAE,CAAC;IAClD,OAAO,IAAI;EACb;EAEAC,oBAAoBA,CAACV,CAAkB;IACrC,OAAO,IAAI,CAACW,YAAY,CAACX,CAAC,CAAC,CAACS,kBAAkB,KAAK,IAAI;EACzD;EAEAE,YAAYA,CAAqBX,CAAkB;IACjD,OAAO,IAAI,CAACY,SAAS,CAAIZ,CAAC,CAAC;EAC7B;EAEAQ,YAAYA,CAAqBR,CAAkB,EAAEf,IAAO;IAC1D,OAAO,IAAI,CAAC2B,SAAS,CAACZ,CAAC,EAAEf,IAAI,CAAC;EAChC;EAEU2B,SAASA,CAAqBZ,CAAkB,EAAEf,IAAQ;IAClE,IAAIe,CAAC,IAAI,IAAI,EAAE;MACb,MAAM,IAAIa,SAAS,CAAC,uBAAuB,CAAC;;IAG9C,IAAIC,WAAW,GAAGd,CAAC,CAACf,IAAI;IACxB,MAAMT,GAAG,GAAG,KAAK,IAAI,CAAC/D,GAAG,IAAI;IAE7B;IACA,IAAIwE,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI6B,WAAW,IAAI,IAAI,EAAE;QACvB,OAAO,EAAO;;MAEhB,OAAOA,WAAW,CAACtC,GAAG,CAAC,IAAI,EAAE;;IAG/B;IACA,IAAIsC,WAAW,IAAI,IAAI,EAAE;MACvBA,WAAW,GAAGd,CAAC,CAACf,IAAI,GAAG,EAAE;;IAG3B,IAAI6B,WAAW,CAACtC,GAAG,CAAC,IAAI,IAAI,EAAE;MAC5BsC,WAAW,CAACtC,GAAG,CAAC,GAAAH,MAAA,CAAA0C,MAAA,KAAQ9B,IAAI,CAAE;KAC/B,MAAM;MACL6B,WAAW,CAACtC,GAAG,CAAC,GAAAH,MAAA,CAAA0C,MAAA,CAAA1C,MAAA,CAAA0C,MAAA,KAAQD,WAAW,CAACtC,GAAG,CAAC,GAAKS,IAAI,CAAE;;IAGrD,OAAO6B,WAAW,CAACtC,GAAG,CAAC;EACzB;EAEAwC,cAAcA,CAA4BC,GAAM;IAC9C,OAAO5G,IAAI,CAAC2G,cAAc,CAACC,GAAG,CAAC;EACjC;EAGAC,OAAOA,CAAA;IACL,IAAI,CAAC9F,MAAM,EAAE;EACf;;AAFA+F,UAAA,EADC9G,IAAI,CAAC6G,OAAO,EAAE,C,kCAGd;AAOH,WAAiB7G,IAAI;EACnB,SAAgB+G,aAAaA,CAACxD,OAAgB,EAAEyD,YAAsB;IACpE,OAAOA,YAAY,GACfnH,GAAG,CAACoH,gBAAgB,CAAC1D,OAAO,IAAI,GAAG,CAAC,GACnC1D,GAAG,CAACqH,eAAe,CAAC3D,OAAO,IAAI,KAAK,CAAiB;EAC5D;EAJgBvD,IAAA,CAAA+G,aAAa,GAAAA,aAI5B;EAED,SAAgBvE,IAAIA,CAClBC,QAAmC,EACnCC,QAAiB,EACjBC,SAA2B;IAE3B,IAAI,CAACF,QAAQ,IAAIA,QAAQ,KAAK,GAAG,EAAE;MACjC,OAAO;QAAEG,KAAK,EAAE,CAACF,QAAQ;MAAC,CAAE;;IAG9B,IAAIC,SAAS,EAAE;MACb,MAAMG,KAAK,GAAGH,SAAS,CAACF,QAAQ,CAAC;MACjC,IAAIK,KAAK,EAAE;QACT,OAAO;UAAEF,KAAK,EAAErB,KAAK,CAACC,OAAO,CAACsB,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK;QAAC,CAAE;;;IAI5D,IAAI/C,MAAM,CAACoH,cAAc,EAAE;MACzB,MAAMC,aAAa,GAAG3E,QAAQ,CAAC4E,QAAQ,CAAC,GAAG,CAAC,GACxC,UAAU5E,QAAQ,EAAE,GACpBA,QAAQ;MACZ,OAAO;QACL6E,aAAa,EAAE,IAAI;QACnB;QACA1E,KAAK,EAAErB,KAAK,CAACgG,SAAS,CAACC,KAAK,CAAC/B,IAAI,CAC/B/C,QAAQ,CAAC+E,gBAAgB,CAACL,aAAa,CAAC;OAE3C;;IAGH,OAAO;MAAExE,KAAK,EAAE;IAAE,CAAE;EACtB;EA9BgB5C,IAAA,CAAAwC,IAAI,GAAAA,IA8BnB;EAED,SAAgBmE,cAAcA,CAA4BC,GAAM;IAC9D,IAAIc,eAAe,GAAGd,GAAG;IACzB,MAAMe,aAAa,GAAGf,GAAG,CAACe,aAA2B;IACrD,MAAMC,QAAQ,GACZD,aAAa,IACbA,aAAa,CAACE,cAAc,IAC5BF,aAAa,CAACE,cAAc,CAAC,CAAC,CAAC;IAEjC,IAAID,QAAQ,EAAE;MACZ;MACA,KAAK,MAAMzD,GAAG,IAAIyC,GAAG,EAAE;QACrB,IAAIgB,QAAQ,CAACzD,GAAG,CAAC,KAAK2D,SAAS,EAAE;UAC/BF,QAAQ,CAACzD,GAAG,CAAC,GAAIyC,GAAW,CAACzC,GAAG,CAAC;;;MAGrCuD,eAAe,GAAGE,QAAQ;;IAG5B,OAAOF,eAAe;EACxB;EAnBgB1H,IAAA,CAAA2G,cAAc,GAAAA,cAmB7B;AACH,CAAC,EA3DgB3G,IAAI,KAAJA,IAAI;AA6DrB,WAAiBA,IAAI;EACNA,IAAA,CAAAO,KAAK,GAA4B,EAAE;EAEhD,SAAgBwH,OAAOA,CAAC3H,GAAW;IACjC,OAAOJ,IAAA,CAAAO,KAAK,CAACH,GAAG,CAAC,IAAI,IAAI;EAC3B;EAFgBJ,IAAA,CAAA+H,OAAO,GAAAA,OAEtB;AACH,CAAC,EANgB/H,IAAI,KAAJA,IAAI;AAQrB,IAAUK,OAAO;AAAjB,WAAUA,OAAO;EACf,IAAI2H,OAAO,GAAG,CAAC;EACf,SAAgB1H,QAAQA,CAAA;IACtB,MAAM2H,EAAE,GAAG,IAAID,OAAO,EAAE;IACxBA,OAAO,IAAI,CAAC;IACZ,OAAOC,EAAE;EACX;EAJgB5H,OAAA,CAAAC,QAAQ,GAAAA,QAIvB;AACH,CAAC,EAPSD,OAAO,KAAPA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}