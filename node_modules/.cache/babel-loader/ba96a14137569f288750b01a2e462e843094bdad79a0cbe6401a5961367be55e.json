{"ast":null,"code":"// eslint-disable-next-line\nexport var ModifierKey;\n(function (ModifierKey) {\n  function parse(modifiers) {\n    const or = [];\n    const and = [];\n    if (Array.isArray(modifiers)) {\n      or.push(...modifiers);\n    } else {\n      modifiers.split('|').forEach(item => {\n        if (item.indexOf('&') === -1) {\n          or.push(item);\n        } else {\n          and.push(...item.split('&'));\n        }\n      });\n    }\n    return {\n      or,\n      and\n    };\n  }\n  ModifierKey.parse = parse;\n  function equals(modifiers1, modifiers2) {\n    if (modifiers1 != null && modifiers2 != null) {\n      const m1 = parse(modifiers1);\n      const m2 = parse(modifiers2);\n      const or1 = m1.or.sort();\n      const or2 = m2.or.sort();\n      const and1 = m1.and.sort();\n      const and2 = m2.and.sort();\n      const equal = (a1, a2) => {\n        return a1.length === a2.length && (a1.length === 0 || a1.every((a, i) => a === a2[i]));\n      };\n      return equal(or1, or2) && equal(and1, and2);\n    }\n    if (modifiers1 == null && modifiers2 == null) {\n      return true;\n    }\n    return false;\n  }\n  ModifierKey.equals = equals;\n  function isMatch(e, modifiers, strict) {\n    if (modifiers == null || Array.isArray(modifiers) && modifiers.length === 0) {\n      return strict ? e.altKey !== true && e.ctrlKey !== true && e.metaKey !== true && e.shiftKey !== true : true;\n    }\n    const {\n      or,\n      and\n    } = parse(modifiers);\n    const match = key => {\n      const name = `${key.toLowerCase()}Key`;\n      return e[name] === true;\n    };\n    return or.some(key => match(key)) && and.every(key => match(key));\n  }\n  ModifierKey.isMatch = isMatch;\n})(ModifierKey || (ModifierKey = {}));","map":{"version":3,"names":["ModifierKey","parse","modifiers","or","and","Array","isArray","push","split","forEach","item","indexOf","equals","modifiers1","modifiers2","m1","m2","or1","sort","or2","and1","and2","equal","a1","a2","length","every","a","i","isMatch","e","strict","altKey","ctrlKey","metaKey","shiftKey","match","key","name","toLowerCase","some"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6-common@2.0.17/node_modules/@antv/x6-common/src/modifier/index.ts"],"sourcesContent":["import { Dom } from '../dom'\n\nexport type ModifierKey = 'alt' | 'ctrl' | 'meta' | 'shift'\n\n// eslint-disable-next-line\nexport namespace ModifierKey {\n  export function parse(modifiers: string | ModifierKey[]) {\n    const or: ModifierKey[] = []\n    const and: ModifierKey[] = []\n\n    if (Array.isArray(modifiers)) {\n      or.push(...modifiers)\n    } else {\n      modifiers.split('|').forEach((item) => {\n        if (item.indexOf('&') === -1) {\n          or.push(item as ModifierKey)\n        } else {\n          and.push(...(item.split('&') as ModifierKey[]))\n        }\n      })\n    }\n\n    return { or, and }\n  }\n\n  export function equals(\n    modifiers1?: string | ModifierKey[] | null,\n    modifiers2?: string | ModifierKey[] | null,\n  ) {\n    if (modifiers1 != null && modifiers2 != null) {\n      const m1 = parse(modifiers1)\n      const m2 = parse(modifiers2)\n      const or1 = m1.or.sort()\n      const or2 = m2.or.sort()\n      const and1 = m1.and.sort()\n      const and2 = m2.and.sort()\n\n      const equal = (a1: ModifierKey[], a2: ModifierKey[]) => {\n        return (\n          a1.length === a2.length &&\n          (a1.length === 0 || a1.every((a, i) => a === a2[i]))\n        )\n      }\n\n      return equal(or1, or2) && equal(and1, and2)\n    }\n\n    if (modifiers1 == null && modifiers2 == null) {\n      return true\n    }\n\n    return false\n  }\n\n  export function isMatch(\n    e: Dom.EventObject | WheelEvent,\n    modifiers?: string | ModifierKey[] | null,\n    strict?: boolean,\n  ) {\n    if (\n      modifiers == null ||\n      (Array.isArray(modifiers) && modifiers.length === 0)\n    ) {\n      return strict\n        ? e.altKey !== true &&\n            e.ctrlKey !== true &&\n            e.metaKey !== true &&\n            e.shiftKey !== true\n        : true\n    }\n\n    const { or, and } = parse(modifiers)\n    const match = (key: ModifierKey) => {\n      const name = `${key.toLowerCase()}Key` as 'altKey'\n      return e[name] === true\n    }\n\n    return or.some((key) => match(key)) && and.every((key) => match(key))\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}