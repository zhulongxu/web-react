{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { CssLoader } from '@antv/x6-common';\nimport { Config } from '../config';\nimport { content } from '../style/raw';\nimport { Base } from './base';\nexport class CSSManager extends Base {\n  init() {\n    if (Config.autoInsertCSS) {\n      CssLoader.ensure('core', content);\n    }\n  }\n  dispose() {\n    CssLoader.clean('core');\n  }\n}\n__decorate([CSSManager.dispose()], CSSManager.prototype, \"dispose\", null);","map":{"version":3,"names":["CssLoader","Config","content","Base","CSSManager","init","autoInsertCSS","ensure","dispose","clean","__decorate"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/graph/css.ts"],"sourcesContent":["import { CssLoader } from '@antv/x6-common'\nimport { Config } from '../config'\nimport { content } from '../style/raw'\nimport { Base } from './base'\n\nexport class CSSManager extends Base {\n  protected init() {\n    if (Config.autoInsertCSS) {\n      CssLoader.ensure('core', content)\n    }\n  }\n\n  @CSSManager.dispose()\n  dispose() {\n    CssLoader.clean('core')\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,IAAI,QAAQ,QAAQ;AAE7B,OAAM,MAAOC,UAAW,SAAQD,IAAI;EACxBE,IAAIA,CAAA;IACZ,IAAIJ,MAAM,CAACK,aAAa,EAAE;MACxBN,SAAS,CAACO,MAAM,CAAC,MAAM,EAAEL,OAAO,CAAC;;EAErC;EAGAM,OAAOA,CAAA;IACLR,SAAS,CAACS,KAAK,CAAC,MAAM,CAAC;EACzB;;AAFAC,UAAA,EADCN,UAAU,CAACI,OAAO,EAAE,C,wCAGpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}