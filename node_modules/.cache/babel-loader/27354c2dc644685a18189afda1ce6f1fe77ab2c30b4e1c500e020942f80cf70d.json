{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { Platform, Dom, FunctionExt, ObjectExt } from '@antv/x6-common';\nimport { Attr } from '../registry';\nimport { Base } from './base';\nexport const TextBlock = Base.define({\n  shape: 'text-block',\n  markup: [{\n    tagName: 'rect',\n    selector: 'body'\n  }, Platform.SUPPORT_FOREIGNOBJECT ? {\n    tagName: 'foreignObject',\n    selector: 'foreignObject',\n    children: [{\n      tagName: 'div',\n      ns: Dom.ns.xhtml,\n      selector: 'label',\n      style: {\n        width: '100%',\n        height: '100%',\n        position: 'static',\n        backgroundColor: 'transparent',\n        textAlign: 'center',\n        margin: 0,\n        padding: '0px 5px',\n        boxSizing: 'border-box',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    }]\n  } : {\n    tagName: 'text',\n    selector: 'label',\n    attrs: {\n      textAnchor: 'middle'\n    }\n  }],\n  attrs: {\n    body: Object.assign(Object.assign({}, Base.bodyAttr), {\n      refWidth: '100%',\n      refHeight: '100%'\n    }),\n    foreignObject: {\n      refWidth: '100%',\n      refHeight: '100%'\n    },\n    label: {\n      style: {\n        fontSize: 14\n      }\n    }\n  },\n  propHooks(metadata) {\n    const {\n        text\n      } = metadata,\n      others = __rest(metadata, [\"text\"]);\n    if (text) {\n      ObjectExt.setByPath(others, 'attrs/label/text', text);\n    }\n    return others;\n  },\n  attrHooks: {\n    text: {\n      set(text, {\n        cell,\n        view,\n        refBBox,\n        elem,\n        attrs\n      }) {\n        if (elem instanceof HTMLElement) {\n          elem.textContent = text;\n        } else {\n          // No foreign object\n          const style = attrs.style || {};\n          const wrapValue = {\n            text,\n            width: -5,\n            height: '100%'\n          };\n          const wrapAttrs = Object.assign({\n            textVerticalAnchor: 'middle'\n          }, style);\n          const textWrap = Attr.presets.textWrap;\n          FunctionExt.call(textWrap.set, this, wrapValue, {\n            cell,\n            view,\n            elem,\n            refBBox,\n            attrs: wrapAttrs\n          });\n          return {\n            fill: style.color || null\n          };\n        }\n      },\n      position(text, {\n        refBBox,\n        elem\n      }) {\n        if (elem instanceof SVGElement) {\n          return refBBox.getCenter();\n        }\n      }\n    }\n  }\n});","map":{"version":3,"names":["Platform","Dom","FunctionExt","ObjectExt","Attr","Base","TextBlock","define","shape","markup","tagName","selector","SUPPORT_FOREIGNOBJECT","children","ns","xhtml","style","width","height","position","backgroundColor","textAlign","margin","padding","boxSizing","display","alignItems","justifyContent","attrs","textAnchor","body","Object","assign","bodyAttr","refWidth","refHeight","foreignObject","label","fontSize","propHooks","metadata","text","others","__rest","setByPath","attrHooks","set","cell","view","refBBox","elem","HTMLElement","textContent","wrapValue","wrapAttrs","textVerticalAnchor","textWrap","presets","call","fill","color","SVGElement","getCenter"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/shape/text-block.ts"],"sourcesContent":["import { Platform, Dom, FunctionExt, ObjectExt } from '@antv/x6-common'\nimport { Attr } from '../registry'\nimport { Base } from './base'\n\nexport const TextBlock = Base.define({\n  shape: 'text-block',\n  markup: [\n    {\n      tagName: 'rect',\n      selector: 'body',\n    },\n    Platform.SUPPORT_FOREIGNOBJECT\n      ? {\n          tagName: 'foreignObject',\n          selector: 'foreignObject',\n          children: [\n            {\n              tagName: 'div',\n              ns: Dom.ns.xhtml,\n              selector: 'label',\n              style: {\n                width: '100%',\n                height: '100%',\n                position: 'static',\n                backgroundColor: 'transparent',\n                textAlign: 'center',\n                margin: 0,\n                padding: '0px 5px',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n              },\n            },\n          ],\n        }\n      : {\n          tagName: 'text',\n          selector: 'label',\n          attrs: {\n            textAnchor: 'middle',\n          },\n        },\n  ],\n  attrs: {\n    body: {\n      ...Base.bodyAttr,\n      refWidth: '100%',\n      refHeight: '100%',\n    },\n    foreignObject: {\n      refWidth: '100%',\n      refHeight: '100%',\n    },\n    label: {\n      style: {\n        fontSize: 14,\n      },\n    },\n  },\n  propHooks(metadata) {\n    const { text, ...others } = metadata\n    if (text) {\n      ObjectExt.setByPath(others, 'attrs/label/text', text)\n    }\n    return others\n  },\n  attrHooks: {\n    text: {\n      set(text: string, { cell, view, refBBox, elem, attrs }) {\n        if (elem instanceof HTMLElement) {\n          elem.textContent = text\n        } else {\n          // No foreign object\n          const style = (attrs.style as Attr.SimpleAttrs) || {}\n          const wrapValue = { text, width: -5, height: '100%' }\n          const wrapAttrs = {\n            textVerticalAnchor: 'middle',\n            ...style,\n          }\n\n          const textWrap = Attr.presets.textWrap as Attr.SetDefinition\n          FunctionExt.call(textWrap.set, this, wrapValue, {\n            cell,\n            view,\n            elem,\n            refBBox,\n            attrs: wrapAttrs,\n          })\n\n          return { fill: (style.color as string) || null }\n        }\n      },\n      position(text, { refBBox, elem }) {\n        if (elem instanceof SVGElement) {\n          return refBBox.getCenter()\n        }\n      },\n    },\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}