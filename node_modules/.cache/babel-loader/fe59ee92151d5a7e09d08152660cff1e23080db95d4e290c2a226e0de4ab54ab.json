{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { Path } from '@antv/x6-geometry';\nimport { normalize } from './util';\nexport const cross = _a => {\n  var {\n      size,\n      width,\n      height,\n      offset\n    } = _a,\n    attrs = __rest(_a, [\"size\", \"width\", \"height\", \"offset\"]);\n  const s = size || 10;\n  const w = width || s;\n  const h = height || s;\n  const path = new Path();\n  path.moveTo(0, 0).lineTo(w, h).moveTo(0, h).lineTo(w, 0);\n  return Object.assign(Object.assign({}, attrs), {\n    tagName: 'path',\n    fill: 'none',\n    d: normalize(path.serialize(), offset || -w / 2)\n  });\n};","map":{"version":3,"names":["Path","normalize","cross","_a","size","width","height","offset","attrs","__rest","s","w","h","path","moveTo","lineTo","Object","assign","tagName","fill","d","serialize"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/marker/cross.ts"],"sourcesContent":["import { Path } from '@antv/x6-geometry'\nimport { Attr } from '../attr'\nimport { normalize } from './util'\nimport { Marker } from './index'\n\nexport interface CrossMarkerOptions extends Attr.SimpleAttrs {\n  size?: number\n  width?: number\n  height?: number\n  offset?: number\n}\n\nexport const cross: Marker.Factory<CrossMarkerOptions> = ({\n  size,\n  width,\n  height,\n  offset,\n  ...attrs\n}) => {\n  const s = size || 10\n  const w = width || s\n  const h = height || s\n\n  const path = new Path()\n  path.moveTo(0, 0).lineTo(w, h).moveTo(0, h).lineTo(w, 0)\n\n  return {\n    ...attrs,\n    tagName: 'path',\n    fill: 'none',\n    d: normalize(path.serialize(), offset || -w / 2),\n  }\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,IAAI,QAAQ,mBAAmB;AAExC,SAASC,SAAS,QAAQ,QAAQ;AAUlC,OAAO,MAAMC,KAAK,GAAwCC,EAMzD,IAAI;MANqD;MACxDC,IAAI;MACJC,KAAK;MACLC,MAAM;MACNC;IAAM,IAAAJ,EAEP;IADIK,KAAK,GAAAC,MAAA,CAAAN,EAAA,EALgD,qCAMzD,CADS;EAER,MAAMO,CAAC,GAAGN,IAAI,IAAI,EAAE;EACpB,MAAMO,CAAC,GAAGN,KAAK,IAAIK,CAAC;EACpB,MAAME,CAAC,GAAGN,MAAM,IAAII,CAAC;EAErB,MAAMG,IAAI,GAAG,IAAIb,IAAI,EAAE;EACvBa,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,MAAM,CAACJ,CAAC,EAAEC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,EAAEF,CAAC,CAAC,CAACG,MAAM,CAACJ,CAAC,EAAE,CAAC,CAAC;EAExD,OAAAK,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKT,KAAK;IACRU,OAAO,EAAE,MAAM;IACfC,IAAI,EAAE,MAAM;IACZC,CAAC,EAAEnB,SAAS,CAACY,IAAI,CAACQ,SAAS,EAAE,EAAEd,MAAM,IAAI,CAACI,CAAC,GAAG,CAAC;EAAC;AAEpD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}