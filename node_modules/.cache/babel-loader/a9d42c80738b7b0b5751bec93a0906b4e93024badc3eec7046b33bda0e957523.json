{"ast":null,"code":"import { StringExt } from '../string';\nconst dataset = new WeakMap();\nexport function getData(elem, name) {\n  const key = StringExt.camelCase(name);\n  const cache = dataset.get(elem);\n  if (cache) {\n    return cache[key];\n  }\n}\nexport function setData(elem, name, value) {\n  const key = StringExt.camelCase(name);\n  const cache = dataset.get(elem);\n  if (cache) {\n    cache[key] = value;\n  } else {\n    dataset.set(elem, {\n      [key]: value\n    });\n  }\n}\nexport function data(elem, name, value) {\n  if (!name) {\n    const datas = {};\n    Object.keys(dataset).forEach(key => {\n      datas[key] = getData(elem, key);\n    });\n    return datas;\n  }\n  if (typeof name === 'string') {\n    if (value === undefined) {\n      return getData(elem, name);\n    }\n    setData(elem, name, value);\n    return;\n  }\n  // eslint-disable-next-line\n  for (const key in name) {\n    data(elem, key, name[key]);\n  }\n}","map":{"version":3,"names":["StringExt","dataset","WeakMap","getData","elem","name","key","camelCase","cache","get","setData","value","set","data","datas","Object","keys","forEach","undefined"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6-common@2.0.17/node_modules/@antv/x6-common/src/dom/data.ts"],"sourcesContent":["import { StringExt } from '../string'\n\nconst dataset: WeakMap<Element, Record<string, any>> = new WeakMap()\n\nexport function getData(elem: Element, name: string) {\n  const key = StringExt.camelCase(name)\n  const cache = dataset.get(elem)\n  if (cache) {\n    return cache[key]\n  }\n}\n\nexport function setData(elem: Element, name: string, value: any) {\n  const key = StringExt.camelCase(name)\n  const cache = dataset.get(elem)\n  if (cache) {\n    cache[key] = value\n  } else {\n    dataset.set(elem, {\n      [key]: value,\n    })\n  }\n}\n\nexport function data(elem: Element): Record<string, any> | undefined\nexport function data(elem: Element, name: string): any\nexport function data(elem: Element, name: string, value: any): void\nexport function data(elem: Element, name: Record<string, any>): void\nexport function data(\n  elem: Element,\n  name?: string | Record<string, any>,\n  value?: any,\n) {\n  if (!name) {\n    const datas: Record<string, any> = {}\n    Object.keys(dataset).forEach((key) => {\n      datas[key] = getData(elem, key)\n    })\n    return datas\n  }\n\n  if (typeof name === 'string') {\n    if (value === undefined) {\n      return getData(elem, name)\n    }\n    setData(elem, name, value)\n\n    return\n  }\n\n  // eslint-disable-next-line\n  for (const key in name) {\n    data(elem, key, name[key])\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AAErC,MAAMC,OAAO,GAA0C,IAAIC,OAAO,EAAE;AAEpE,OAAM,SAAUC,OAAOA,CAACC,IAAa,EAAEC,IAAY;EACjD,MAAMC,GAAG,GAAGN,SAAS,CAACO,SAAS,CAACF,IAAI,CAAC;EACrC,MAAMG,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAACL,IAAI,CAAC;EAC/B,IAAII,KAAK,EAAE;IACT,OAAOA,KAAK,CAACF,GAAG,CAAC;;AAErB;AAEA,OAAM,SAAUI,OAAOA,CAACN,IAAa,EAAEC,IAAY,EAAEM,KAAU;EAC7D,MAAML,GAAG,GAAGN,SAAS,CAACO,SAAS,CAACF,IAAI,CAAC;EACrC,MAAMG,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAACL,IAAI,CAAC;EAC/B,IAAII,KAAK,EAAE;IACTA,KAAK,CAACF,GAAG,CAAC,GAAGK,KAAK;GACnB,MAAM;IACLV,OAAO,CAACW,GAAG,CAACR,IAAI,EAAE;MAChB,CAACE,GAAG,GAAGK;KACR,CAAC;;AAEN;AAMA,OAAM,SAAUE,IAAIA,CAClBT,IAAa,EACbC,IAAmC,EACnCM,KAAW;EAEX,IAAI,CAACN,IAAI,EAAE;IACT,MAAMS,KAAK,GAAwB,EAAE;IACrCC,MAAM,CAACC,IAAI,CAACf,OAAO,CAAC,CAACgB,OAAO,CAAEX,GAAG,IAAI;MACnCQ,KAAK,CAACR,GAAG,CAAC,GAAGH,OAAO,CAACC,IAAI,EAAEE,GAAG,CAAC;IACjC,CAAC,CAAC;IACF,OAAOQ,KAAK;;EAGd,IAAI,OAAOT,IAAI,KAAK,QAAQ,EAAE;IAC5B,IAAIM,KAAK,KAAKO,SAAS,EAAE;MACvB,OAAOf,OAAO,CAACC,IAAI,EAAEC,IAAI,CAAC;;IAE5BK,OAAO,CAACN,IAAI,EAAEC,IAAI,EAAEM,KAAK,CAAC;IAE1B;;EAGF;EACA,KAAK,MAAML,GAAG,IAAID,IAAI,EAAE;IACtBQ,IAAI,CAACT,IAAI,EAAEE,GAAG,EAAED,IAAI,CAACC,GAAG,CAAC,CAAC;;AAE9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}