{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { Line } from '@antv/x6-geometry';\nimport { normalizePoint, toResult } from './util';\nexport const line = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  const start = normalizePoint(elemBBox, groupPositionArgs.start || elemBBox.getOrigin());\n  const end = normalizePoint(elemBBox, groupPositionArgs.end || elemBBox.getCorner());\n  return lineLayout(portsPositionArgs, start, end, groupPositionArgs);\n};\nexport const left = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getTopLeft(), elemBBox.getBottomLeft(), groupPositionArgs);\n};\nexport const right = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getTopRight(), elemBBox.getBottomRight(), groupPositionArgs);\n};\nexport const top = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getTopLeft(), elemBBox.getTopRight(), groupPositionArgs);\n};\nexport const bottom = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getBottomLeft(), elemBBox.getBottomRight(), groupPositionArgs);\n};\nfunction lineLayout(portsPositionArgs, p1, p2, groupPositionArgs) {\n  const line = new Line(p1, p2);\n  const length = portsPositionArgs.length;\n  return portsPositionArgs.map((_a, index) => {\n    var {\n        strict\n      } = _a,\n      offset = __rest(_a, [\"strict\"]);\n    const ratio = strict || groupPositionArgs.strict ? (index + 1) / (length + 1) : (index + 0.5) / length;\n    const p = line.pointAt(ratio);\n    if (offset.dx || offset.dy) {\n      p.translate(offset.dx || 0, offset.dy || 0);\n    }\n    return toResult(p.round(), 0, offset);\n  });\n}","map":{"version":3,"names":["Line","normalizePoint","toResult","line","portsPositionArgs","elemBBox","groupPositionArgs","start","getOrigin","end","getCorner","lineLayout","left","getTopLeft","getBottomLeft","right","getTopRight","getBottomRight","top","bottom","p1","p2","length","map","_a","index","strict","offset","__rest","ratio","p","pointAt","dx","dy","translate","round"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/port-layout/line.ts"],"sourcesContent":["import { Point, Line } from '@antv/x6-geometry'\nimport { normalizePoint, toResult } from './util'\nimport { PortLayout } from './index'\n\nexport interface SideArgs extends PortLayout.CommonArgs {\n  strict?: boolean\n}\n\nexport interface LineArgs extends SideArgs {\n  start?: Point.PointLike\n  end?: Point.PointLike\n}\n\nexport const line: PortLayout.Definition<LineArgs> = (\n  portsPositionArgs,\n  elemBBox,\n  groupPositionArgs,\n) => {\n  const start = normalizePoint(\n    elemBBox,\n    groupPositionArgs.start || elemBBox.getOrigin(),\n  )\n  const end = normalizePoint(\n    elemBBox,\n    groupPositionArgs.end || elemBBox.getCorner(),\n  )\n\n  return lineLayout(portsPositionArgs, start, end, groupPositionArgs)\n}\n\nexport const left: PortLayout.Definition<SideArgs> = (\n  portsPositionArgs,\n  elemBBox,\n  groupPositionArgs,\n) => {\n  return lineLayout(\n    portsPositionArgs,\n    elemBBox.getTopLeft(),\n    elemBBox.getBottomLeft(),\n    groupPositionArgs,\n  )\n}\n\nexport const right: PortLayout.Definition<SideArgs> = (\n  portsPositionArgs,\n  elemBBox,\n  groupPositionArgs,\n) => {\n  return lineLayout(\n    portsPositionArgs,\n    elemBBox.getTopRight(),\n    elemBBox.getBottomRight(),\n    groupPositionArgs,\n  )\n}\n\nexport const top: PortLayout.Definition<SideArgs> = (\n  portsPositionArgs,\n  elemBBox,\n  groupPositionArgs,\n) => {\n  return lineLayout(\n    portsPositionArgs,\n    elemBBox.getTopLeft(),\n    elemBBox.getTopRight(),\n    groupPositionArgs,\n  )\n}\n\nexport const bottom: PortLayout.Definition<SideArgs> = (\n  portsPositionArgs,\n  elemBBox,\n  groupPositionArgs,\n) => {\n  return lineLayout(\n    portsPositionArgs,\n    elemBBox.getBottomLeft(),\n    elemBBox.getBottomRight(),\n    groupPositionArgs,\n  )\n}\n\nfunction lineLayout(\n  portsPositionArgs: SideArgs[],\n  p1: Point,\n  p2: Point,\n  groupPositionArgs: SideArgs,\n) {\n  const line = new Line(p1, p2)\n  const length = portsPositionArgs.length\n  return portsPositionArgs.map(({ strict, ...offset }, index) => {\n    const ratio =\n      strict || groupPositionArgs.strict\n        ? (index + 1) / (length + 1)\n        : (index + 0.5) / length\n\n    const p = line.pointAt(ratio)\n    if (offset.dx || offset.dy) {\n      p.translate(offset.dx || 0, offset.dy || 0)\n    }\n\n    return toResult(p.round(), 0, offset)\n  })\n}\n"],"mappings":";;;;;;;;AAAA,SAAgBA,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,cAAc,EAAEC,QAAQ,QAAQ,QAAQ;AAYjD,OAAO,MAAMC,IAAI,GAAoCA,CACnDC,iBAAiB,EACjBC,QAAQ,EACRC,iBAAiB,KACf;EACF,MAAMC,KAAK,GAAGN,cAAc,CAC1BI,QAAQ,EACRC,iBAAiB,CAACC,KAAK,IAAIF,QAAQ,CAACG,SAAS,EAAE,CAChD;EACD,MAAMC,GAAG,GAAGR,cAAc,CACxBI,QAAQ,EACRC,iBAAiB,CAACG,GAAG,IAAIJ,QAAQ,CAACK,SAAS,EAAE,CAC9C;EAED,OAAOC,UAAU,CAACP,iBAAiB,EAAEG,KAAK,EAAEE,GAAG,EAAEH,iBAAiB,CAAC;AACrE,CAAC;AAED,OAAO,MAAMM,IAAI,GAAoCA,CACnDR,iBAAiB,EACjBC,QAAQ,EACRC,iBAAiB,KACf;EACF,OAAOK,UAAU,CACfP,iBAAiB,EACjBC,QAAQ,CAACQ,UAAU,EAAE,EACrBR,QAAQ,CAACS,aAAa,EAAE,EACxBR,iBAAiB,CAClB;AACH,CAAC;AAED,OAAO,MAAMS,KAAK,GAAoCA,CACpDX,iBAAiB,EACjBC,QAAQ,EACRC,iBAAiB,KACf;EACF,OAAOK,UAAU,CACfP,iBAAiB,EACjBC,QAAQ,CAACW,WAAW,EAAE,EACtBX,QAAQ,CAACY,cAAc,EAAE,EACzBX,iBAAiB,CAClB;AACH,CAAC;AAED,OAAO,MAAMY,GAAG,GAAoCA,CAClDd,iBAAiB,EACjBC,QAAQ,EACRC,iBAAiB,KACf;EACF,OAAOK,UAAU,CACfP,iBAAiB,EACjBC,QAAQ,CAACQ,UAAU,EAAE,EACrBR,QAAQ,CAACW,WAAW,EAAE,EACtBV,iBAAiB,CAClB;AACH,CAAC;AAED,OAAO,MAAMa,MAAM,GAAoCA,CACrDf,iBAAiB,EACjBC,QAAQ,EACRC,iBAAiB,KACf;EACF,OAAOK,UAAU,CACfP,iBAAiB,EACjBC,QAAQ,CAACS,aAAa,EAAE,EACxBT,QAAQ,CAACY,cAAc,EAAE,EACzBX,iBAAiB,CAClB;AACH,CAAC;AAED,SAASK,UAAUA,CACjBP,iBAA6B,EAC7BgB,EAAS,EACTC,EAAS,EACTf,iBAA2B;EAE3B,MAAMH,IAAI,GAAG,IAAIH,IAAI,CAACoB,EAAE,EAAEC,EAAE,CAAC;EAC7B,MAAMC,MAAM,GAAGlB,iBAAiB,CAACkB,MAAM;EACvC,OAAOlB,iBAAiB,CAACmB,GAAG,CAAC,CAACC,EAAqB,EAAEC,KAAK,KAAI;QAAhC;QAAEC;MAAM,IAAAF,EAAa;MAARG,MAAM,GAAAC,MAAA,CAAAJ,EAAA,EAAnB,UAAqB,CAAF;IAC/C,MAAMK,KAAK,GACTH,MAAM,IAAIpB,iBAAiB,CAACoB,MAAM,GAC9B,CAACD,KAAK,GAAG,CAAC,KAAKH,MAAM,GAAG,CAAC,CAAC,GAC1B,CAACG,KAAK,GAAG,GAAG,IAAIH,MAAM;IAE5B,MAAMQ,CAAC,GAAG3B,IAAI,CAAC4B,OAAO,CAACF,KAAK,CAAC;IAC7B,IAAIF,MAAM,CAACK,EAAE,IAAIL,MAAM,CAACM,EAAE,EAAE;MAC1BH,CAAC,CAACI,SAAS,CAACP,MAAM,CAACK,EAAE,IAAI,CAAC,EAAEL,MAAM,CAACM,EAAE,IAAI,CAAC,CAAC;;IAG7C,OAAO/B,QAAQ,CAAC4B,CAAC,CAACK,KAAK,EAAE,EAAE,CAAC,EAAER,MAAM,CAAC;EACvC,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}