{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { Path } from '@antv/x6-geometry';\nimport { normalize } from './util';\nexport const circle = _a => {\n  var {\n      r\n    } = _a,\n    attrs = __rest(_a, [\"r\"]);\n  const radius = r || 5;\n  return Object.assign(Object.assign({\n    cx: radius\n  }, attrs), {\n    tagName: 'circle',\n    r: radius\n  });\n};\nexport const circlePlus = _a => {\n  var {\n      r\n    } = _a,\n    attrs = __rest(_a, [\"r\"]);\n  const radius = r || 5;\n  const path = new Path();\n  path.moveTo(radius, 0).lineTo(radius, radius * 2);\n  path.moveTo(0, radius).lineTo(radius * 2, radius);\n  return {\n    children: [Object.assign(Object.assign({}, circle({\n      r: radius\n    })), {\n      fill: 'none'\n    }), Object.assign(Object.assign({}, attrs), {\n      tagName: 'path',\n      d: normalize(path.serialize(), -radius)\n    })]\n  };\n};","map":{"version":3,"names":["Path","normalize","circle","_a","r","attrs","__rest","radius","Object","assign","cx","tagName","circlePlus","path","moveTo","lineTo","children","fill","d","serialize"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/marker/circle.ts"],"sourcesContent":["import { Path } from '@antv/x6-geometry'\nimport { Attr } from '../attr'\nimport { normalize } from './util'\nimport { Marker } from './index'\n\nexport interface CircleMarkerOptions extends Attr.SimpleAttrs {\n  r?: number\n}\n\nexport interface CirclePlusMarkerOptions extends CircleMarkerOptions {}\n\nexport const circle: Marker.Factory<CircleMarkerOptions> = ({\n  r,\n  ...attrs\n}) => {\n  const radius = r || 5\n  return {\n    cx: radius,\n    ...attrs,\n    tagName: 'circle',\n    r: radius,\n  }\n}\n\nexport const circlePlus: Marker.Factory<CircleMarkerOptions> = ({\n  r,\n  ...attrs\n}) => {\n  const radius = r || 5\n  const path = new Path()\n\n  path.moveTo(radius, 0).lineTo(radius, radius * 2)\n  path.moveTo(0, radius).lineTo(radius * 2, radius)\n\n  return {\n    children: [\n      {\n        ...circle({ r: radius }),\n        fill: 'none',\n      },\n      {\n        ...attrs,\n        tagName: 'path',\n        d: normalize(path.serialize(), -radius),\n      },\n    ] as any,\n  }\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,IAAI,QAAQ,mBAAmB;AAExC,SAASC,SAAS,QAAQ,QAAQ;AASlC,OAAO,MAAMC,MAAM,GAAyCC,EAG3D,IAAI;MAHuD;MAC1DC;IAAC,IAAAD,EAEF;IADIE,KAAK,GAAAC,MAAA,CAAAH,EAAA,EAFkD,KAG3D,CADS;EAER,MAAMI,MAAM,GAAGH,CAAC,IAAI,CAAC;EACrB,OAAAI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA;IACEC,EAAE,EAAEH;EAAM,GACPF,KAAK;IACRM,OAAO,EAAE,QAAQ;IACjBP,CAAC,EAAEG;EAAM;AAEb,CAAC;AAED,OAAO,MAAMK,UAAU,GAAyCT,EAG/D,IAAI;MAH2D;MAC9DC;IAAC,IAAAD,EAEF;IADIE,KAAK,GAAAC,MAAA,CAAAH,EAAA,EAFsD,KAG/D,CADS;EAER,MAAMI,MAAM,GAAGH,CAAC,IAAI,CAAC;EACrB,MAAMS,IAAI,GAAG,IAAIb,IAAI,EAAE;EAEvBa,IAAI,CAACC,MAAM,CAACP,MAAM,EAAE,CAAC,CAAC,CAACQ,MAAM,CAACR,MAAM,EAAEA,MAAM,GAAG,CAAC,CAAC;EACjDM,IAAI,CAACC,MAAM,CAAC,CAAC,EAAEP,MAAM,CAAC,CAACQ,MAAM,CAACR,MAAM,GAAG,CAAC,EAAEA,MAAM,CAAC;EAEjD,OAAO;IACLS,QAAQ,EAAE,C,gCAEHd,MAAM,CAAC;MAAEE,CAAC,EAAEG;IAAM,CAAE,CAAC;MACxBU,IAAI,EAAE;IAAM,I,gCAGTZ,KAAK;MACRM,OAAO,EAAE,MAAM;MACfO,CAAC,EAAEjB,SAAS,CAACY,IAAI,CAACM,SAAS,EAAE,EAAE,CAACZ,MAAM;IAAC;GAG5C;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}