{"ast":null,"code":"import { offset } from './util';\nfunction alignLine(line, type, offset = 0) {\n  const {\n    start,\n    end\n  } = line;\n  let a;\n  let b;\n  let direction;\n  let coordinate;\n  switch (type) {\n    case 'left':\n      coordinate = 'x';\n      a = end;\n      b = start;\n      direction = -1;\n      break;\n    case 'right':\n      coordinate = 'x';\n      a = start;\n      b = end;\n      direction = 1;\n      break;\n    case 'top':\n      coordinate = 'y';\n      a = end;\n      b = start;\n      direction = -1;\n      break;\n    case 'bottom':\n      coordinate = 'y';\n      a = start;\n      b = end;\n      direction = 1;\n      break;\n    default:\n      return;\n  }\n  if (start[coordinate] < end[coordinate]) {\n    a[coordinate] = b[coordinate];\n  } else {\n    b[coordinate] = a[coordinate];\n  }\n  if (Number.isFinite(offset)) {\n    a[coordinate] += direction * offset;\n    b[coordinate] += direction * offset;\n  }\n}\n/**\n * Places the connection point at the edge's endpoint.\n */\nexport const anchor = function (line, view, magnet, options) {\n  const {\n    alignOffset,\n    align\n  } = options;\n  if (align) {\n    alignLine(line, align, alignOffset);\n  }\n  return offset(line.end, line.start, options.offset);\n};","map":{"version":3,"names":["offset","alignLine","line","type","start","end","a","b","direction","coordinate","Number","isFinite","anchor","view","magnet","options","alignOffset","align"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/connection-point/anchor.ts"],"sourcesContent":["import { Line } from '@antv/x6-geometry'\nimport { ConnectionPoint } from './index'\nimport { offset } from './util'\n\ntype Align = 'top' | 'right' | 'bottom' | 'left'\n\nexport interface AnchorOptions extends ConnectionPoint.BaseOptions {\n  align?: Align\n  alignOffset?: number\n}\n\nfunction alignLine(line: Line, type: Align, offset = 0) {\n  const { start, end } = line\n  let a\n  let b\n  let direction\n  let coordinate: 'x' | 'y'\n\n  switch (type) {\n    case 'left':\n      coordinate = 'x'\n      a = end\n      b = start\n      direction = -1\n      break\n    case 'right':\n      coordinate = 'x'\n      a = start\n      b = end\n      direction = 1\n      break\n    case 'top':\n      coordinate = 'y'\n      a = end\n      b = start\n      direction = -1\n      break\n    case 'bottom':\n      coordinate = 'y'\n      a = start\n      b = end\n      direction = 1\n      break\n    default:\n      return\n  }\n\n  if (start[coordinate] < end[coordinate]) {\n    a[coordinate] = b[coordinate]\n  } else {\n    b[coordinate] = a[coordinate]\n  }\n\n  if (Number.isFinite(offset)) {\n    a[coordinate] += direction * offset\n    b[coordinate] += direction * offset\n  }\n}\n\n/**\n * Places the connection point at the edge's endpoint.\n */\nexport const anchor: ConnectionPoint.Definition<AnchorOptions> = function (\n  line,\n  view,\n  magnet,\n  options,\n) {\n  const { alignOffset, align } = options\n  if (align) {\n    alignLine(line, align, alignOffset)\n  }\n  return offset(line.end, line.start, options.offset)\n}\n"],"mappings":"AAEA,SAASA,MAAM,QAAQ,QAAQ;AAS/B,SAASC,SAASA,CAACC,IAAU,EAAEC,IAAW,EAAEH,MAAM,GAAG,CAAC;EACpD,MAAM;IAAEI,KAAK;IAAEC;EAAG,CAAE,GAAGH,IAAI;EAC3B,IAAII,CAAC;EACL,IAAIC,CAAC;EACL,IAAIC,SAAS;EACb,IAAIC,UAAqB;EAEzB,QAAQN,IAAI;IACV,KAAK,MAAM;MACTM,UAAU,GAAG,GAAG;MAChBH,CAAC,GAAGD,GAAG;MACPE,CAAC,GAAGH,KAAK;MACTI,SAAS,GAAG,CAAC,CAAC;MACd;IACF,KAAK,OAAO;MACVC,UAAU,GAAG,GAAG;MAChBH,CAAC,GAAGF,KAAK;MACTG,CAAC,GAAGF,GAAG;MACPG,SAAS,GAAG,CAAC;MACb;IACF,KAAK,KAAK;MACRC,UAAU,GAAG,GAAG;MAChBH,CAAC,GAAGD,GAAG;MACPE,CAAC,GAAGH,KAAK;MACTI,SAAS,GAAG,CAAC,CAAC;MACd;IACF,KAAK,QAAQ;MACXC,UAAU,GAAG,GAAG;MAChBH,CAAC,GAAGF,KAAK;MACTG,CAAC,GAAGF,GAAG;MACPG,SAAS,GAAG,CAAC;MACb;IACF;MACE;;EAGJ,IAAIJ,KAAK,CAACK,UAAU,CAAC,GAAGJ,GAAG,CAACI,UAAU,CAAC,EAAE;IACvCH,CAAC,CAACG,UAAU,CAAC,GAAGF,CAAC,CAACE,UAAU,CAAC;GAC9B,MAAM;IACLF,CAAC,CAACE,UAAU,CAAC,GAAGH,CAAC,CAACG,UAAU,CAAC;;EAG/B,IAAIC,MAAM,CAACC,QAAQ,CAACX,MAAM,CAAC,EAAE;IAC3BM,CAAC,CAACG,UAAU,CAAC,IAAID,SAAS,GAAGR,MAAM;IACnCO,CAAC,CAACE,UAAU,CAAC,IAAID,SAAS,GAAGR,MAAM;;AAEvC;AAEA;;;AAGA,OAAO,MAAMY,MAAM,GAA8C,SAAAA,CAC/DV,IAAI,EACJW,IAAI,EACJC,MAAM,EACNC,OAAO;EAEP,MAAM;IAAEC,WAAW;IAAEC;EAAK,CAAE,GAAGF,OAAO;EACtC,IAAIE,KAAK,EAAE;IACThB,SAAS,CAACC,IAAI,EAAEe,KAAK,EAAED,WAAW,CAAC;;EAErC,OAAOhB,MAAM,CAACE,IAAI,CAACG,GAAG,EAAEH,IAAI,CAACE,KAAK,EAAEW,OAAO,CAACf,MAAM,CAAC;AACrD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}