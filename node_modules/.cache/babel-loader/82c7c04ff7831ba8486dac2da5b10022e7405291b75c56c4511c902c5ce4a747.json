{"ast":null,"code":"import { Dom, Vector } from '@antv/x6-common';\nimport { Registry } from '../registry';\nimport * as patterns from './main';\nexport class Grid {\n  constructor() {\n    this.patterns = {};\n    this.root = Vector.create(Dom.createSvgDocument(), {\n      width: '100%',\n      height: '100%'\n    }, [Dom.createSvgElement('defs')]).node;\n  }\n  add(id, elem) {\n    const firstChild = this.root.childNodes[0];\n    if (firstChild) {\n      firstChild.appendChild(elem);\n    }\n    this.patterns[id] = elem;\n    Vector.create('rect', {\n      width: '100%',\n      height: '100%',\n      fill: `url(#${id})`\n    }).appendTo(this.root);\n  }\n  get(id) {\n    return this.patterns[id];\n  }\n  has(id) {\n    return this.patterns[id] != null;\n  }\n}\n(function (Grid) {\n  Grid.presets = patterns;\n  Grid.registry = Registry.create({\n    type: 'grid'\n  });\n  Grid.registry.register(Grid.presets, true);\n})(Grid || (Grid = {}));","map":{"version":3,"names":["Dom","Vector","Registry","patterns","Grid","constructor","root","create","createSvgDocument","width","height","createSvgElement","node","add","id","elem","firstChild","childNodes","appendChild","fill","appendTo","get","has","presets","registry","type","register"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/grid/index.ts"],"sourcesContent":["import { Dom, Vector, KeyValue } from '@antv/x6-common'\nimport { Registry } from '../registry'\nimport * as patterns from './main'\n\nexport class Grid {\n  root: Element\n  patterns: { [id: string]: Element }\n\n  constructor() {\n    this.patterns = {}\n    this.root = Vector.create(\n      Dom.createSvgDocument(),\n      {\n        width: '100%',\n        height: '100%',\n      },\n      [Dom.createSvgElement('defs')],\n    ).node\n  }\n\n  add(id: string, elem: Element) {\n    const firstChild = this.root.childNodes[0]\n    if (firstChild) {\n      firstChild.appendChild(elem)\n    }\n\n    this.patterns[id] = elem\n\n    Vector.create('rect', {\n      width: '100%',\n      height: '100%',\n      fill: `url(#${id})`,\n    }).appendTo(this.root)\n  }\n\n  get(id: string) {\n    return this.patterns[id]\n  }\n\n  has(id: string) {\n    return this.patterns[id] != null\n  }\n}\n\nexport namespace Grid {\n  export interface Options {\n    color: string\n    thickness: number\n  }\n\n  interface BaseDefinition<T extends Options = Options> extends Options {\n    markup: string\n    update: (\n      elem: Element,\n      options: {\n        sx: number\n        sy: number\n        ox: number\n        oy: number\n        width: number\n        height: number\n      } & T,\n    ) => void\n  }\n\n  export type Definition<T extends Options = Options> = T & BaseDefinition<T>\n  export type CommonDefinition =\n    | Definition<Grid.Options>\n    | Definition<Grid.Options>[]\n}\n\nexport namespace Grid {\n  export const presets = patterns\n  export const registry = Registry.create<CommonDefinition, Presets>({\n    type: 'grid',\n  })\n\n  registry.register(presets, true)\n}\n\nexport namespace Grid {\n  export type Presets = (typeof Grid)['presets']\n\n  export type OptionsMap = {\n    dot: patterns.DotOptions\n    fixedDot: patterns.FixedDotOptions\n    mesh: patterns.MeshOptions\n    doubleMesh: patterns.DoubleMeshOptions[]\n  }\n\n  export type NativeNames = keyof Presets\n\n  export interface NativeItem<T extends NativeNames = NativeNames> {\n    type: T\n    args?: OptionsMap[T]\n  }\n\n  export interface ManaualItem {\n    type: Exclude<string, NativeNames>\n    args?: KeyValue\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,MAAM,QAAkB,iBAAiB;AACvD,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAO,KAAKC,QAAQ,MAAM,QAAQ;AAElC,OAAM,MAAOC,IAAI;EAIfC,YAAA;IACE,IAAI,CAACF,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACG,IAAI,GAAGL,MAAM,CAACM,MAAM,CACvBP,GAAG,CAACQ,iBAAiB,EAAE,EACvB;MACEC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE;KACT,EACD,CAACV,GAAG,CAACW,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAC/B,CAACC,IAAI;EACR;EAEAC,GAAGA,CAACC,EAAU,EAAEC,IAAa;IAC3B,MAAMC,UAAU,GAAG,IAAI,CAACV,IAAI,CAACW,UAAU,CAAC,CAAC,CAAC;IAC1C,IAAID,UAAU,EAAE;MACdA,UAAU,CAACE,WAAW,CAACH,IAAI,CAAC;;IAG9B,IAAI,CAACZ,QAAQ,CAACW,EAAE,CAAC,GAAGC,IAAI;IAExBd,MAAM,CAACM,MAAM,CAAC,MAAM,EAAE;MACpBE,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdS,IAAI,EAAE,QAAQL,EAAE;KACjB,CAAC,CAACM,QAAQ,CAAC,IAAI,CAACd,IAAI,CAAC;EACxB;EAEAe,GAAGA,CAACP,EAAU;IACZ,OAAO,IAAI,CAACX,QAAQ,CAACW,EAAE,CAAC;EAC1B;EAEAQ,GAAGA,CAACR,EAAU;IACZ,OAAO,IAAI,CAACX,QAAQ,CAACW,EAAE,CAAC,IAAI,IAAI;EAClC;;AA8BF,WAAiBV,IAAI;EACNA,IAAA,CAAAmB,OAAO,GAAGpB,QAAQ;EAClBC,IAAA,CAAAoB,QAAQ,GAAGtB,QAAQ,CAACK,MAAM,CAA4B;IACjEkB,IAAI,EAAE;GACP,CAAC;EAEFrB,IAAA,CAAAoB,QAAQ,CAACE,QAAQ,CAACtB,IAAA,CAAAmB,OAAO,EAAE,IAAI,CAAC;AAClC,CAAC,EAPgBnB,IAAI,KAAJA,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}