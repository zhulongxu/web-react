{"ast":null,"code":"import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genFocusOutline, resetComponent } from '../../style';\nimport { genCollapseMotion } from '../../style/motion';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { genDirectoryStyle } from './directory';\n// ============================ Keyframes =============================\nconst treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n// ============================== Switch ==============================\nconst getSwitchStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-switcher-icon`]: {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: `transform ${token.motionDurationSlow}`\n    }\n  }\n});\n// =============================== Drop ===============================\nconst getDropIndicatorStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-drop-indicator`]: {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: `${unit(token.lineWidthBold)} solid ${token.colorPrimary}`,\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  }\n});\nexport const genBaseStyle = (prefixCls, token) => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    titleHeight,\n    indentSize,\n    nodeSelectedBg,\n    nodeHoverBg,\n    colorTextQuaternary\n  } = token;\n  return {\n    [treeCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadius,\n      transition: `background-color ${token.motionDurationSlow}`,\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`&${treeCls}-rtl ${treeCls}-switcher_close ${treeCls}-switcher-icon svg`]: {\n        transform: 'rotate(90deg)'\n      },\n      [`&-focused:not(:hover):not(${treeCls}-active-focused)`]: Object.assign({}, genFocusOutline(token)),\n      // =================== Virtual List ===================\n      [`${treeCls}-list-holder-inner`]: {\n        alignItems: 'flex-start'\n      },\n      [`&${treeCls}-block-node`]: {\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            flex: 'auto'\n          },\n          // >>> Drag\n          [`${treeNodeCls}.dragging:after`]: {\n            position: 'absolute',\n            inset: 0,\n            border: `1px solid ${token.colorPrimary}`,\n            opacity: 0,\n            animationName: treeNodeFX,\n            animationDuration: token.motionDurationSlow,\n            animationPlayState: 'running',\n            animationFillMode: 'forwards',\n            content: '\"\"',\n            pointerEvents: 'none',\n            borderRadius: token.borderRadius\n          }\n        }\n      },\n      // ===================== TreeNode =====================\n      [treeNodeCls]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        marginBottom: treeNodePadding,\n        lineHeight: unit(titleHeight),\n        position: 'relative',\n        // 非常重要，避免 drop-indicator 在拖拽过程中闪烁\n        '&:before': {\n          content: '\"\"',\n          position: 'absolute',\n          zIndex: 1,\n          insetInlineStart: 0,\n          width: '100%',\n          top: '100%',\n          height: treeNodePadding\n        },\n        // Disabled\n        [`&-disabled ${treeCls}-node-content-wrapper`]: {\n          color: token.colorTextDisabled,\n          cursor: 'not-allowed',\n          '&:hover': {\n            background: 'transparent'\n          }\n        },\n        // not disable\n        [`&:not(${treeNodeCls}-disabled)`]: {\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            '&:hover': {\n              color: token.nodeHoverColor\n            }\n          }\n        },\n        [`&-active ${treeCls}-node-content-wrapper`]: {\n          background: token.controlItemBgHover\n        },\n        [`&:not(${treeNodeCls}-disabled).filter-node ${treeCls}-title`]: {\n          color: token.colorPrimary,\n          fontWeight: 500\n        },\n        '&-draggable': {\n          cursor: 'grab',\n          [`${treeCls}-draggable-icon`]: {\n            // https://github.com/ant-design/ant-design/issues/41915\n            flexShrink: 0,\n            width: titleHeight,\n            textAlign: 'center',\n            visibility: 'visible',\n            color: colorTextQuaternary\n          },\n          [`&${treeNodeCls}-disabled ${treeCls}-draggable-icon`]: {\n            visibility: 'hidden'\n          }\n        }\n      },\n      // >>> Indent\n      [`${treeCls}-indent`]: {\n        alignSelf: 'stretch',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        '&-unit': {\n          display: 'inline-block',\n          width: indentSize\n        }\n      },\n      // >>> Drag Handler\n      [`${treeCls}-draggable-icon`]: {\n        visibility: 'hidden'\n      },\n      // Switcher / Checkbox\n      [`${treeCls}-switcher, ${treeCls}-checkbox`]: {\n        marginInlineEnd: token.calc(token.calc(titleHeight).sub(token.controlInteractiveSize)).div(2).equal()\n      },\n      // >>> Switcher\n      [`${treeCls}-switcher`]: Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n        position: 'relative',\n        flex: 'none',\n        alignSelf: 'stretch',\n        width: titleHeight,\n        textAlign: 'center',\n        cursor: 'pointer',\n        userSelect: 'none',\n        transition: `all ${token.motionDurationSlow}`,\n        '&-noop': {\n          cursor: 'unset'\n        },\n        '&:before': {\n          pointerEvents: 'none',\n          content: '\"\"',\n          width: titleHeight,\n          height: titleHeight,\n          position: 'absolute',\n          left: {\n            _skip_check_: true,\n            value: 0\n          },\n          top: 0,\n          borderRadius: token.borderRadius,\n          transition: `all ${token.motionDurationSlow}`\n        },\n        [`&:not(${treeCls}-switcher-noop):hover:before`]: {\n          backgroundColor: token.colorBgTextHover\n        },\n        [`&_close ${treeCls}-switcher-icon svg`]: {\n          transform: 'rotate(-90deg)'\n        },\n        '&-loading-icon': {\n          color: token.colorPrimary\n        },\n        '&-leaf-line': {\n          position: 'relative',\n          zIndex: 1,\n          display: 'inline-block',\n          width: '100%',\n          height: '100%',\n          // https://github.com/ant-design/ant-design/issues/31884\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: token.calc(titleHeight).div(2).equal(),\n            bottom: token.calc(treeNodePadding).mul(-1).equal(),\n            marginInlineStart: -1,\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&:after': {\n            position: 'absolute',\n            width: token.calc(token.calc(titleHeight).div(2).equal()).mul(0.8).equal(),\n            height: token.calc(titleHeight).div(2).equal(),\n            borderBottom: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          }\n        }\n      }),\n      // >>> Title\n      // add `${treeCls}-checkbox + span` to cover checkbox `${checkboxCls} + span`\n      [`${treeCls}-node-content-wrapper`]: Object.assign(Object.assign({\n        position: 'relative',\n        minHeight: titleHeight,\n        paddingBlock: 0,\n        paddingInline: token.paddingXS,\n        background: 'transparent',\n        borderRadius: token.borderRadius,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}, border 0s, line-height 0s, box-shadow 0s`\n      }, getDropIndicatorStyle(prefixCls, token)), {\n        '&:hover': {\n          backgroundColor: nodeHoverBg\n        },\n        [`&${treeCls}-node-selected`]: {\n          color: token.nodeSelectedColor,\n          backgroundColor: nodeSelectedBg\n        },\n        // Icon\n        [`${treeCls}-iconEle`]: {\n          display: 'inline-block',\n          width: titleHeight,\n          height: titleHeight,\n          textAlign: 'center',\n          verticalAlign: 'top',\n          '&:empty': {\n            display: 'none'\n          }\n        }\n      }),\n      // https://github.com/ant-design/ant-design/issues/28217\n      [`${treeCls}-unselectable ${treeCls}-node-content-wrapper:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      [`${treeNodeCls}.drop-container > [draggable]`]: {\n        boxShadow: `0 0 0 2px ${token.colorPrimary}`\n      },\n      // ==================== Show Line =====================\n      '&-show-line': {\n        // ================ Indent lines ================\n        [`${treeCls}-indent-unit`]: {\n          position: 'relative',\n          height: '100%',\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: token.calc(titleHeight).div(2).equal(),\n            bottom: token.calc(treeNodePadding).mul(-1).equal(),\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&-end:before': {\n            display: 'none'\n          }\n        },\n        // ============== Cover Background ==============\n        [`${treeCls}-switcher`]: {\n          background: 'transparent',\n          '&-line-icon': {\n            // https://github.com/ant-design/ant-design/issues/32813\n            verticalAlign: '-0.15em'\n          }\n        }\n      },\n      [`${treeNodeCls}-leaf-last ${treeCls}-switcher-leaf-line:before`]: {\n        top: 'auto !important',\n        bottom: 'auto !important',\n        height: `${unit(token.calc(titleHeight).div(2).equal())} !important`\n      }\n    })\n  };\n};\n// ============================== Merged ==============================\nexport const genTreeStyle = (prefixCls, token) => {\n  const treeCls = `.${prefixCls}`;\n  const treeNodeCls = `${treeCls}-treenode`;\n  const treeNodePadding = token.calc(token.paddingXS).div(2).equal();\n  const treeToken = mergeToken(token, {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding\n  });\n  return [\n  // Basic\n  genBaseStyle(prefixCls, treeToken),\n  // Directory\n  genDirectoryStyle(treeToken)];\n};\nexport const initComponentToken = token => {\n  const {\n    controlHeightSM,\n    controlItemBgHover,\n    controlItemBgActive\n  } = token;\n  const titleHeight = controlHeightSM;\n  return {\n    titleHeight,\n    indentSize: titleHeight,\n    nodeHoverBg: controlItemBgHover,\n    nodeHoverColor: token.colorText,\n    nodeSelectedBg: controlItemBgActive,\n    nodeSelectedColor: token.colorText\n  };\n};\nexport const prepareComponentToken = token => {\n  const {\n    colorTextLightSolid,\n    colorPrimary\n  } = token;\n  return Object.assign(Object.assign({}, initComponentToken(token)), {\n    directoryNodeSelectedColor: colorTextLightSolid,\n    directoryNodeSelectedBg: colorPrimary\n  });\n};\nexport default genStyleHooks('Tree', (token, _ref) => {\n  let {\n    prefixCls\n  } = _ref;\n  return [{\n    [token.componentCls]: getCheckboxStyle(`${prefixCls}-checkbox`, token)\n  }, genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n}, prepareComponentToken);","map":{"version":3,"names":["Keyframes","unit","getStyle","getCheckboxStyle","genFocusOutline","resetComponent","genCollapseMotion","genStyleHooks","mergeToken","genDirectoryStyle","treeNodeFX","opacity","getSwitchStyle","prefixCls","token","display","fontSize","verticalAlign","svg","transition","motionDurationSlow","getDropIndicatorStyle","position","zIndex","height","backgroundColor","colorPrimary","borderRadius","pointerEvents","top","insetInlineStart","width","border","lineWidthBold","content","genBaseStyle","treeCls","treeNodeCls","treeNodePadding","titleHeight","indentSize","nodeSelectedBg","nodeHoverBg","colorTextQuaternary","Object","assign","background","colorBgContainer","direction","transform","alignItems","flex","inset","animationName","animationDuration","animationPlayState","animationFillMode","marginBottom","lineHeight","color","colorTextDisabled","cursor","nodeHoverColor","controlItemBgHover","fontWeight","flexShrink","textAlign","visibility","alignSelf","whiteSpace","userSelect","marginInlineEnd","calc","sub","controlInteractiveSize","div","equal","left","_skip_check_","value","colorBgTextHover","insetInlineEnd","bottom","mul","marginInlineStart","borderInlineEnd","colorBorder","borderBottom","minHeight","paddingBlock","paddingInline","paddingXS","motionDurationMid","nodeSelectedColor","boxShadow","genTreeStyle","treeToken","initComponentToken","controlHeightSM","controlItemBgActive","colorText","prepareComponentToken","colorTextLightSolid","directoryNodeSelectedColor","directoryNodeSelectedBg","_ref","componentCls"],"sources":["/home/devbox/project/node_modules/.pnpm/antd@5.22.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/antd/es/tree/style/index.js"],"sourcesContent":["import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genFocusOutline, resetComponent } from '../../style';\nimport { genCollapseMotion } from '../../style/motion';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { genDirectoryStyle } from './directory';\n// ============================ Keyframes =============================\nconst treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n// ============================== Switch ==============================\nconst getSwitchStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-switcher-icon`]: {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: `transform ${token.motionDurationSlow}`\n    }\n  }\n});\n// =============================== Drop ===============================\nconst getDropIndicatorStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-drop-indicator`]: {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: `${unit(token.lineWidthBold)} solid ${token.colorPrimary}`,\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  }\n});\nexport const genBaseStyle = (prefixCls, token) => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    titleHeight,\n    indentSize,\n    nodeSelectedBg,\n    nodeHoverBg,\n    colorTextQuaternary\n  } = token;\n  return {\n    [treeCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadius,\n      transition: `background-color ${token.motionDurationSlow}`,\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`&${treeCls}-rtl ${treeCls}-switcher_close ${treeCls}-switcher-icon svg`]: {\n        transform: 'rotate(90deg)'\n      },\n      [`&-focused:not(:hover):not(${treeCls}-active-focused)`]: Object.assign({}, genFocusOutline(token)),\n      // =================== Virtual List ===================\n      [`${treeCls}-list-holder-inner`]: {\n        alignItems: 'flex-start'\n      },\n      [`&${treeCls}-block-node`]: {\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            flex: 'auto'\n          },\n          // >>> Drag\n          [`${treeNodeCls}.dragging:after`]: {\n            position: 'absolute',\n            inset: 0,\n            border: `1px solid ${token.colorPrimary}`,\n            opacity: 0,\n            animationName: treeNodeFX,\n            animationDuration: token.motionDurationSlow,\n            animationPlayState: 'running',\n            animationFillMode: 'forwards',\n            content: '\"\"',\n            pointerEvents: 'none',\n            borderRadius: token.borderRadius\n          }\n        }\n      },\n      // ===================== TreeNode =====================\n      [treeNodeCls]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        marginBottom: treeNodePadding,\n        lineHeight: unit(titleHeight),\n        position: 'relative',\n        // 非常重要，避免 drop-indicator 在拖拽过程中闪烁\n        '&:before': {\n          content: '\"\"',\n          position: 'absolute',\n          zIndex: 1,\n          insetInlineStart: 0,\n          width: '100%',\n          top: '100%',\n          height: treeNodePadding\n        },\n        // Disabled\n        [`&-disabled ${treeCls}-node-content-wrapper`]: {\n          color: token.colorTextDisabled,\n          cursor: 'not-allowed',\n          '&:hover': {\n            background: 'transparent'\n          }\n        },\n        // not disable\n        [`&:not(${treeNodeCls}-disabled)`]: {\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            '&:hover': {\n              color: token.nodeHoverColor\n            }\n          }\n        },\n        [`&-active ${treeCls}-node-content-wrapper`]: {\n          background: token.controlItemBgHover\n        },\n        [`&:not(${treeNodeCls}-disabled).filter-node ${treeCls}-title`]: {\n          color: token.colorPrimary,\n          fontWeight: 500\n        },\n        '&-draggable': {\n          cursor: 'grab',\n          [`${treeCls}-draggable-icon`]: {\n            // https://github.com/ant-design/ant-design/issues/41915\n            flexShrink: 0,\n            width: titleHeight,\n            textAlign: 'center',\n            visibility: 'visible',\n            color: colorTextQuaternary\n          },\n          [`&${treeNodeCls}-disabled ${treeCls}-draggable-icon`]: {\n            visibility: 'hidden'\n          }\n        }\n      },\n      // >>> Indent\n      [`${treeCls}-indent`]: {\n        alignSelf: 'stretch',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        '&-unit': {\n          display: 'inline-block',\n          width: indentSize\n        }\n      },\n      // >>> Drag Handler\n      [`${treeCls}-draggable-icon`]: {\n        visibility: 'hidden'\n      },\n      // Switcher / Checkbox\n      [`${treeCls}-switcher, ${treeCls}-checkbox`]: {\n        marginInlineEnd: token.calc(token.calc(titleHeight).sub(token.controlInteractiveSize)).div(2).equal()\n      },\n      // >>> Switcher\n      [`${treeCls}-switcher`]: Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n        position: 'relative',\n        flex: 'none',\n        alignSelf: 'stretch',\n        width: titleHeight,\n        textAlign: 'center',\n        cursor: 'pointer',\n        userSelect: 'none',\n        transition: `all ${token.motionDurationSlow}`,\n        '&-noop': {\n          cursor: 'unset'\n        },\n        '&:before': {\n          pointerEvents: 'none',\n          content: '\"\"',\n          width: titleHeight,\n          height: titleHeight,\n          position: 'absolute',\n          left: {\n            _skip_check_: true,\n            value: 0\n          },\n          top: 0,\n          borderRadius: token.borderRadius,\n          transition: `all ${token.motionDurationSlow}`\n        },\n        [`&:not(${treeCls}-switcher-noop):hover:before`]: {\n          backgroundColor: token.colorBgTextHover\n        },\n        [`&_close ${treeCls}-switcher-icon svg`]: {\n          transform: 'rotate(-90deg)'\n        },\n        '&-loading-icon': {\n          color: token.colorPrimary\n        },\n        '&-leaf-line': {\n          position: 'relative',\n          zIndex: 1,\n          display: 'inline-block',\n          width: '100%',\n          height: '100%',\n          // https://github.com/ant-design/ant-design/issues/31884\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: token.calc(titleHeight).div(2).equal(),\n            bottom: token.calc(treeNodePadding).mul(-1).equal(),\n            marginInlineStart: -1,\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&:after': {\n            position: 'absolute',\n            width: token.calc(token.calc(titleHeight).div(2).equal()).mul(0.8).equal(),\n            height: token.calc(titleHeight).div(2).equal(),\n            borderBottom: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          }\n        }\n      }),\n      // >>> Title\n      // add `${treeCls}-checkbox + span` to cover checkbox `${checkboxCls} + span`\n      [`${treeCls}-node-content-wrapper`]: Object.assign(Object.assign({\n        position: 'relative',\n        minHeight: titleHeight,\n        paddingBlock: 0,\n        paddingInline: token.paddingXS,\n        background: 'transparent',\n        borderRadius: token.borderRadius,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}, border 0s, line-height 0s, box-shadow 0s`\n      }, getDropIndicatorStyle(prefixCls, token)), {\n        '&:hover': {\n          backgroundColor: nodeHoverBg\n        },\n        [`&${treeCls}-node-selected`]: {\n          color: token.nodeSelectedColor,\n          backgroundColor: nodeSelectedBg\n        },\n        // Icon\n        [`${treeCls}-iconEle`]: {\n          display: 'inline-block',\n          width: titleHeight,\n          height: titleHeight,\n          textAlign: 'center',\n          verticalAlign: 'top',\n          '&:empty': {\n            display: 'none'\n          }\n        }\n      }),\n      // https://github.com/ant-design/ant-design/issues/28217\n      [`${treeCls}-unselectable ${treeCls}-node-content-wrapper:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      [`${treeNodeCls}.drop-container > [draggable]`]: {\n        boxShadow: `0 0 0 2px ${token.colorPrimary}`\n      },\n      // ==================== Show Line =====================\n      '&-show-line': {\n        // ================ Indent lines ================\n        [`${treeCls}-indent-unit`]: {\n          position: 'relative',\n          height: '100%',\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: token.calc(titleHeight).div(2).equal(),\n            bottom: token.calc(treeNodePadding).mul(-1).equal(),\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&-end:before': {\n            display: 'none'\n          }\n        },\n        // ============== Cover Background ==============\n        [`${treeCls}-switcher`]: {\n          background: 'transparent',\n          '&-line-icon': {\n            // https://github.com/ant-design/ant-design/issues/32813\n            verticalAlign: '-0.15em'\n          }\n        }\n      },\n      [`${treeNodeCls}-leaf-last ${treeCls}-switcher-leaf-line:before`]: {\n        top: 'auto !important',\n        bottom: 'auto !important',\n        height: `${unit(token.calc(titleHeight).div(2).equal())} !important`\n      }\n    })\n  };\n};\n// ============================== Merged ==============================\nexport const genTreeStyle = (prefixCls, token) => {\n  const treeCls = `.${prefixCls}`;\n  const treeNodeCls = `${treeCls}-treenode`;\n  const treeNodePadding = token.calc(token.paddingXS).div(2).equal();\n  const treeToken = mergeToken(token, {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding\n  });\n  return [\n  // Basic\n  genBaseStyle(prefixCls, treeToken),\n  // Directory\n  genDirectoryStyle(treeToken)];\n};\nexport const initComponentToken = token => {\n  const {\n    controlHeightSM,\n    controlItemBgHover,\n    controlItemBgActive\n  } = token;\n  const titleHeight = controlHeightSM;\n  return {\n    titleHeight,\n    indentSize: titleHeight,\n    nodeHoverBg: controlItemBgHover,\n    nodeHoverColor: token.colorText,\n    nodeSelectedBg: controlItemBgActive,\n    nodeSelectedColor: token.colorText\n  };\n};\nexport const prepareComponentToken = token => {\n  const {\n    colorTextLightSolid,\n    colorPrimary\n  } = token;\n  return Object.assign(Object.assign({}, initComponentToken(token)), {\n    directoryNodeSelectedColor: colorTextLightSolid,\n    directoryNodeSelectedBg: colorPrimary\n  });\n};\nexport default genStyleHooks('Tree', (token, _ref) => {\n  let {\n    prefixCls\n  } = _ref;\n  return [{\n    [token.componentCls]: getCheckboxStyle(`${prefixCls}-checkbox`, token)\n  }, genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n}, prepareComponentToken);"],"mappings":"AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,qBAAqB;AACrD,SAASC,QAAQ,IAAIC,gBAAgB,QAAQ,sBAAsB;AACnE,SAASC,eAAe,EAAEC,cAAc,QAAQ,aAAa;AAC7D,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,aAAa,EAAEC,UAAU,QAAQ,sBAAsB;AAChE,SAASC,iBAAiB,QAAQ,aAAa;AAC/C;AACA,MAAMC,UAAU,GAAG,IAAIV,SAAS,CAAC,6BAA6B,EAAE;EAC9D,IAAI,EAAE;IACJW,OAAO,EAAE;EACX,CAAC;EACD,MAAM,EAAE;IACNA,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AACF;AACA,MAAMC,cAAc,GAAGA,CAACC,SAAS,EAAEC,KAAK,MAAM;EAC5C,CAAC,IAAID,SAAS,gBAAgB,GAAG;IAC/BE,OAAO,EAAE,cAAc;IACvBC,QAAQ,EAAE,EAAE;IACZC,aAAa,EAAE,UAAU;IACzBC,GAAG,EAAE;MACHC,UAAU,EAAE,aAAaL,KAAK,CAACM,kBAAkB;IACnD;EACF;AACF,CAAC,CAAC;AACF;AACA,MAAMC,qBAAqB,GAAGA,CAACR,SAAS,EAAEC,KAAK,MAAM;EACnD,CAAC,IAAID,SAAS,iBAAiB,GAAG;IAChCS,QAAQ,EAAE,UAAU;IACpB;IACAC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE,CAAC;IACTC,eAAe,EAAEX,KAAK,CAACY,YAAY;IACnCC,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE,MAAM;IACrB,SAAS,EAAE;MACTN,QAAQ,EAAE,UAAU;MACpBO,GAAG,EAAE,CAAC,CAAC;MACPC,gBAAgB,EAAE,CAAC,CAAC;MACpBC,KAAK,EAAE,CAAC;MACRP,MAAM,EAAE,CAAC;MACTC,eAAe,EAAE,aAAa;MAC9BO,MAAM,EAAE,GAAG/B,IAAI,CAACa,KAAK,CAACmB,aAAa,CAAC,UAAUnB,KAAK,CAACY,YAAY,EAAE;MAClEC,YAAY,EAAE,KAAK;MACnBO,OAAO,EAAE;IACX;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAMC,YAAY,GAAGA,CAACtB,SAAS,EAAEC,KAAK,KAAK;EAChD,MAAM;IACJsB,OAAO;IACPC,WAAW;IACXC,eAAe;IACfC,WAAW;IACXC,UAAU;IACVC,cAAc;IACdC,WAAW;IACXC;EACF,CAAC,GAAG7B,KAAK;EACT,OAAO;IACL,CAACsB,OAAO,GAAGQ,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAExC,cAAc,CAACS,KAAK,CAAC,CAAC,EAAE;MACjEgC,UAAU,EAAEhC,KAAK,CAACiC,gBAAgB;MAClCpB,YAAY,EAAEb,KAAK,CAACa,YAAY;MAChCR,UAAU,EAAE,oBAAoBL,KAAK,CAACM,kBAAkB,EAAE;MAC1D,OAAO,EAAE;QACP4B,SAAS,EAAE;MACb,CAAC;MACD,CAAC,IAAIZ,OAAO,QAAQA,OAAO,mBAAmBA,OAAO,oBAAoB,GAAG;QAC1Ea,SAAS,EAAE;MACb,CAAC;MACD,CAAC,6BAA6Bb,OAAO,kBAAkB,GAAGQ,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEzC,eAAe,CAACU,KAAK,CAAC,CAAC;MACnG;MACA,CAAC,GAAGsB,OAAO,oBAAoB,GAAG;QAChCc,UAAU,EAAE;MACd,CAAC;MACD,CAAC,IAAId,OAAO,aAAa,GAAG;QAC1B,CAAC,GAAGA,OAAO,oBAAoB,GAAG;UAChCc,UAAU,EAAE,SAAS;UACrB;UACA,CAAC,GAAGd,OAAO,uBAAuB,GAAG;YACnCe,IAAI,EAAE;UACR,CAAC;UACD;UACA,CAAC,GAAGd,WAAW,iBAAiB,GAAG;YACjCf,QAAQ,EAAE,UAAU;YACpB8B,KAAK,EAAE,CAAC;YACRpB,MAAM,EAAE,aAAalB,KAAK,CAACY,YAAY,EAAE;YACzCf,OAAO,EAAE,CAAC;YACV0C,aAAa,EAAE3C,UAAU;YACzB4C,iBAAiB,EAAExC,KAAK,CAACM,kBAAkB;YAC3CmC,kBAAkB,EAAE,SAAS;YAC7BC,iBAAiB,EAAE,UAAU;YAC7BtB,OAAO,EAAE,IAAI;YACbN,aAAa,EAAE,MAAM;YACrBD,YAAY,EAAEb,KAAK,CAACa;UACtB;QACF;MACF,CAAC;MACD;MACA,CAACU,WAAW,GAAG;QACbtB,OAAO,EAAE,MAAM;QACfmC,UAAU,EAAE,YAAY;QACxBO,YAAY,EAAEnB,eAAe;QAC7BoB,UAAU,EAAEzD,IAAI,CAACsC,WAAW,CAAC;QAC7BjB,QAAQ,EAAE,UAAU;QACpB;QACA,UAAU,EAAE;UACVY,OAAO,EAAE,IAAI;UACbZ,QAAQ,EAAE,UAAU;UACpBC,MAAM,EAAE,CAAC;UACTO,gBAAgB,EAAE,CAAC;UACnBC,KAAK,EAAE,MAAM;UACbF,GAAG,EAAE,MAAM;UACXL,MAAM,EAAEc;QACV,CAAC;QACD;QACA,CAAC,cAAcF,OAAO,uBAAuB,GAAG;UAC9CuB,KAAK,EAAE7C,KAAK,CAAC8C,iBAAiB;UAC9BC,MAAM,EAAE,aAAa;UACrB,SAAS,EAAE;YACTf,UAAU,EAAE;UACd;QACF,CAAC;QACD;QACA,CAAC,SAAST,WAAW,YAAY,GAAG;UAClC;UACA,CAAC,GAAGD,OAAO,uBAAuB,GAAG;YACnC,SAAS,EAAE;cACTuB,KAAK,EAAE7C,KAAK,CAACgD;YACf;UACF;QACF,CAAC;QACD,CAAC,YAAY1B,OAAO,uBAAuB,GAAG;UAC5CU,UAAU,EAAEhC,KAAK,CAACiD;QACpB,CAAC;QACD,CAAC,SAAS1B,WAAW,0BAA0BD,OAAO,QAAQ,GAAG;UAC/DuB,KAAK,EAAE7C,KAAK,CAACY,YAAY;UACzBsC,UAAU,EAAE;QACd,CAAC;QACD,aAAa,EAAE;UACbH,MAAM,EAAE,MAAM;UACd,CAAC,GAAGzB,OAAO,iBAAiB,GAAG;YAC7B;YACA6B,UAAU,EAAE,CAAC;YACblC,KAAK,EAAEQ,WAAW;YAClB2B,SAAS,EAAE,QAAQ;YACnBC,UAAU,EAAE,SAAS;YACrBR,KAAK,EAAEhB;UACT,CAAC;UACD,CAAC,IAAIN,WAAW,aAAaD,OAAO,iBAAiB,GAAG;YACtD+B,UAAU,EAAE;UACd;QACF;MACF,CAAC;MACD;MACA,CAAC,GAAG/B,OAAO,SAAS,GAAG;QACrBgC,SAAS,EAAE,SAAS;QACpBC,UAAU,EAAE,QAAQ;QACpBC,UAAU,EAAE,MAAM;QAClB,QAAQ,EAAE;UACRvD,OAAO,EAAE,cAAc;UACvBgB,KAAK,EAAES;QACT;MACF,CAAC;MACD;MACA,CAAC,GAAGJ,OAAO,iBAAiB,GAAG;QAC7B+B,UAAU,EAAE;MACd,CAAC;MACD;MACA,CAAC,GAAG/B,OAAO,cAAcA,OAAO,WAAW,GAAG;QAC5CmC,eAAe,EAAEzD,KAAK,CAAC0D,IAAI,CAAC1D,KAAK,CAAC0D,IAAI,CAACjC,WAAW,CAAC,CAACkC,GAAG,CAAC3D,KAAK,CAAC4D,sBAAsB,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC;MACtG,CAAC;MACD;MACA,CAAC,GAAGxC,OAAO,WAAW,GAAGQ,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEjC,cAAc,CAACC,SAAS,EAAEC,KAAK,CAAC,CAAC,EAAE;QAC1FQ,QAAQ,EAAE,UAAU;QACpB6B,IAAI,EAAE,MAAM;QACZiB,SAAS,EAAE,SAAS;QACpBrC,KAAK,EAAEQ,WAAW;QAClB2B,SAAS,EAAE,QAAQ;QACnBL,MAAM,EAAE,SAAS;QACjBS,UAAU,EAAE,MAAM;QAClBnD,UAAU,EAAE,OAAOL,KAAK,CAACM,kBAAkB,EAAE;QAC7C,QAAQ,EAAE;UACRyC,MAAM,EAAE;QACV,CAAC;QACD,UAAU,EAAE;UACVjC,aAAa,EAAE,MAAM;UACrBM,OAAO,EAAE,IAAI;UACbH,KAAK,EAAEQ,WAAW;UAClBf,MAAM,EAAEe,WAAW;UACnBjB,QAAQ,EAAE,UAAU;UACpBuD,IAAI,EAAE;YACJC,YAAY,EAAE,IAAI;YAClBC,KAAK,EAAE;UACT,CAAC;UACDlD,GAAG,EAAE,CAAC;UACNF,YAAY,EAAEb,KAAK,CAACa,YAAY;UAChCR,UAAU,EAAE,OAAOL,KAAK,CAACM,kBAAkB;QAC7C,CAAC;QACD,CAAC,SAASgB,OAAO,8BAA8B,GAAG;UAChDX,eAAe,EAAEX,KAAK,CAACkE;QACzB,CAAC;QACD,CAAC,WAAW5C,OAAO,oBAAoB,GAAG;UACxCa,SAAS,EAAE;QACb,CAAC;QACD,gBAAgB,EAAE;UAChBU,KAAK,EAAE7C,KAAK,CAACY;QACf,CAAC;QACD,aAAa,EAAE;UACbJ,QAAQ,EAAE,UAAU;UACpBC,MAAM,EAAE,CAAC;UACTR,OAAO,EAAE,cAAc;UACvBgB,KAAK,EAAE,MAAM;UACbP,MAAM,EAAE,MAAM;UACd;UACA,UAAU,EAAE;YACVF,QAAQ,EAAE,UAAU;YACpBO,GAAG,EAAE,CAAC;YACNoD,cAAc,EAAEnE,KAAK,CAAC0D,IAAI,CAACjC,WAAW,CAAC,CAACoC,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;YACtDM,MAAM,EAAEpE,KAAK,CAAC0D,IAAI,CAAClC,eAAe,CAAC,CAAC6C,GAAG,CAAC,CAAC,CAAC,CAAC,CAACP,KAAK,CAAC,CAAC;YACnDQ,iBAAiB,EAAE,CAAC,CAAC;YACrBC,eAAe,EAAE,aAAavE,KAAK,CAACwE,WAAW,EAAE;YACjDpD,OAAO,EAAE;UACX,CAAC;UACD,SAAS,EAAE;YACTZ,QAAQ,EAAE,UAAU;YACpBS,KAAK,EAAEjB,KAAK,CAAC0D,IAAI,CAAC1D,KAAK,CAAC0D,IAAI,CAACjC,WAAW,CAAC,CAACoC,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAACO,GAAG,CAAC,GAAG,CAAC,CAACP,KAAK,CAAC,CAAC;YAC1EpD,MAAM,EAAEV,KAAK,CAAC0D,IAAI,CAACjC,WAAW,CAAC,CAACoC,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;YAC9CW,YAAY,EAAE,aAAazE,KAAK,CAACwE,WAAW,EAAE;YAC9CpD,OAAO,EAAE;UACX;QACF;MACF,CAAC,CAAC;MACF;MACA;MACA,CAAC,GAAGE,OAAO,uBAAuB,GAAGQ,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC;QAC/DvB,QAAQ,EAAE,UAAU;QACpBkE,SAAS,EAAEjD,WAAW;QACtBkD,YAAY,EAAE,CAAC;QACfC,aAAa,EAAE5E,KAAK,CAAC6E,SAAS;QAC9B7C,UAAU,EAAE,aAAa;QACzBnB,YAAY,EAAEb,KAAK,CAACa,YAAY;QAChCkC,MAAM,EAAE,SAAS;QACjB1C,UAAU,EAAE,OAAOL,KAAK,CAAC8E,iBAAiB;MAC5C,CAAC,EAAEvE,qBAAqB,CAACR,SAAS,EAAEC,KAAK,CAAC,CAAC,EAAE;QAC3C,SAAS,EAAE;UACTW,eAAe,EAAEiB;QACnB,CAAC;QACD,CAAC,IAAIN,OAAO,gBAAgB,GAAG;UAC7BuB,KAAK,EAAE7C,KAAK,CAAC+E,iBAAiB;UAC9BpE,eAAe,EAAEgB;QACnB,CAAC;QACD;QACA,CAAC,GAAGL,OAAO,UAAU,GAAG;UACtBrB,OAAO,EAAE,cAAc;UACvBgB,KAAK,EAAEQ,WAAW;UAClBf,MAAM,EAAEe,WAAW;UACnB2B,SAAS,EAAE,QAAQ;UACnBjD,aAAa,EAAE,KAAK;UACpB,SAAS,EAAE;YACTF,OAAO,EAAE;UACX;QACF;MACF,CAAC,CAAC;MACF;MACA,CAAC,GAAGqB,OAAO,iBAAiBA,OAAO,6BAA6B,GAAG;QACjEX,eAAe,EAAE;MACnB,CAAC;MACD,CAAC,GAAGY,WAAW,+BAA+B,GAAG;QAC/CyD,SAAS,EAAE,aAAahF,KAAK,CAACY,YAAY;MAC5C,CAAC;MACD;MACA,aAAa,EAAE;QACb;QACA,CAAC,GAAGU,OAAO,cAAc,GAAG;UAC1Bd,QAAQ,EAAE,UAAU;UACpBE,MAAM,EAAE,MAAM;UACd,UAAU,EAAE;YACVF,QAAQ,EAAE,UAAU;YACpBO,GAAG,EAAE,CAAC;YACNoD,cAAc,EAAEnE,KAAK,CAAC0D,IAAI,CAACjC,WAAW,CAAC,CAACoC,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;YACtDM,MAAM,EAAEpE,KAAK,CAAC0D,IAAI,CAAClC,eAAe,CAAC,CAAC6C,GAAG,CAAC,CAAC,CAAC,CAAC,CAACP,KAAK,CAAC,CAAC;YACnDS,eAAe,EAAE,aAAavE,KAAK,CAACwE,WAAW,EAAE;YACjDpD,OAAO,EAAE;UACX,CAAC;UACD,cAAc,EAAE;YACdnB,OAAO,EAAE;UACX;QACF,CAAC;QACD;QACA,CAAC,GAAGqB,OAAO,WAAW,GAAG;UACvBU,UAAU,EAAE,aAAa;UACzB,aAAa,EAAE;YACb;YACA7B,aAAa,EAAE;UACjB;QACF;MACF,CAAC;MACD,CAAC,GAAGoB,WAAW,cAAcD,OAAO,4BAA4B,GAAG;QACjEP,GAAG,EAAE,iBAAiB;QACtBqD,MAAM,EAAE,iBAAiB;QACzB1D,MAAM,EAAE,GAAGvB,IAAI,CAACa,KAAK,CAAC0D,IAAI,CAACjC,WAAW,CAAC,CAACoC,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;MACzD;IACF,CAAC;EACH,CAAC;AACH,CAAC;AACD;AACA,OAAO,MAAMmB,YAAY,GAAGA,CAAClF,SAAS,EAAEC,KAAK,KAAK;EAChD,MAAMsB,OAAO,GAAG,IAAIvB,SAAS,EAAE;EAC/B,MAAMwB,WAAW,GAAG,GAAGD,OAAO,WAAW;EACzC,MAAME,eAAe,GAAGxB,KAAK,CAAC0D,IAAI,CAAC1D,KAAK,CAAC6E,SAAS,CAAC,CAAChB,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EAClE,MAAMoB,SAAS,GAAGxF,UAAU,CAACM,KAAK,EAAE;IAClCsB,OAAO;IACPC,WAAW;IACXC;EACF,CAAC,CAAC;EACF,OAAO;EACP;EACAH,YAAY,CAACtB,SAAS,EAAEmF,SAAS,CAAC;EAClC;EACAvF,iBAAiB,CAACuF,SAAS,CAAC,CAAC;AAC/B,CAAC;AACD,OAAO,MAAMC,kBAAkB,GAAGnF,KAAK,IAAI;EACzC,MAAM;IACJoF,eAAe;IACfnC,kBAAkB;IAClBoC;EACF,CAAC,GAAGrF,KAAK;EACT,MAAMyB,WAAW,GAAG2D,eAAe;EACnC,OAAO;IACL3D,WAAW;IACXC,UAAU,EAAED,WAAW;IACvBG,WAAW,EAAEqB,kBAAkB;IAC/BD,cAAc,EAAEhD,KAAK,CAACsF,SAAS;IAC/B3D,cAAc,EAAE0D,mBAAmB;IACnCN,iBAAiB,EAAE/E,KAAK,CAACsF;EAC3B,CAAC;AACH,CAAC;AACD,OAAO,MAAMC,qBAAqB,GAAGvF,KAAK,IAAI;EAC5C,MAAM;IACJwF,mBAAmB;IACnB5E;EACF,CAAC,GAAGZ,KAAK;EACT,OAAO8B,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEoD,kBAAkB,CAACnF,KAAK,CAAC,CAAC,EAAE;IACjEyF,0BAA0B,EAAED,mBAAmB;IAC/CE,uBAAuB,EAAE9E;EAC3B,CAAC,CAAC;AACJ,CAAC;AACD,eAAenB,aAAa,CAAC,MAAM,EAAE,CAACO,KAAK,EAAE2F,IAAI,KAAK;EACpD,IAAI;IACF5F;EACF,CAAC,GAAG4F,IAAI;EACR,OAAO,CAAC;IACN,CAAC3F,KAAK,CAAC4F,YAAY,GAAGvG,gBAAgB,CAAC,GAAGU,SAAS,WAAW,EAAEC,KAAK;EACvE,CAAC,EAAEiF,YAAY,CAAClF,SAAS,EAAEC,KAAK,CAAC,EAAER,iBAAiB,CAACQ,KAAK,CAAC,CAAC;AAC9D,CAAC,EAAEuF,qBAAqB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}