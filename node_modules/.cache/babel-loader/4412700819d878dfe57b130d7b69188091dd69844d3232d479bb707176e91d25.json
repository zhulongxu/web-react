{"ast":null,"code":"import { Angle } from '@antv/x6-geometry';\nexport const watermark = function (img, options) {\n  const width = img.width;\n  const height = img.height;\n  const canvas = document.createElement('canvas');\n  canvas.width = width * 3;\n  canvas.height = height * 3;\n  const ctx = canvas.getContext('2d');\n  const angle = options.angle != null ? -options.angle : -20;\n  const radians = Angle.toRad(angle);\n  const stepX = canvas.width / 4;\n  const stepY = canvas.height / 4;\n  for (let i = 0; i < 4; i += 1) {\n    for (let j = 0; j < 4; j += 1) {\n      if ((i + j) % 2 > 0) {\n        ctx.setTransform(1, 0, 0, 1, (2 * i - 1) * stepX, (2 * j - 1) * stepY);\n        ctx.rotate(radians);\n        ctx.drawImage(img, -width / 2, -height / 2, width, height);\n      }\n    }\n  }\n  return canvas;\n};","map":{"version":3,"names":["Angle","watermark","img","options","width","height","canvas","document","createElement","ctx","getContext","angle","radians","toRad","stepX","stepY","i","j","setTransform","rotate","drawImage"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/background/watermark.ts"],"sourcesContent":["import { Angle } from '@antv/x6-geometry'\nimport { Background } from './index'\n\nexport interface WatermarkOptions extends Background.CommonOptions {\n  angle?: number\n}\n\nexport const watermark: Background.Definition<WatermarkOptions> = function (\n  img,\n  options,\n) {\n  const width = img.width\n  const height = img.height\n  const canvas = document.createElement('canvas')\n\n  canvas.width = width * 3\n  canvas.height = height * 3\n\n  const ctx = canvas.getContext('2d')!\n  const angle = options.angle != null ? -options.angle : -20\n  const radians = Angle.toRad(angle)\n  const stepX = canvas.width / 4\n  const stepY = canvas.height / 4\n\n  for (let i = 0; i < 4; i += 1) {\n    for (let j = 0; j < 4; j += 1) {\n      if ((i + j) % 2 > 0) {\n        ctx.setTransform(1, 0, 0, 1, (2 * i - 1) * stepX, (2 * j - 1) * stepY)\n        ctx.rotate(radians)\n        ctx.drawImage(img, -width / 2, -height / 2, width, height)\n      }\n    }\n  }\n\n  return canvas\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,mBAAmB;AAOzC,OAAO,MAAMC,SAAS,GAA4C,SAAAA,CAChEC,GAAG,EACHC,OAAO;EAEP,MAAMC,KAAK,GAAGF,GAAG,CAACE,KAAK;EACvB,MAAMC,MAAM,GAAGH,GAAG,CAACG,MAAM;EACzB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAE/CF,MAAM,CAACF,KAAK,GAAGA,KAAK,GAAG,CAAC;EACxBE,MAAM,CAACD,MAAM,GAAGA,MAAM,GAAG,CAAC;EAE1B,MAAMI,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAE;EACpC,MAAMC,KAAK,GAAGR,OAAO,CAACQ,KAAK,IAAI,IAAI,GAAG,CAACR,OAAO,CAACQ,KAAK,GAAG,CAAC,EAAE;EAC1D,MAAMC,OAAO,GAAGZ,KAAK,CAACa,KAAK,CAACF,KAAK,CAAC;EAClC,MAAMG,KAAK,GAAGR,MAAM,CAACF,KAAK,GAAG,CAAC;EAC9B,MAAMW,KAAK,GAAGT,MAAM,CAACD,MAAM,GAAG,CAAC;EAE/B,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;MAC7B,IAAI,CAACD,CAAC,GAAGC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QACnBR,GAAG,CAACS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAGF,CAAC,GAAG,CAAC,IAAIF,KAAK,EAAE,CAAC,CAAC,GAAGG,CAAC,GAAG,CAAC,IAAIF,KAAK,CAAC;QACtEN,GAAG,CAACU,MAAM,CAACP,OAAO,CAAC;QACnBH,GAAG,CAACW,SAAS,CAAClB,GAAG,EAAE,CAACE,KAAK,GAAG,CAAC,EAAE,CAACC,MAAM,GAAG,CAAC,EAAED,KAAK,EAAEC,MAAM,CAAC;;;;EAKhE,OAAOC,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}