{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { NumberExt, Dom } from '@antv/x6-common';\nimport { ToolsView } from '../../view/tool';\nimport * as Util from './util';\nexport class Boundary extends ToolsView.ToolItem {\n  onRender() {\n    Dom.addClass(this.container, this.prefixClassName('cell-tool-boundary'));\n    if (this.options.attrs) {\n      const _a = this.options.attrs,\n        {\n          class: className\n        } = _a,\n        attrs = __rest(_a, [\"class\"]);\n      Dom.attr(this.container, Dom.kebablizeAttrs(attrs));\n      if (className) {\n        Dom.addClass(this.container, className);\n      }\n    }\n    this.update();\n  }\n  update() {\n    const view = this.cellView;\n    const options = this.options;\n    const {\n      useCellGeometry,\n      rotate\n    } = options;\n    const padding = NumberExt.normalizeSides(options.padding);\n    let bbox = Util.getViewBBox(view, useCellGeometry).moveAndExpand({\n      x: -padding.left,\n      y: -padding.top,\n      width: padding.left + padding.right,\n      height: padding.top + padding.bottom\n    });\n    const cell = view.cell;\n    if (cell.isNode()) {\n      const angle = cell.getAngle();\n      if (angle) {\n        if (rotate) {\n          const origin = cell.getBBox().getCenter();\n          Dom.rotate(this.container, angle, origin.x, origin.y, {\n            absolute: true\n          });\n        } else {\n          bbox = bbox.bbox(angle);\n        }\n      }\n    }\n    Dom.attr(this.container, bbox.toJSON());\n    return this;\n  }\n}\n(function (Boundary) {\n  Boundary.config({\n    name: 'boundary',\n    tagName: 'rect',\n    padding: 10,\n    useCellGeometry: true,\n    attrs: {\n      fill: 'none',\n      stroke: '#333',\n      'stroke-width': 0.5,\n      'stroke-dasharray': '5, 5',\n      'pointer-events': 'none'\n    }\n  });\n})(Boundary || (Boundary = {}));","map":{"version":3,"names":["NumberExt","Dom","ToolsView","Util","Boundary","ToolItem","onRender","addClass","container","prefixClassName","options","attrs","_a","class","className","__rest","attr","kebablizeAttrs","update","view","cellView","useCellGeometry","rotate","padding","normalizeSides","bbox","getViewBBox","moveAndExpand","x","left","y","top","width","right","height","bottom","cell","isNode","angle","getAngle","origin","getBBox","getCenter","absolute","toJSON","config","name","tagName","fill","stroke"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/tool/boundary.ts"],"sourcesContent":["import { NumberExt, Dom } from '@antv/x6-common'\nimport { Attr } from '../attr'\nimport { NodeView } from '../../view/node'\nimport { EdgeView } from '../../view/edge'\nimport { ToolsView } from '../../view/tool'\nimport * as Util from './util'\n\nexport class Boundary extends ToolsView.ToolItem<\n  EdgeView | NodeView,\n  Boundary.Options\n> {\n  protected onRender() {\n    Dom.addClass(this.container, this.prefixClassName('cell-tool-boundary'))\n\n    if (this.options.attrs) {\n      const { class: className, ...attrs } = this.options.attrs\n      Dom.attr(this.container, Dom.kebablizeAttrs(attrs))\n      if (className) {\n        Dom.addClass(this.container, className as string)\n      }\n    }\n    this.update()\n  }\n\n  update() {\n    const view = this.cellView\n    const options = this.options\n    const { useCellGeometry, rotate } = options\n    const padding = NumberExt.normalizeSides(options.padding)\n    let bbox = Util.getViewBBox(view, useCellGeometry).moveAndExpand({\n      x: -padding.left,\n      y: -padding.top,\n      width: padding.left + padding.right,\n      height: padding.top + padding.bottom,\n    })\n\n    const cell = view.cell\n    if (cell.isNode()) {\n      const angle = cell.getAngle()\n      if (angle) {\n        if (rotate) {\n          const origin = cell.getBBox().getCenter()\n          Dom.rotate(this.container, angle, origin.x, origin.y, {\n            absolute: true,\n          })\n        } else {\n          bbox = bbox.bbox(angle)\n        }\n      }\n    }\n\n    Dom.attr(this.container, bbox.toJSON())\n\n    return this\n  }\n}\n\nexport namespace Boundary {\n  export interface Options extends ToolsView.ToolItem.Options {\n    padding?: NumberExt.SideOptions\n    rotate?: boolean\n    useCellGeometry?: boolean\n    attrs?: Attr.SimpleAttrs\n  }\n}\n\nexport namespace Boundary {\n  Boundary.config<Boundary.Options>({\n    name: 'boundary',\n    tagName: 'rect',\n    padding: 10,\n    useCellGeometry: true,\n    attrs: {\n      fill: 'none',\n      stroke: '#333',\n      'stroke-width': 0.5,\n      'stroke-dasharray': '5, 5',\n      'pointer-events': 'none',\n    },\n  })\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAIhD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAO,KAAKC,IAAI,MAAM,QAAQ;AAE9B,OAAM,MAAOC,QAAS,SAAQF,SAAS,CAACG,QAGvC;EACWC,QAAQA,CAAA;IAChBL,GAAG,CAACM,QAAQ,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,eAAe,CAAC,oBAAoB,CAAC,CAAC;IAExE,IAAI,IAAI,CAACC,OAAO,CAACC,KAAK,EAAE;MACtB,MAAMC,EAAA,GAAiC,IAAI,CAACF,OAAO,CAACC,KAAK;QAAnD;UAAEE,KAAK,EAAEC;QAAS,IAAAF,EAAiC;QAA5BD,KAAK,GAAAI,MAAA,CAAAH,EAAA,EAA5B,SAA8B,CAAqB;MACzDX,GAAG,CAACe,IAAI,CAAC,IAAI,CAACR,SAAS,EAAEP,GAAG,CAACgB,cAAc,CAACN,KAAK,CAAC,CAAC;MACnD,IAAIG,SAAS,EAAE;QACbb,GAAG,CAACM,QAAQ,CAAC,IAAI,CAACC,SAAS,EAAEM,SAAmB,CAAC;;;IAGrD,IAAI,CAACI,MAAM,EAAE;EACf;EAEAA,MAAMA,CAAA;IACJ,MAAMC,IAAI,GAAG,IAAI,CAACC,QAAQ;IAC1B,MAAMV,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAM;MAAEW,eAAe;MAAEC;IAAM,CAAE,GAAGZ,OAAO;IAC3C,MAAMa,OAAO,GAAGvB,SAAS,CAACwB,cAAc,CAACd,OAAO,CAACa,OAAO,CAAC;IACzD,IAAIE,IAAI,GAAGtB,IAAI,CAACuB,WAAW,CAACP,IAAI,EAAEE,eAAe,CAAC,CAACM,aAAa,CAAC;MAC/DC,CAAC,EAAE,CAACL,OAAO,CAACM,IAAI;MAChBC,CAAC,EAAE,CAACP,OAAO,CAACQ,GAAG;MACfC,KAAK,EAAET,OAAO,CAACM,IAAI,GAAGN,OAAO,CAACU,KAAK;MACnCC,MAAM,EAAEX,OAAO,CAACQ,GAAG,GAAGR,OAAO,CAACY;KAC/B,CAAC;IAEF,MAAMC,IAAI,GAAGjB,IAAI,CAACiB,IAAI;IACtB,IAAIA,IAAI,CAACC,MAAM,EAAE,EAAE;MACjB,MAAMC,KAAK,GAAGF,IAAI,CAACG,QAAQ,EAAE;MAC7B,IAAID,KAAK,EAAE;QACT,IAAIhB,MAAM,EAAE;UACV,MAAMkB,MAAM,GAAGJ,IAAI,CAACK,OAAO,EAAE,CAACC,SAAS,EAAE;UACzCzC,GAAG,CAACqB,MAAM,CAAC,IAAI,CAACd,SAAS,EAAE8B,KAAK,EAAEE,MAAM,CAACZ,CAAC,EAAEY,MAAM,CAACV,CAAC,EAAE;YACpDa,QAAQ,EAAE;WACX,CAAC;SACH,MAAM;UACLlB,IAAI,GAAGA,IAAI,CAACA,IAAI,CAACa,KAAK,CAAC;;;;IAK7BrC,GAAG,CAACe,IAAI,CAAC,IAAI,CAACR,SAAS,EAAEiB,IAAI,CAACmB,MAAM,EAAE,CAAC;IAEvC,OAAO,IAAI;EACb;;AAYF,WAAiBxC,QAAQ;EACvBA,QAAQ,CAACyC,MAAM,CAAmB;IAChCC,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE,MAAM;IACfxB,OAAO,EAAE,EAAE;IACXF,eAAe,EAAE,IAAI;IACrBV,KAAK,EAAE;MACLqC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE,MAAM;MACd,cAAc,EAAE,GAAG;MACnB,kBAAkB,EAAE,MAAM;MAC1B,gBAAgB,EAAE;;GAErB,CAAC;AACJ,CAAC,EAdgB7C,QAAQ,KAARA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}