{"ast":null,"code":"import { getNumber } from './util';\nexport function invert(args = {}) {\n  const amount = getNumber(args.amount, 1);\n  const amount2 = 1 - amount;\n  return `\n      <filter>\n        <feComponentTransfer>\n          <feFuncR type=\"table\" tableValues=\"${amount} ${amount2}\"/>\n          <feFuncG type=\"table\" tableValues=\"${amount} ${amount2}\"/>\n          <feFuncB type=\"table\" tableValues=\"${amount} ${amount2}\"/>\n        </feComponentTransfer>\n      </filter>\n    `.trim();\n}","map":{"version":3,"names":["getNumber","invert","args","amount","amount2","trim"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/filter/invert.ts"],"sourcesContent":["import { getNumber } from './util'\n\nexport interface InvertArgs {\n  /**\n   * The proportion of the conversion.\n   * A value of `1` is completely inverted.\n   * A value of `0` leaves the input unchanged.\n   *\n   * Default `1`.\n   */\n  amount?: number\n}\n\nexport function invert(args: InvertArgs = {}) {\n  const amount = getNumber(args.amount, 1)\n  const amount2 = 1 - amount\n  return `\n      <filter>\n        <feComponentTransfer>\n          <feFuncR type=\"table\" tableValues=\"${amount} ${amount2}\"/>\n          <feFuncG type=\"table\" tableValues=\"${amount} ${amount2}\"/>\n          <feFuncB type=\"table\" tableValues=\"${amount} ${amount2}\"/>\n        </feComponentTransfer>\n      </filter>\n    `.trim()\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAQ;AAalC,OAAM,SAAUC,MAAMA,CAACC,IAAA,GAAmB,EAAE;EAC1C,MAAMC,MAAM,GAAGH,SAAS,CAACE,IAAI,CAACC,MAAM,EAAE,CAAC,CAAC;EACxC,MAAMC,OAAO,GAAG,CAAC,GAAGD,MAAM;EAC1B,OAAO;;;+CAGsCA,MAAM,IAAIC,OAAO;+CACjBD,MAAM,IAAIC,OAAO;+CACjBD,MAAM,IAAIC,OAAO;;;KAG3D,CAACC,IAAI,EAAE;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}