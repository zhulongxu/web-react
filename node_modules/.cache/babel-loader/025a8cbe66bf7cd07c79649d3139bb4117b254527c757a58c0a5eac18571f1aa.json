{"ast":null,"code":"import { camelCase, startCase, upperCase, lowerCase, upperFirst } from 'lodash-es';\nexport { lowerFirst, upperFirst, camelCase } from 'lodash-es';\n// @see: https://medium.com/@robertsavian/javascript-case-converters-using-lodash-4f2f964091cc\nconst cacheStringFunction = fn => {\n  const cache = Object.create(null);\n  return str => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nexport const kebabCase = cacheStringFunction(s => s.replace(/\\B([A-Z])/g, '-$1').toLowerCase());\nexport const pascalCase = cacheStringFunction(s => startCase(camelCase(s)).replace(/ /g, ''));\nexport const constantCase = cacheStringFunction(s => upperCase(s).replace(/ /g, '_'));\nexport const dotCase = cacheStringFunction(s => lowerCase(s).replace(/ /g, '.'));\nexport const pathCase = cacheStringFunction(s => lowerCase(s).replace(/ /g, '/'));\nexport const sentenceCase = cacheStringFunction(s => upperFirst(lowerCase(s)));\nexport const titleCase = cacheStringFunction(s => startCase(camelCase(s)));","map":{"version":3,"names":["camelCase","startCase","upperCase","lowerCase","upperFirst","lowerFirst","cacheStringFunction","fn","cache","Object","create","str","hit","kebabCase","s","replace","toLowerCase","pascalCase","constantCase","dotCase","pathCase","sentenceCase","titleCase"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6-common@2.0.17/node_modules/@antv/x6-common/src/string/format.ts"],"sourcesContent":["import {\n  camelCase,\n  startCase,\n  upperCase,\n  lowerCase,\n  upperFirst,\n} from 'lodash-es'\n\nexport { lowerFirst, upperFirst, camelCase } from 'lodash-es'\n\n// @see: https://medium.com/@robertsavian/javascript-case-converters-using-lodash-4f2f964091cc\n\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\n  const cache: Record<string, string> = Object.create(null)\n  return ((str: string) => {\n    const hit = cache[str]\n    return hit || (cache[str] = fn(str))\n  }) as any\n}\n\nexport const kebabCase = cacheStringFunction((s: string) =>\n  s.replace(/\\B([A-Z])/g, '-$1').toLowerCase(),\n)\n\nexport const pascalCase = cacheStringFunction((s: string) =>\n  startCase(camelCase(s)).replace(/ /g, ''),\n)\n\nexport const constantCase = cacheStringFunction((s: string) =>\n  upperCase(s).replace(/ /g, '_'),\n)\n\nexport const dotCase = cacheStringFunction((s: string) =>\n  lowerCase(s).replace(/ /g, '.'),\n)\n\nexport const pathCase = cacheStringFunction((s: string) =>\n  lowerCase(s).replace(/ /g, '/'),\n)\n\nexport const sentenceCase = cacheStringFunction((s: string) =>\n  upperFirst(lowerCase(s)),\n)\n\nexport const titleCase = cacheStringFunction((s: string) =>\n  startCase(camelCase(s)),\n)\n"],"mappings":"AAAA,SACEA,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,UAAU,QACL,WAAW;AAElB,SAASC,UAAU,EAAED,UAAU,EAAEJ,SAAS,QAAQ,WAAW;AAE7D;AAEA,MAAMM,mBAAmB,GAAuCC,EAAK,IAAO;EAC1E,MAAMC,KAAK,GAA2BC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EACzD,OAASC,GAAW,IAAI;IACtB,MAAMC,GAAG,GAAGJ,KAAK,CAACG,GAAG,CAAC;IACtB,OAAOC,GAAG,KAAKJ,KAAK,CAACG,GAAG,CAAC,GAAGJ,EAAE,CAACI,GAAG,CAAC,CAAC;EACtC,CAAC;AACH,CAAC;AAED,OAAO,MAAME,SAAS,GAAGP,mBAAmB,CAAEQ,CAAS,IACrDA,CAAC,CAACC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,CAACC,WAAW,EAAE,CAC7C;AAED,OAAO,MAAMC,UAAU,GAAGX,mBAAmB,CAAEQ,CAAS,IACtDb,SAAS,CAACD,SAAS,CAACc,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAC1C;AAED,OAAO,MAAMG,YAAY,GAAGZ,mBAAmB,CAAEQ,CAAS,IACxDZ,SAAS,CAACY,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAChC;AAED,OAAO,MAAMI,OAAO,GAAGb,mBAAmB,CAAEQ,CAAS,IACnDX,SAAS,CAACW,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAChC;AAED,OAAO,MAAMK,QAAQ,GAAGd,mBAAmB,CAAEQ,CAAS,IACpDX,SAAS,CAACW,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAChC;AAED,OAAO,MAAMM,YAAY,GAAGf,mBAAmB,CAAEQ,CAAS,IACxDV,UAAU,CAACD,SAAS,CAACW,CAAC,CAAC,CAAC,CACzB;AAED,OAAO,MAAMQ,SAAS,GAAGhB,mBAAmB,CAAEQ,CAAS,IACrDb,SAAS,CAACD,SAAS,CAACc,CAAC,CAAC,CAAC,CACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}