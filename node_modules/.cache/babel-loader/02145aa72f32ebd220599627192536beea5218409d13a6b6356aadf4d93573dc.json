{"ast":null,"code":"import { getVendorPrefixedName } from './prefix';\nconst numericProps = {\n  animationIterationCount: true,\n  columnCount: true,\n  flexGrow: true,\n  flexShrink: true,\n  fontWeight: true,\n  gridArea: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnStart: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowStart: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  widows: true,\n  zIndex: true\n};\nexport function isCSSVariable(prop) {\n  return /^--/.test(prop);\n}\nexport function computeStyle(elem, prop, isVariable) {\n  const style = window.getComputedStyle(elem, null);\n  return isVariable ? style.getPropertyValue(prop) || undefined : style[prop] || elem.style[prop];\n}\nexport function computeStyleInt(elem, prop) {\n  return parseInt(computeStyle(elem, prop), 10) || 0;\n}\nfunction getSuffixedValue(prop, value) {\n  return !numericProps[prop] && typeof value === 'number' ? `${value}px` : value;\n}\nexport function css(elem, prop, value) {\n  if (typeof prop === 'string') {\n    const isVariable = isCSSVariable(prop);\n    if (!isVariable) {\n      prop = getVendorPrefixedName(prop); // eslint-disable-line\n    }\n    if (value === undefined) {\n      return computeStyle(elem, prop, isVariable);\n    }\n    if (!isVariable) {\n      value = getSuffixedValue(prop, value); // eslint-disable-line\n    }\n    const style = elem.style;\n    if (isVariable) {\n      style.setProperty(prop, value);\n    } else {\n      style[prop] = value;\n    }\n    return;\n  }\n  // eslint-disable-next-line\n  for (const key in prop) {\n    css(elem, key, prop[key]);\n  }\n}","map":{"version":3,"names":["getVendorPrefixedName","numericProps","animationIterationCount","columnCount","flexGrow","flexShrink","fontWeight","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","lineHeight","opacity","order","orphans","widows","zIndex","isCSSVariable","prop","test","computeStyle","elem","isVariable","style","window","getComputedStyle","getPropertyValue","undefined","computeStyleInt","parseInt","getSuffixedValue","value","css","setProperty","key"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6-common@2.0.17/node_modules/@antv/x6-common/src/dom/css.ts"],"sourcesContent":["import { getVendorPrefixedName } from './prefix'\n\nconst numericProps: { [prop: string]: true | undefined } = {\n  animationIterationCount: true,\n  columnCount: true,\n  flexGrow: true,\n  flexShrink: true,\n  fontWeight: true,\n  gridArea: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnStart: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowStart: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  widows: true,\n  zIndex: true,\n}\n\nexport function isCSSVariable(prop: string): boolean {\n  return /^--/.test(prop)\n}\n\nexport function computeStyle(\n  elem: Element,\n  prop: string,\n  isVariable?: boolean,\n) {\n  const style: any = window.getComputedStyle(elem, null)\n  return isVariable\n    ? style.getPropertyValue(prop) || undefined\n    : style[prop] || (elem as any).style[prop]\n}\n\nexport function computeStyleInt(elem: Element, prop: string) {\n  return parseInt(computeStyle(elem, prop), 10) || 0\n}\n\nfunction getSuffixedValue(prop: string, value: number | string) {\n  return !numericProps[prop] && typeof value === 'number' ? `${value}px` : value\n}\n\nexport function css(elem: Element, prop: string): string | undefined\nexport function css(elem: Element, prop: string, value: number | string): void\nexport function css(elem: Element, prop: Record<string, number | string>): void\nexport function css(\n  elem: Element,\n  prop: string | Record<string, number | string>,\n  value?: number | string,\n) {\n  if (typeof prop === 'string') {\n    const isVariable = isCSSVariable(prop)\n\n    if (!isVariable) {\n      prop = getVendorPrefixedName(prop)! // eslint-disable-line\n    }\n\n    if (value === undefined) {\n      return computeStyle(elem, prop, isVariable)\n    }\n\n    if (!isVariable) {\n      value = getSuffixedValue(prop, value) // eslint-disable-line\n    }\n\n    const style = (elem as any).style\n    if (isVariable) {\n      style.setProperty(prop, value)\n    } else {\n      style[prop] = value\n    }\n\n    return\n  }\n\n  // eslint-disable-next-line\n  for (const key in prop) {\n    css(elem, key, prop[key])\n  }\n}\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,UAAU;AAEhD,MAAMC,YAAY,GAAyC;EACzDC,uBAAuB,EAAE,IAAI;EAC7BC,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAE,IAAI;EACdC,UAAU,EAAE,IAAI;EAChBC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,IAAI;EACdC,UAAU,EAAE,IAAI;EAChBC,aAAa,EAAE,IAAI;EACnBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE,IAAI;EACbC,UAAU,EAAE,IAAI;EAChBC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,IAAI;EACbC,MAAM,EAAE,IAAI;EACZC,MAAM,EAAE;CACT;AAED,OAAM,SAAUC,aAAaA,CAACC,IAAY;EACxC,OAAO,KAAK,CAACC,IAAI,CAACD,IAAI,CAAC;AACzB;AAEA,OAAM,SAAUE,YAAYA,CAC1BC,IAAa,EACbH,IAAY,EACZI,UAAoB;EAEpB,MAAMC,KAAK,GAAQC,MAAM,CAACC,gBAAgB,CAACJ,IAAI,EAAE,IAAI,CAAC;EACtD,OAAOC,UAAU,GACbC,KAAK,CAACG,gBAAgB,CAACR,IAAI,CAAC,IAAIS,SAAS,GACzCJ,KAAK,CAACL,IAAI,CAAC,IAAKG,IAAY,CAACE,KAAK,CAACL,IAAI,CAAC;AAC9C;AAEA,OAAM,SAAUU,eAAeA,CAACP,IAAa,EAAEH,IAAY;EACzD,OAAOW,QAAQ,CAACT,YAAY,CAACC,IAAI,EAAEH,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC;AACpD;AAEA,SAASY,gBAAgBA,CAACZ,IAAY,EAAEa,KAAsB;EAC5D,OAAO,CAACjC,YAAY,CAACoB,IAAI,CAAC,IAAI,OAAOa,KAAK,KAAK,QAAQ,GAAG,GAAGA,KAAK,IAAI,GAAGA,KAAK;AAChF;AAKA,OAAM,SAAUC,GAAGA,CACjBX,IAAa,EACbH,IAA8C,EAC9Ca,KAAuB;EAEvB,IAAI,OAAOb,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAMI,UAAU,GAAGL,aAAa,CAACC,IAAI,CAAC;IAEtC,IAAI,CAACI,UAAU,EAAE;MACfJ,IAAI,GAAGrB,qBAAqB,CAACqB,IAAI,CAAE,EAAC;;IAGtC,IAAIa,KAAK,KAAKJ,SAAS,EAAE;MACvB,OAAOP,YAAY,CAACC,IAAI,EAAEH,IAAI,EAAEI,UAAU,CAAC;;IAG7C,IAAI,CAACA,UAAU,EAAE;MACfS,KAAK,GAAGD,gBAAgB,CAACZ,IAAI,EAAEa,KAAK,CAAC,EAAC;;IAGxC,MAAMR,KAAK,GAAIF,IAAY,CAACE,KAAK;IACjC,IAAID,UAAU,EAAE;MACdC,KAAK,CAACU,WAAW,CAACf,IAAI,EAAEa,KAAK,CAAC;KAC/B,MAAM;MACLR,KAAK,CAACL,IAAI,CAAC,GAAGa,KAAK;;IAGrB;;EAGF;EACA,KAAK,MAAMG,GAAG,IAAIhB,IAAI,EAAE;IACtBc,GAAG,CAACX,IAAI,EAAEa,GAAG,EAAEhB,IAAI,CAACgB,GAAG,CAAC,CAAC;;AAE7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}