{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Dom, FunctionExt } from '@antv/x6-common';\nimport { Cell } from '../model';\nimport { Config } from '../config';\nimport { View, Markup } from '../view';\nexport class GraphView extends View {\n  /** Graph's `this.container` is from outer, should not dispose */\n  get disposeContainer() {\n    return false;\n  }\n  get options() {\n    return this.graph.options;\n  }\n  constructor(graph) {\n    super();\n    this.graph = graph;\n    const {\n      selectors,\n      fragment\n    } = Markup.parseJSONMarkup(GraphView.markup);\n    this.background = selectors.background;\n    this.grid = selectors.grid;\n    this.svg = selectors.svg;\n    this.defs = selectors.defs;\n    this.viewport = selectors.viewport;\n    this.primer = selectors.primer;\n    this.stage = selectors.stage;\n    this.decorator = selectors.decorator;\n    this.overlay = selectors.overlay;\n    this.container = this.options.container;\n    this.restore = GraphView.snapshoot(this.container);\n    Dom.addClass(this.container, this.prefixClassName('graph'));\n    Dom.append(this.container, fragment);\n    this.delegateEvents();\n  }\n  delegateEvents() {\n    const ctor = this.constructor;\n    super.delegateEvents(ctor.events);\n    return this;\n  }\n  /**\n   * Guard the specified event. If the event is not interesting, it\n   * returns `true`, otherwise returns `false`.\n   */\n  guard(e, view) {\n    // handled as `contextmenu` type\n    if (e.type === 'mousedown' && e.button === 2) {\n      return true;\n    }\n    if (this.options.guard && this.options.guard(e, view)) {\n      return true;\n    }\n    if (e.data && e.data.guarded !== undefined) {\n      return e.data.guarded;\n    }\n    if (view && view.cell && Cell.isCell(view.cell)) {\n      return false;\n    }\n    if (this.svg === e.target || this.container === e.target || this.svg.contains(e.target)) {\n      return false;\n    }\n    return true;\n  }\n  findView(elem) {\n    return this.graph.findViewByElem(elem);\n  }\n  onDblClick(evt) {\n    if (this.options.preventDefaultDblClick) {\n      evt.preventDefault();\n    }\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n    if (this.guard(e, view)) {\n      return;\n    }\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n    if (view) {\n      view.onDblClick(e, localPoint.x, localPoint.y);\n    } else {\n      this.graph.trigger('blank:dblclick', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n  }\n  onClick(evt) {\n    if (this.getMouseMovedCount(evt) <= this.options.clickThreshold) {\n      const e = this.normalizeEvent(evt);\n      const view = this.findView(e.target);\n      if (this.guard(e, view)) {\n        return;\n      }\n      const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n      if (view) {\n        view.onClick(e, localPoint.x, localPoint.y);\n      } else {\n        this.graph.trigger('blank:click', {\n          e,\n          x: localPoint.x,\n          y: localPoint.y\n        });\n      }\n    }\n  }\n  isPreventDefaultContextMenu(view) {\n    let preventDefaultContextMenu = this.options.preventDefaultContextMenu;\n    if (typeof preventDefaultContextMenu === 'function') {\n      preventDefaultContextMenu = FunctionExt.call(preventDefaultContextMenu, this.graph, {\n        view\n      });\n    }\n    return preventDefaultContextMenu;\n  }\n  onContextMenu(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n    if (this.isPreventDefaultContextMenu(view)) {\n      evt.preventDefault();\n    }\n    if (this.guard(e, view)) {\n      return;\n    }\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n    if (view) {\n      view.onContextMenu(e, localPoint.x, localPoint.y);\n    } else {\n      this.graph.trigger('blank:contextmenu', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n  }\n  delegateDragEvents(e, view) {\n    if (e.data == null) {\n      e.data = {};\n    }\n    this.setEventData(e, {\n      currentView: view || null,\n      mouseMovedCount: 0,\n      startPosition: {\n        x: e.clientX,\n        y: e.clientY\n      }\n    });\n    const ctor = this.constructor;\n    this.delegateDocumentEvents(ctor.documentEvents, e.data);\n    this.undelegateEvents();\n  }\n  getMouseMovedCount(e) {\n    const data = this.getEventData(e);\n    return data.mouseMovedCount || 0;\n  }\n  onMouseDown(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n    if (this.guard(e, view)) {\n      return;\n    }\n    if (this.options.preventDefaultMouseDown) {\n      evt.preventDefault();\n    }\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n    if (view) {\n      view.onMouseDown(e, localPoint.x, localPoint.y);\n    } else {\n      if (this.options.preventDefaultBlankAction && ['touchstart'].includes(e.type)) {\n        evt.preventDefault();\n      }\n      this.graph.trigger('blank:mousedown', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n    this.delegateDragEvents(e, view);\n  }\n  onMouseMove(evt) {\n    const data = this.getEventData(evt);\n    const startPosition = data.startPosition;\n    if (startPosition && startPosition.x === evt.clientX && startPosition.y === evt.clientY) {\n      return;\n    }\n    if (data.mouseMovedCount == null) {\n      data.mouseMovedCount = 0;\n    }\n    data.mouseMovedCount += 1;\n    const mouseMovedCount = data.mouseMovedCount;\n    if (mouseMovedCount <= this.options.moveThreshold) {\n      return;\n    }\n    const e = this.normalizeEvent(evt);\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n    const view = data.currentView;\n    if (view) {\n      view.onMouseMove(e, localPoint.x, localPoint.y);\n    } else {\n      this.graph.trigger('blank:mousemove', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n    this.setEventData(e, data);\n  }\n  onMouseUp(e) {\n    this.undelegateDocumentEvents();\n    const normalized = this.normalizeEvent(e);\n    const localPoint = this.graph.snapToGrid(normalized.clientX, normalized.clientY);\n    const data = this.getEventData(e);\n    const view = data.currentView;\n    if (view) {\n      view.onMouseUp(normalized, localPoint.x, localPoint.y);\n    } else {\n      this.graph.trigger('blank:mouseup', {\n        e: normalized,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n    if (!e.isPropagationStopped()) {\n      const ev = new Dom.EventObject(e, {\n        type: 'click',\n        data: e.data\n      });\n      this.onClick(ev);\n    }\n    e.stopImmediatePropagation();\n    this.delegateEvents();\n  }\n  onMouseOver(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n    if (this.guard(e, view)) {\n      return;\n    }\n    if (view) {\n      view.onMouseOver(e);\n    } else {\n      // prevent border of paper from triggering this\n      if (this.container === e.target) {\n        return;\n      }\n      this.graph.trigger('blank:mouseover', {\n        e\n      });\n    }\n  }\n  onMouseOut(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n    if (this.guard(e, view)) {\n      return;\n    }\n    if (view) {\n      view.onMouseOut(e);\n    } else {\n      if (this.container === e.target) {\n        return;\n      }\n      this.graph.trigger('blank:mouseout', {\n        e\n      });\n    }\n  }\n  onMouseEnter(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n    if (this.guard(e, view)) {\n      return;\n    }\n    const relatedView = this.graph.findViewByElem(e.relatedTarget);\n    if (view) {\n      if (relatedView === view) {\n        // mouse moved from tool to view\n        return;\n      }\n      view.onMouseEnter(e);\n    } else {\n      if (relatedView) {\n        return;\n      }\n      this.graph.trigger('graph:mouseenter', {\n        e\n      });\n    }\n  }\n  onMouseLeave(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n    if (this.guard(e, view)) {\n      return;\n    }\n    const relatedView = this.graph.findViewByElem(e.relatedTarget);\n    if (view) {\n      if (relatedView === view) {\n        // mouse moved from view to tool\n        return;\n      }\n      view.onMouseLeave(e);\n    } else {\n      if (relatedView) {\n        return;\n      }\n      this.graph.trigger('graph:mouseleave', {\n        e\n      });\n    }\n  }\n  onMouseWheel(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n    if (this.guard(e, view)) {\n      return;\n    }\n    const originalEvent = e.originalEvent;\n    const localPoint = this.graph.snapToGrid(originalEvent.clientX, originalEvent.clientY);\n    const delta = Math.max(-1, Math.min(1, originalEvent.wheelDelta || -originalEvent.detail));\n    if (view) {\n      view.onMouseWheel(e, localPoint.x, localPoint.y, delta);\n    } else {\n      this.graph.trigger('blank:mousewheel', {\n        e,\n        delta,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n  }\n  onCustomEvent(evt) {\n    const elem = evt.currentTarget;\n    const event = elem.getAttribute('event') || elem.getAttribute('data-event');\n    if (event) {\n      const view = this.findView(elem);\n      if (view) {\n        const e = this.normalizeEvent(evt);\n        if (this.guard(e, view)) {\n          return;\n        }\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        view.onCustomEvent(e, event, localPoint.x, localPoint.y);\n      }\n    }\n  }\n  handleMagnetEvent(evt, handler) {\n    const magnetElem = evt.currentTarget;\n    const magnetValue = magnetElem.getAttribute('magnet');\n    if (magnetValue && magnetValue.toLowerCase() !== 'false') {\n      const view = this.findView(magnetElem);\n      if (view) {\n        const e = this.normalizeEvent(evt);\n        if (this.guard(e, view)) {\n          return;\n        }\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        FunctionExt.call(handler, this.graph, view, e, magnetElem, localPoint.x, localPoint.y);\n      }\n    }\n  }\n  onMagnetMouseDown(e) {\n    this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n      view.onMagnetMouseDown(e, magnet, x, y);\n    });\n  }\n  onMagnetDblClick(e) {\n    this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n      view.onMagnetDblClick(e, magnet, x, y);\n    });\n  }\n  onMagnetContextMenu(e) {\n    const view = this.findView(e.target);\n    if (this.isPreventDefaultContextMenu(view)) {\n      e.preventDefault();\n    }\n    this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n      view.onMagnetContextMenu(e, magnet, x, y);\n    });\n  }\n  onLabelMouseDown(evt) {\n    const labelNode = evt.currentTarget;\n    const view = this.findView(labelNode);\n    if (view) {\n      const e = this.normalizeEvent(evt);\n      if (this.guard(e, view)) {\n        return;\n      }\n      const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n      view.onLabelMouseDown(e, localPoint.x, localPoint.y);\n    }\n  }\n  onImageDragStart() {\n    // This is the only way to prevent image dragging in Firefox that works.\n    // Setting -moz-user-select: none, draggable=\"false\" attribute or\n    // user-drag: none didn't help.\n    return false;\n  }\n  dispose() {\n    this.undelegateEvents();\n    this.undelegateDocumentEvents();\n    this.restore();\n    this.restore = () => {};\n  }\n}\n__decorate([View.dispose()], GraphView.prototype, \"dispose\", null);\n(function (GraphView) {\n  const prefixCls = `${Config.prefixCls}-graph`;\n  GraphView.markup = [{\n    ns: Dom.ns.xhtml,\n    tagName: 'div',\n    selector: 'background',\n    className: `${prefixCls}-background`\n  }, {\n    ns: Dom.ns.xhtml,\n    tagName: 'div',\n    selector: 'grid',\n    className: `${prefixCls}-grid`\n  }, {\n    ns: Dom.ns.svg,\n    tagName: 'svg',\n    selector: 'svg',\n    className: `${prefixCls}-svg`,\n    attrs: {\n      width: '100%',\n      height: '100%',\n      'xmlns:xlink': Dom.ns.xlink\n    },\n    children: [{\n      tagName: 'defs',\n      selector: 'defs'\n    }, {\n      tagName: 'g',\n      selector: 'viewport',\n      className: `${prefixCls}-svg-viewport`,\n      children: [{\n        tagName: 'g',\n        selector: 'primer',\n        className: `${prefixCls}-svg-primer`\n      }, {\n        tagName: 'g',\n        selector: 'stage',\n        className: `${prefixCls}-svg-stage`\n      }, {\n        tagName: 'g',\n        selector: 'decorator',\n        className: `${prefixCls}-svg-decorator`\n      }, {\n        tagName: 'g',\n        selector: 'overlay',\n        className: `${prefixCls}-svg-overlay`\n      }]\n    }]\n  }];\n  function snapshoot(elem) {\n    const cloned = elem.cloneNode();\n    elem.childNodes.forEach(child => cloned.appendChild(child));\n    return () => {\n      // remove all children\n      Dom.empty(elem);\n      // remove all attributes\n      while (elem.attributes.length > 0) {\n        elem.removeAttribute(elem.attributes[0].name);\n      }\n      // restore attributes\n      for (let i = 0, l = cloned.attributes.length; i < l; i += 1) {\n        const attr = cloned.attributes[i];\n        elem.setAttribute(attr.name, attr.value);\n      }\n      // restore children\n      cloned.childNodes.forEach(child => elem.appendChild(child));\n    };\n  }\n  GraphView.snapshoot = snapshoot;\n})(GraphView || (GraphView = {}));\n(function (GraphView) {\n  const prefixCls = Config.prefixCls;\n  GraphView.events = {\n    dblclick: 'onDblClick',\n    contextmenu: 'onContextMenu',\n    touchstart: 'onMouseDown',\n    mousedown: 'onMouseDown',\n    mouseover: 'onMouseOver',\n    mouseout: 'onMouseOut',\n    mouseenter: 'onMouseEnter',\n    mouseleave: 'onMouseLeave',\n    mousewheel: 'onMouseWheel',\n    DOMMouseScroll: 'onMouseWheel',\n    [`mouseenter  .${prefixCls}-cell`]: 'onMouseEnter',\n    [`mouseleave  .${prefixCls}-cell`]: 'onMouseLeave',\n    [`mouseenter  .${prefixCls}-cell-tools`]: 'onMouseEnter',\n    [`mouseleave  .${prefixCls}-cell-tools`]: 'onMouseLeave',\n    [`mousedown   .${prefixCls}-cell [event]`]: 'onCustomEvent',\n    [`touchstart  .${prefixCls}-cell [event]`]: 'onCustomEvent',\n    [`mousedown   .${prefixCls}-cell [data-event]`]: 'onCustomEvent',\n    [`touchstart  .${prefixCls}-cell [data-event]`]: 'onCustomEvent',\n    [`dblclick    .${prefixCls}-cell [magnet]`]: 'onMagnetDblClick',\n    [`contextmenu .${prefixCls}-cell [magnet]`]: 'onMagnetContextMenu',\n    [`mousedown   .${prefixCls}-cell [magnet]`]: 'onMagnetMouseDown',\n    [`touchstart  .${prefixCls}-cell [magnet]`]: 'onMagnetMouseDown',\n    [`dblclick    .${prefixCls}-cell [data-magnet]`]: 'onMagnetDblClick',\n    [`contextmenu .${prefixCls}-cell [data-magnet]`]: 'onMagnetContextMenu',\n    [`mousedown   .${prefixCls}-cell [data-magnet]`]: 'onMagnetMouseDown',\n    [`touchstart  .${prefixCls}-cell [data-magnet]`]: 'onMagnetMouseDown',\n    [`dragstart   .${prefixCls}-cell image`]: 'onImageDragStart',\n    [`mousedown   .${prefixCls}-edge .${prefixCls}-edge-label`]: 'onLabelMouseDown',\n    [`touchstart  .${prefixCls}-edge .${prefixCls}-edge-label`]: 'onLabelMouseDown'\n  };\n  GraphView.documentEvents = {\n    mousemove: 'onMouseMove',\n    touchmove: 'onMouseMove',\n    mouseup: 'onMouseUp',\n    touchend: 'onMouseUp',\n    touchcancel: 'onMouseUp'\n  };\n})(GraphView || (GraphView = {}));","map":{"version":3,"names":["Dom","FunctionExt","Cell","Config","View","Markup","GraphView","disposeContainer","options","graph","constructor","selectors","fragment","parseJSONMarkup","markup","background","grid","svg","defs","viewport","primer","stage","decorator","overlay","container","restore","snapshoot","addClass","prefixClassName","append","delegateEvents","ctor","events","guard","e","view","type","button","data","guarded","undefined","cell","isCell","target","contains","findView","elem","findViewByElem","onDblClick","evt","preventDefaultDblClick","preventDefault","normalizeEvent","localPoint","snapToGrid","clientX","clientY","x","y","trigger","onClick","getMouseMovedCount","clickThreshold","isPreventDefaultContextMenu","preventDefaultContextMenu","call","onContextMenu","delegateDragEvents","setEventData","currentView","mouseMovedCount","startPosition","delegateDocumentEvents","documentEvents","undelegateEvents","getEventData","onMouseDown","preventDefaultMouseDown","preventDefaultBlankAction","includes","onMouseMove","moveThreshold","onMouseUp","undelegateDocumentEvents","normalized","isPropagationStopped","ev","EventObject","stopImmediatePropagation","onMouseOver","onMouseOut","onMouseEnter","relatedView","relatedTarget","onMouseLeave","onMouseWheel","originalEvent","delta","Math","max","min","wheelDelta","detail","onCustomEvent","currentTarget","event","getAttribute","handleMagnetEvent","handler","magnetElem","magnetValue","toLowerCase","onMagnetMouseDown","magnet","onMagnetDblClick","onMagnetContextMenu","onLabelMouseDown","labelNode","onImageDragStart","dispose","__decorate","prefixCls","ns","xhtml","tagName","selector","className","attrs","width","height","xlink","children","cloned","cloneNode","childNodes","forEach","child","appendChild","empty","attributes","length","removeAttribute","name","i","l","attr","setAttribute","value","dblclick","contextmenu","touchstart","mousedown","mouseover","mouseout","mouseenter","mouseleave","mousewheel","DOMMouseScroll","mousemove","touchmove","mouseup","touchend","touchcancel"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/graph/view.ts"],"sourcesContent":["import { Dom, FunctionExt } from '@antv/x6-common'\nimport { Cell } from '../model'\nimport { Config } from '../config'\nimport { View, Markup, CellView } from '../view'\nimport { Graph } from '../graph'\n\nexport class GraphView extends View {\n  public readonly container: HTMLElement\n  public readonly background: HTMLDivElement\n  public readonly grid: HTMLDivElement\n  public readonly svg: SVGSVGElement\n  public readonly defs: SVGDefsElement\n  public readonly viewport: SVGGElement\n  public readonly primer: SVGGElement\n  public readonly stage: SVGGElement\n  public readonly decorator: SVGGElement\n  public readonly overlay: SVGGElement\n\n  private restore: () => void\n\n  /** Graph's `this.container` is from outer, should not dispose */\n  protected get disposeContainer(): boolean {\n    return false\n  }\n\n  protected get options() {\n    return this.graph.options\n  }\n\n  constructor(protected readonly graph: Graph) {\n    super()\n\n    const { selectors, fragment } = Markup.parseJSONMarkup(GraphView.markup)\n    this.background = selectors.background as HTMLDivElement\n    this.grid = selectors.grid as HTMLDivElement\n    this.svg = selectors.svg as SVGSVGElement\n    this.defs = selectors.defs as SVGDefsElement\n    this.viewport = selectors.viewport as SVGGElement\n    this.primer = selectors.primer as SVGGElement\n    this.stage = selectors.stage as SVGGElement\n    this.decorator = selectors.decorator as SVGGElement\n    this.overlay = selectors.overlay as SVGGElement\n    this.container = this.options.container\n    this.restore = GraphView.snapshoot(this.container)\n\n    Dom.addClass(this.container, this.prefixClassName('graph'))\n    Dom.append(this.container, fragment)\n\n    this.delegateEvents()\n  }\n\n  delegateEvents() {\n    const ctor = this.constructor as typeof GraphView\n    super.delegateEvents(ctor.events)\n    return this\n  }\n\n  /**\n   * Guard the specified event. If the event is not interesting, it\n   * returns `true`, otherwise returns `false`.\n   */\n  guard(e: Dom.EventObject, view?: CellView | null) {\n    // handled as `contextmenu` type\n    if (e.type === 'mousedown' && e.button === 2) {\n      return true\n    }\n\n    if (this.options.guard && this.options.guard(e, view)) {\n      return true\n    }\n\n    if (e.data && e.data.guarded !== undefined) {\n      return e.data.guarded\n    }\n\n    if (view && view.cell && Cell.isCell(view.cell)) {\n      return false\n    }\n\n    if (\n      this.svg === e.target ||\n      this.container === e.target ||\n      this.svg.contains(e.target)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  protected findView(elem: Element) {\n    return this.graph.findViewByElem(elem)\n  }\n\n  protected onDblClick(evt: Dom.DoubleClickEvent) {\n    if (this.options.preventDefaultDblClick) {\n      evt.preventDefault()\n    }\n\n    const e = this.normalizeEvent(evt)\n    const view = this.findView(e.target)\n\n    if (this.guard(e, view)) {\n      return\n    }\n\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY)\n\n    if (view) {\n      view.onDblClick(e, localPoint.x, localPoint.y)\n    } else {\n      this.graph.trigger('blank:dblclick', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y,\n      })\n    }\n  }\n\n  protected onClick(evt: Dom.ClickEvent) {\n    if (this.getMouseMovedCount(evt) <= this.options.clickThreshold) {\n      const e = this.normalizeEvent(evt)\n      const view = this.findView(e.target)\n      if (this.guard(e, view)) {\n        return\n      }\n\n      const localPoint = this.graph.snapToGrid(e.clientX, e.clientY)\n      if (view) {\n        view.onClick(e, localPoint.x, localPoint.y)\n      } else {\n        this.graph.trigger('blank:click', {\n          e,\n          x: localPoint.x,\n          y: localPoint.y,\n        })\n      }\n    }\n  }\n\n  protected isPreventDefaultContextMenu(view: CellView | null) {\n    let preventDefaultContextMenu = this.options.preventDefaultContextMenu\n    if (typeof preventDefaultContextMenu === 'function') {\n      preventDefaultContextMenu = FunctionExt.call(\n        preventDefaultContextMenu,\n        this.graph,\n        { view },\n      )\n    }\n\n    return preventDefaultContextMenu\n  }\n\n  protected onContextMenu(evt: Dom.ContextMenuEvent) {\n    const e = this.normalizeEvent(evt)\n    const view = this.findView(e.target)\n\n    if (this.isPreventDefaultContextMenu(view)) {\n      evt.preventDefault()\n    }\n\n    if (this.guard(e, view)) {\n      return\n    }\n\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY)\n\n    if (view) {\n      view.onContextMenu(e, localPoint.x, localPoint.y)\n    } else {\n      this.graph.trigger('blank:contextmenu', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y,\n      })\n    }\n  }\n\n  delegateDragEvents(e: Dom.MouseDownEvent, view: CellView | null) {\n    if (e.data == null) {\n      e.data = {}\n    }\n    this.setEventData<EventData.Moving>(e, {\n      currentView: view || null,\n      mouseMovedCount: 0,\n      startPosition: {\n        x: e.clientX,\n        y: e.clientY,\n      },\n    })\n    const ctor = this.constructor as typeof GraphView\n    this.delegateDocumentEvents(ctor.documentEvents, e.data)\n    this.undelegateEvents()\n  }\n\n  getMouseMovedCount(e: Dom.EventObject) {\n    const data = this.getEventData<EventData.Moving>(e)\n    return data.mouseMovedCount || 0\n  }\n\n  protected onMouseDown(evt: Dom.MouseDownEvent) {\n    const e = this.normalizeEvent(evt)\n    const view = this.findView(e.target)\n    if (this.guard(e, view)) {\n      return\n    }\n\n    if (this.options.preventDefaultMouseDown) {\n      evt.preventDefault()\n    }\n\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY)\n\n    if (view) {\n      view.onMouseDown(e, localPoint.x, localPoint.y)\n    } else {\n      if (\n        this.options.preventDefaultBlankAction &&\n        ['touchstart'].includes(e.type)\n      ) {\n        evt.preventDefault()\n      }\n\n      this.graph.trigger('blank:mousedown', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y,\n      })\n    }\n\n    this.delegateDragEvents(e, view)\n  }\n\n  protected onMouseMove(evt: Dom.MouseMoveEvent) {\n    const data = this.getEventData<EventData.Moving>(evt)\n\n    const startPosition = data.startPosition\n    if (\n      startPosition &&\n      startPosition.x === evt.clientX &&\n      startPosition.y === evt.clientY\n    ) {\n      return\n    }\n\n    if (data.mouseMovedCount == null) {\n      data.mouseMovedCount = 0\n    }\n    data.mouseMovedCount += 1\n    const mouseMovedCount = data.mouseMovedCount\n    if (mouseMovedCount <= this.options.moveThreshold) {\n      return\n    }\n\n    const e = this.normalizeEvent(evt)\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY)\n\n    const view = data.currentView\n    if (view) {\n      view.onMouseMove(e, localPoint.x, localPoint.y)\n    } else {\n      this.graph.trigger('blank:mousemove', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y,\n      })\n    }\n\n    this.setEventData(e, data)\n  }\n\n  protected onMouseUp(e: Dom.MouseUpEvent) {\n    this.undelegateDocumentEvents()\n\n    const normalized = this.normalizeEvent(e)\n    const localPoint = this.graph.snapToGrid(\n      normalized.clientX,\n      normalized.clientY,\n    )\n    const data = this.getEventData<EventData.Moving>(e)\n    const view = data.currentView\n    if (view) {\n      view.onMouseUp(normalized, localPoint.x, localPoint.y)\n    } else {\n      this.graph.trigger('blank:mouseup', {\n        e: normalized,\n        x: localPoint.x,\n        y: localPoint.y,\n      })\n    }\n\n    if (!e.isPropagationStopped()) {\n      const ev = new Dom.EventObject(e as any, {\n        type: 'click',\n        data: e.data,\n      }) as Dom.ClickEvent\n      this.onClick(ev)\n    }\n\n    e.stopImmediatePropagation()\n\n    this.delegateEvents()\n  }\n\n  protected onMouseOver(evt: Dom.MouseOverEvent) {\n    const e = this.normalizeEvent(evt)\n    const view = this.findView(e.target)\n    if (this.guard(e, view)) {\n      return\n    }\n\n    if (view) {\n      view.onMouseOver(e)\n    } else {\n      // prevent border of paper from triggering this\n      if (this.container === e.target) {\n        return\n      }\n      this.graph.trigger('blank:mouseover', { e })\n    }\n  }\n\n  protected onMouseOut(evt: Dom.MouseOutEvent) {\n    const e = this.normalizeEvent(evt)\n    const view = this.findView(e.target)\n\n    if (this.guard(e, view)) {\n      return\n    }\n\n    if (view) {\n      view.onMouseOut(e)\n    } else {\n      if (this.container === e.target) {\n        return\n      }\n      this.graph.trigger('blank:mouseout', { e })\n    }\n  }\n\n  protected onMouseEnter(evt: Dom.MouseEnterEvent) {\n    const e = this.normalizeEvent(evt)\n    const view = this.findView(e.target)\n    if (this.guard(e, view)) {\n      return\n    }\n\n    const relatedView = this.graph.findViewByElem(e.relatedTarget as Element)\n    if (view) {\n      if (relatedView === view) {\n        // mouse moved from tool to view\n        return\n      }\n      view.onMouseEnter(e)\n    } else {\n      if (relatedView) {\n        return\n      }\n      this.graph.trigger('graph:mouseenter', { e })\n    }\n  }\n\n  protected onMouseLeave(evt: Dom.MouseLeaveEvent) {\n    const e = this.normalizeEvent(evt)\n    const view = this.findView(e.target)\n    if (this.guard(e, view)) {\n      return\n    }\n\n    const relatedView = this.graph.findViewByElem(e.relatedTarget as Element)\n\n    if (view) {\n      if (relatedView === view) {\n        // mouse moved from view to tool\n        return\n      }\n      view.onMouseLeave(e)\n    } else {\n      if (relatedView) {\n        return\n      }\n      this.graph.trigger('graph:mouseleave', { e })\n    }\n  }\n\n  protected onMouseWheel(evt: Dom.EventObject) {\n    const e = this.normalizeEvent(evt)\n    const view = this.findView(e.target)\n    if (this.guard(e, view)) {\n      return\n    }\n\n    const originalEvent = e.originalEvent as WheelEvent\n    const localPoint = this.graph.snapToGrid(\n      originalEvent.clientX,\n      originalEvent.clientY,\n    )\n    const delta = Math.max(\n      -1,\n      Math.min(1, (originalEvent as any).wheelDelta || -originalEvent.detail),\n    )\n\n    if (view) {\n      view.onMouseWheel(e, localPoint.x, localPoint.y, delta)\n    } else {\n      this.graph.trigger('blank:mousewheel', {\n        e,\n        delta,\n        x: localPoint.x,\n        y: localPoint.y,\n      })\n    }\n  }\n\n  protected onCustomEvent(evt: Dom.MouseDownEvent) {\n    const elem = evt.currentTarget\n    const event = elem.getAttribute('event') || elem.getAttribute('data-event')\n    if (event) {\n      const view = this.findView(elem)\n      if (view) {\n        const e = this.normalizeEvent(evt)\n        if (this.guard(e, view)) {\n          return\n        }\n\n        const localPoint = this.graph.snapToGrid(\n          e.clientX as number,\n          e.clientY as number,\n        )\n        view.onCustomEvent(e, event, localPoint.x, localPoint.y)\n      }\n    }\n  }\n\n  protected handleMagnetEvent<T extends Dom.EventObject>(\n    evt: T,\n    handler: (\n      this: Graph,\n      view: CellView,\n      e: T,\n      magnet: Element,\n      x: number,\n      y: number,\n    ) => void,\n  ) {\n    const magnetElem = evt.currentTarget\n    const magnetValue = magnetElem.getAttribute('magnet') as string\n    if (magnetValue && magnetValue.toLowerCase() !== 'false') {\n      const view = this.findView(magnetElem)\n      if (view) {\n        const e = this.normalizeEvent(evt)\n        if (this.guard(e, view)) {\n          return\n        }\n        const localPoint = this.graph.snapToGrid(\n          e.clientX as number,\n          e.clientY as number,\n        )\n        FunctionExt.call(\n          handler,\n          this.graph,\n          view,\n          e,\n          magnetElem,\n          localPoint.x,\n          localPoint.y,\n        )\n      }\n    }\n  }\n\n  protected onMagnetMouseDown(e: Dom.MouseDownEvent) {\n    this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n      view.onMagnetMouseDown(e, magnet, x, y)\n    })\n  }\n\n  protected onMagnetDblClick(e: Dom.DoubleClickEvent) {\n    this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n      view.onMagnetDblClick(e, magnet, x, y)\n    })\n  }\n\n  protected onMagnetContextMenu(e: Dom.ContextMenuEvent) {\n    const view = this.findView(e.target)\n    if (this.isPreventDefaultContextMenu(view)) {\n      e.preventDefault()\n    }\n\n    this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n      view.onMagnetContextMenu(e, magnet, x, y)\n    })\n  }\n\n  protected onLabelMouseDown(evt: Dom.MouseDownEvent) {\n    const labelNode = evt.currentTarget\n    const view = this.findView(labelNode)\n    if (view) {\n      const e = this.normalizeEvent(evt)\n      if (this.guard(e, view)) {\n        return\n      }\n\n      const localPoint = this.graph.snapToGrid(e.clientX, e.clientY)\n      view.onLabelMouseDown(e, localPoint.x, localPoint.y)\n    }\n  }\n\n  protected onImageDragStart() {\n    // This is the only way to prevent image dragging in Firefox that works.\n    // Setting -moz-user-select: none, draggable=\"false\" attribute or\n    // user-drag: none didn't help.\n    return false\n  }\n\n  @View.dispose()\n  dispose() {\n    this.undelegateEvents()\n    this.undelegateDocumentEvents()\n    this.restore()\n    this.restore = () => {}\n  }\n}\n\nexport namespace GraphView {\n  export type SortType = 'none' | 'approx' | 'exact'\n}\n\nexport namespace GraphView {\n  const prefixCls = `${Config.prefixCls}-graph`\n\n  export const markup: Markup.JSONMarkup[] = [\n    {\n      ns: Dom.ns.xhtml,\n      tagName: 'div',\n      selector: 'background',\n      className: `${prefixCls}-background`,\n    },\n    {\n      ns: Dom.ns.xhtml,\n      tagName: 'div',\n      selector: 'grid',\n      className: `${prefixCls}-grid`,\n    },\n    {\n      ns: Dom.ns.svg,\n      tagName: 'svg',\n      selector: 'svg',\n      className: `${prefixCls}-svg`,\n      attrs: {\n        width: '100%',\n        height: '100%',\n        'xmlns:xlink': Dom.ns.xlink,\n      },\n      children: [\n        {\n          tagName: 'defs',\n          selector: 'defs',\n        },\n        {\n          tagName: 'g',\n          selector: 'viewport',\n          className: `${prefixCls}-svg-viewport`,\n          children: [\n            {\n              tagName: 'g',\n              selector: 'primer',\n              className: `${prefixCls}-svg-primer`,\n            },\n            {\n              tagName: 'g',\n              selector: 'stage',\n              className: `${prefixCls}-svg-stage`,\n            },\n            {\n              tagName: 'g',\n              selector: 'decorator',\n              className: `${prefixCls}-svg-decorator`,\n            },\n            {\n              tagName: 'g',\n              selector: 'overlay',\n              className: `${prefixCls}-svg-overlay`,\n            },\n          ],\n        },\n      ],\n    },\n  ]\n\n  export function snapshoot(elem: Element) {\n    const cloned = elem.cloneNode() as Element\n    elem.childNodes.forEach((child) => cloned.appendChild(child))\n\n    return () => {\n      // remove all children\n      Dom.empty(elem)\n\n      // remove all attributes\n      while (elem.attributes.length > 0) {\n        elem.removeAttribute(elem.attributes[0].name)\n      }\n\n      // restore attributes\n      for (let i = 0, l = cloned.attributes.length; i < l; i += 1) {\n        const attr = cloned.attributes[i]\n        elem.setAttribute(attr.name, attr.value)\n      }\n\n      // restore children\n      cloned.childNodes.forEach((child) => elem.appendChild(child))\n    }\n  }\n}\n\nexport namespace GraphView {\n  const prefixCls = Config.prefixCls\n\n  export const events = {\n    dblclick: 'onDblClick',\n    contextmenu: 'onContextMenu',\n    touchstart: 'onMouseDown',\n    mousedown: 'onMouseDown',\n    mouseover: 'onMouseOver',\n    mouseout: 'onMouseOut',\n    mouseenter: 'onMouseEnter',\n    mouseleave: 'onMouseLeave',\n    mousewheel: 'onMouseWheel',\n    DOMMouseScroll: 'onMouseWheel',\n    [`mouseenter  .${prefixCls}-cell`]: 'onMouseEnter',\n    [`mouseleave  .${prefixCls}-cell`]: 'onMouseLeave',\n    [`mouseenter  .${prefixCls}-cell-tools`]: 'onMouseEnter',\n    [`mouseleave  .${prefixCls}-cell-tools`]: 'onMouseLeave',\n    [`mousedown   .${prefixCls}-cell [event]`]: 'onCustomEvent',\n    [`touchstart  .${prefixCls}-cell [event]`]: 'onCustomEvent',\n    [`mousedown   .${prefixCls}-cell [data-event]`]: 'onCustomEvent',\n    [`touchstart  .${prefixCls}-cell [data-event]`]: 'onCustomEvent',\n    [`dblclick    .${prefixCls}-cell [magnet]`]: 'onMagnetDblClick',\n    [`contextmenu .${prefixCls}-cell [magnet]`]: 'onMagnetContextMenu',\n    [`mousedown   .${prefixCls}-cell [magnet]`]: 'onMagnetMouseDown',\n    [`touchstart  .${prefixCls}-cell [magnet]`]: 'onMagnetMouseDown',\n    [`dblclick    .${prefixCls}-cell [data-magnet]`]: 'onMagnetDblClick',\n    [`contextmenu .${prefixCls}-cell [data-magnet]`]: 'onMagnetContextMenu',\n    [`mousedown   .${prefixCls}-cell [data-magnet]`]: 'onMagnetMouseDown',\n    [`touchstart  .${prefixCls}-cell [data-magnet]`]: 'onMagnetMouseDown',\n    [`dragstart   .${prefixCls}-cell image`]: 'onImageDragStart',\n    [`mousedown   .${prefixCls}-edge .${prefixCls}-edge-label`]:\n      'onLabelMouseDown',\n    [`touchstart  .${prefixCls}-edge .${prefixCls}-edge-label`]:\n      'onLabelMouseDown',\n  }\n\n  export const documentEvents = {\n    mousemove: 'onMouseMove',\n    touchmove: 'onMouseMove',\n    mouseup: 'onMouseUp',\n    touchend: 'onMouseUp',\n    touchcancel: 'onMouseUp',\n  }\n}\n\nnamespace EventData {\n  export interface Moving {\n    mouseMovedCount?: number\n    startPosition?: { x: number; y: number }\n    currentView?: CellView | null\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}