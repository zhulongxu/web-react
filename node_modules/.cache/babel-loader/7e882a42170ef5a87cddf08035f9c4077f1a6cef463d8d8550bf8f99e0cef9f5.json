{"ast":null,"code":"export const er = function (vertices, options, edgeView) {\n  const offsetRaw = options.offset || 32;\n  const min = options.min == null ? 16 : options.min;\n  let offset = 0;\n  let direction = options.direction;\n  const sourceBBox = edgeView.sourceBBox;\n  const targetBBox = edgeView.targetBBox;\n  const sourcePoint = sourceBBox.getCenter();\n  const targetPoint = targetBBox.getCenter();\n  if (typeof offsetRaw === 'number') {\n    offset = offsetRaw;\n  }\n  if (direction == null) {\n    let dx = targetBBox.left - sourceBBox.right;\n    let dy = targetBBox.top - sourceBBox.bottom;\n    if (dx >= 0 && dy >= 0) {\n      direction = dx >= dy ? 'L' : 'T';\n    } else if (dx <= 0 && dy >= 0) {\n      dx = sourceBBox.left - targetBBox.right;\n      if (dx >= 0) {\n        direction = dx >= dy ? 'R' : 'T';\n      } else {\n        direction = 'T';\n      }\n    } else if (dx >= 0 && dy <= 0) {\n      dy = sourceBBox.top - targetBBox.bottom;\n      if (dy >= 0) {\n        direction = dx >= dy ? 'L' : 'B';\n      } else {\n        direction = 'L';\n      }\n    } else {\n      dx = sourceBBox.left - targetBBox.right;\n      dy = sourceBBox.top - targetBBox.bottom;\n      if (dx >= 0 && dy >= 0) {\n        direction = dx >= dy ? 'R' : 'B';\n      } else if (dx <= 0 && dy >= 0) {\n        direction = 'B';\n      } else if (dx >= 0 && dy <= 0) {\n        direction = 'R';\n      } else {\n        direction = Math.abs(dx) > Math.abs(dy) ? 'R' : 'B';\n      }\n    }\n  }\n  if (direction === 'H') {\n    direction = targetPoint.x - sourcePoint.x >= 0 ? 'L' : 'R';\n  } else if (direction === 'V') {\n    direction = targetPoint.y - sourcePoint.y >= 0 ? 'T' : 'B';\n  }\n  if (offsetRaw === 'center') {\n    if (direction === 'L') {\n      offset = (targetBBox.left - sourceBBox.right) / 2;\n    } else if (direction === 'R') {\n      offset = (sourceBBox.left - targetBBox.right) / 2;\n    } else if (direction === 'T') {\n      offset = (targetBBox.top - sourceBBox.bottom) / 2;\n    } else if (direction === 'B') {\n      offset = (sourceBBox.top - targetBBox.bottom) / 2;\n    }\n  }\n  let coord;\n  let dim;\n  let factor;\n  const horizontal = direction === 'L' || direction === 'R';\n  if (horizontal) {\n    if (targetPoint.y === sourcePoint.y) {\n      return [...vertices];\n    }\n    factor = direction === 'L' ? 1 : -1;\n    coord = 'x';\n    dim = 'width';\n  } else {\n    if (targetPoint.x === sourcePoint.x) {\n      return [...vertices];\n    }\n    factor = direction === 'T' ? 1 : -1;\n    coord = 'y';\n    dim = 'height';\n  }\n  const source = sourcePoint.clone();\n  const target = targetPoint.clone();\n  source[coord] += factor * (sourceBBox[dim] / 2 + offset);\n  target[coord] -= factor * (targetBBox[dim] / 2 + offset);\n  if (horizontal) {\n    const sourceX = source.x;\n    const targetX = target.x;\n    const sourceDelta = sourceBBox.width / 2 + min;\n    const targetDelta = targetBBox.width / 2 + min;\n    if (targetPoint.x > sourcePoint.x) {\n      if (targetX <= sourceX) {\n        source.x = Math.max(targetX, sourcePoint.x + sourceDelta);\n        target.x = Math.min(sourceX, targetPoint.x - targetDelta);\n      }\n    } else if (targetX >= sourceX) {\n      source.x = Math.min(targetX, sourcePoint.x - sourceDelta);\n      target.x = Math.max(sourceX, targetPoint.x + targetDelta);\n    }\n  } else {\n    const sourceY = source.y;\n    const targetY = target.y;\n    const sourceDelta = sourceBBox.height / 2 + min;\n    const targetDelta = targetBBox.height / 2 + min;\n    if (targetPoint.y > sourcePoint.y) {\n      if (targetY <= sourceY) {\n        source.y = Math.max(targetY, sourcePoint.y + sourceDelta);\n        target.y = Math.min(sourceY, targetPoint.y - targetDelta);\n      }\n    } else if (targetY >= sourceY) {\n      source.y = Math.min(targetY, sourcePoint.y - sourceDelta);\n      target.y = Math.max(sourceY, targetPoint.y + targetDelta);\n    }\n  }\n  return [source.toJSON(), ...vertices, target.toJSON()];\n};","map":{"version":3,"names":["er","vertices","options","edgeView","offsetRaw","offset","min","direction","sourceBBox","targetBBox","sourcePoint","getCenter","targetPoint","dx","left","right","dy","top","bottom","Math","abs","x","y","coord","dim","factor","horizontal","source","clone","target","sourceX","targetX","sourceDelta","width","targetDelta","max","sourceY","targetY","height","toJSON"],"sources":["/home/devbox/project/node_modules/.pnpm/@antv+x6@2.18.1/node_modules/@antv/x6/src/registry/router/er.ts"],"sourcesContent":["import { Router } from './index'\n\nexport interface ErRouterOptions {\n  min?: number\n  offset?: number | 'center'\n  direction?: 'T' | 'B' | 'L' | 'R' | 'H' | 'V'\n}\n\nexport const er: Router.Definition<ErRouterOptions> = function (\n  vertices,\n  options,\n  edgeView,\n) {\n  const offsetRaw = options.offset || 32\n  const min = options.min == null ? 16 : options.min\n\n  let offset = 0\n  let direction = options.direction\n\n  const sourceBBox = edgeView.sourceBBox\n  const targetBBox = edgeView.targetBBox\n  const sourcePoint = sourceBBox.getCenter()\n  const targetPoint = targetBBox.getCenter()\n\n  if (typeof offsetRaw === 'number') {\n    offset = offsetRaw\n  }\n\n  if (direction == null) {\n    let dx = targetBBox.left - sourceBBox.right\n    let dy = targetBBox.top - sourceBBox.bottom\n\n    if (dx >= 0 && dy >= 0) {\n      direction = dx >= dy ? 'L' : 'T'\n    } else if (dx <= 0 && dy >= 0) {\n      dx = sourceBBox.left - targetBBox.right\n      if (dx >= 0) {\n        direction = dx >= dy ? 'R' : 'T'\n      } else {\n        direction = 'T'\n      }\n    } else if (dx >= 0 && dy <= 0) {\n      dy = sourceBBox.top - targetBBox.bottom\n      if (dy >= 0) {\n        direction = dx >= dy ? 'L' : 'B'\n      } else {\n        direction = 'L'\n      }\n    } else {\n      dx = sourceBBox.left - targetBBox.right\n      dy = sourceBBox.top - targetBBox.bottom\n      if (dx >= 0 && dy >= 0) {\n        direction = dx >= dy ? 'R' : 'B'\n      } else if (dx <= 0 && dy >= 0) {\n        direction = 'B'\n      } else if (dx >= 0 && dy <= 0) {\n        direction = 'R'\n      } else {\n        direction = Math.abs(dx) > Math.abs(dy) ? 'R' : 'B'\n      }\n    }\n  }\n\n  if (direction === 'H') {\n    direction = targetPoint.x - sourcePoint.x >= 0 ? 'L' : 'R'\n  } else if (direction === 'V') {\n    direction = targetPoint.y - sourcePoint.y >= 0 ? 'T' : 'B'\n  }\n\n  if (offsetRaw === 'center') {\n    if (direction === 'L') {\n      offset = (targetBBox.left - sourceBBox.right) / 2\n    } else if (direction === 'R') {\n      offset = (sourceBBox.left - targetBBox.right) / 2\n    } else if (direction === 'T') {\n      offset = (targetBBox.top - sourceBBox.bottom) / 2\n    } else if (direction === 'B') {\n      offset = (sourceBBox.top - targetBBox.bottom) / 2\n    }\n  }\n\n  let coord: 'x' | 'y'\n  let dim: 'width' | 'height'\n  let factor\n  const horizontal = direction === 'L' || direction === 'R'\n\n  if (horizontal) {\n    if (targetPoint.y === sourcePoint.y) {\n      return [...vertices]\n    }\n\n    factor = direction === 'L' ? 1 : -1\n    coord = 'x'\n    dim = 'width'\n  } else {\n    if (targetPoint.x === sourcePoint.x) {\n      return [...vertices]\n    }\n\n    factor = direction === 'T' ? 1 : -1\n    coord = 'y'\n    dim = 'height'\n  }\n\n  const source = sourcePoint.clone()\n  const target = targetPoint.clone()\n\n  source[coord] += factor * (sourceBBox[dim] / 2 + offset)\n  target[coord] -= factor * (targetBBox[dim] / 2 + offset)\n\n  if (horizontal) {\n    const sourceX = source.x\n    const targetX = target.x\n    const sourceDelta = sourceBBox.width / 2 + min\n    const targetDelta = targetBBox.width / 2 + min\n    if (targetPoint.x > sourcePoint.x) {\n      if (targetX <= sourceX) {\n        source.x = Math.max(targetX, sourcePoint.x + sourceDelta)\n        target.x = Math.min(sourceX, targetPoint.x - targetDelta)\n      }\n    } else if (targetX >= sourceX) {\n      source.x = Math.min(targetX, sourcePoint.x - sourceDelta)\n      target.x = Math.max(sourceX, targetPoint.x + targetDelta)\n    }\n  } else {\n    const sourceY = source.y\n    const targetY = target.y\n    const sourceDelta = sourceBBox.height / 2 + min\n    const targetDelta = targetBBox.height / 2 + min\n    if (targetPoint.y > sourcePoint.y) {\n      if (targetY <= sourceY) {\n        source.y = Math.max(targetY, sourcePoint.y + sourceDelta)\n        target.y = Math.min(sourceY, targetPoint.y - targetDelta)\n      }\n    } else if (targetY >= sourceY) {\n      source.y = Math.min(targetY, sourcePoint.y - sourceDelta)\n      target.y = Math.max(sourceY, targetPoint.y + targetDelta)\n    }\n  }\n\n  return [source.toJSON(), ...vertices, target.toJSON()]\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}